
EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000004b2  00000526  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000536  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000568  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014a2  00000000  00000000  0000064c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007aa  00000000  00000000  00001aee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006fd  00000000  00000000  00002298  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000184  00000000  00000000  00002998  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000461  00000000  00000000  00002b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007a9  00000000  00000000  00002f7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00003726  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 f4 01 	jmp	0x3e8	; 0x3e8 <__vector_14>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 0a 02 	jmp	0x414	; 0x414 <__vector_19>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 eb       	ldi	r30, 0xB2	; 178
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 2b 02 	call	0x456	; 0x456 <main>
  7a:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <saca_uno>:
	TIFR = 0b00000011; // Clear interruptions
	TIMSK = 0b00000010; // Set interruption. Bit 0: Overflow; Bit 1: Compare
	//sei();
	TCNT0 = 0; //Counts
	OCR0 = 97; //When the compare interruption will be called
	TCCR0 = 0b00001101; //CTC, last 3 bits to set prescaler (1024)
  82:	fc 01       	movw	r30, r24
  84:	40 81       	ld	r20, Z
  86:	21 e0       	ldi	r18, 0x01	; 1
  88:	30 e0       	ldi	r19, 0x00	; 0
  8a:	02 c0       	rjmp	.+4      	; 0x90 <saca_uno+0xe>
  8c:	22 0f       	add	r18, r18
  8e:	33 1f       	adc	r19, r19
  90:	6a 95       	dec	r22
  92:	e2 f7       	brpl	.-8      	; 0x8c <saca_uno+0xa>
  94:	24 2b       	or	r18, r20
  96:	20 83       	st	Z, r18
  98:	08 95       	ret

0000009a <saca_cero>:
  9a:	fc 01       	movw	r30, r24
  9c:	90 81       	ld	r25, Z
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <saca_cero+0xe>
  a4:	22 0f       	add	r18, r18
  a6:	33 1f       	adc	r19, r19
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <saca_cero+0xa>
  ac:	20 95       	com	r18
  ae:	29 23       	and	r18, r25
  b0:	20 83       	st	Z, r18
  b2:	08 95       	ret

000000b4 <LCD_wr_inst_ini>:
  b4:	85 bb       	out	0x15, r24	; 21
  b6:	64 e0       	ldi	r22, 0x04	; 4
  b8:	70 e0       	ldi	r23, 0x00	; 0
  ba:	85 e3       	ldi	r24, 0x35	; 53
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
  c2:	65 e0       	ldi	r22, 0x05	; 5
  c4:	70 e0       	ldi	r23, 0x00	; 0
  c6:	85 e3       	ldi	r24, 0x35	; 53
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
  ce:	66 e0       	ldi	r22, 0x06	; 6
  d0:	70 e0       	ldi	r23, 0x00	; 0
  d2:	85 e3       	ldi	r24, 0x35	; 53
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
  da:	83 ec       	ldi	r24, 0xC3	; 195
  dc:	99 e0       	ldi	r25, 0x09	; 9
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <LCD_wr_inst_ini+0x2a>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <LCD_wr_inst_ini+0x30>
  e4:	00 00       	nop
  e6:	66 e0       	ldi	r22, 0x06	; 6
  e8:	70 e0       	ldi	r23, 0x00	; 0
  ea:	85 e3       	ldi	r24, 0x35	; 53
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
  f2:	08 95       	ret

000000f4 <LCD_wait_flag>:
  f4:	84 b3       	in	r24, 0x14	; 20
  f6:	80 7f       	andi	r24, 0xF0	; 240
  f8:	84 bb       	out	0x14, r24	; 20
  fa:	64 e0       	ldi	r22, 0x04	; 4
  fc:	70 e0       	ldi	r23, 0x00	; 0
  fe:	85 e3       	ldi	r24, 0x35	; 53
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 106:	65 e0       	ldi	r22, 0x05	; 5
 108:	70 e0       	ldi	r23, 0x00	; 0
 10a:	85 e3       	ldi	r24, 0x35	; 53
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
 112:	66 e0       	ldi	r22, 0x06	; 6
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	85 e3       	ldi	r24, 0x35	; 53
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
 11e:	83 ec       	ldi	r24, 0xC3	; 195
 120:	99 e0       	ldi	r25, 0x09	; 9
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <LCD_wait_flag+0x2e>
 126:	00 c0       	rjmp	.+0      	; 0x128 <LCD_wait_flag+0x34>
 128:	00 00       	nop
 12a:	66 e0       	ldi	r22, 0x06	; 6
 12c:	70 e0       	ldi	r23, 0x00	; 0
 12e:	85 e3       	ldi	r24, 0x35	; 53
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 136:	9b 99       	sbic	0x13, 3	; 19
 138:	17 c0       	rjmp	.+46     	; 0x168 <LCD_wait_flag+0x74>
 13a:	93 e0       	ldi	r25, 0x03	; 3
 13c:	9a 95       	dec	r25
 13e:	f1 f7       	brne	.-4      	; 0x13c <LCD_wait_flag+0x48>
 140:	00 00       	nop
 142:	66 e0       	ldi	r22, 0x06	; 6
 144:	70 e0       	ldi	r23, 0x00	; 0
 146:	85 e3       	ldi	r24, 0x35	; 53
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
 14e:	83 ec       	ldi	r24, 0xC3	; 195
 150:	99 e0       	ldi	r25, 0x09	; 9
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <LCD_wait_flag+0x5e>
 156:	00 c0       	rjmp	.+0      	; 0x158 <LCD_wait_flag+0x64>
 158:	00 00       	nop
 15a:	66 e0       	ldi	r22, 0x06	; 6
 15c:	70 e0       	ldi	r23, 0x00	; 0
 15e:	85 e3       	ldi	r24, 0x35	; 53
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 166:	d5 cf       	rjmp	.-86     	; 0x112 <LCD_wait_flag+0x1e>
 168:	66 e0       	ldi	r22, 0x06	; 6
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	85 e3       	ldi	r24, 0x35	; 53
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
 174:	83 ec       	ldi	r24, 0xC3	; 195
 176:	99 e0       	ldi	r25, 0x09	; 9
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <LCD_wait_flag+0x84>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <LCD_wait_flag+0x8a>
 17e:	00 00       	nop
 180:	66 e0       	ldi	r22, 0x06	; 6
 182:	70 e0       	ldi	r23, 0x00	; 0
 184:	85 e3       	ldi	r24, 0x35	; 53
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 18c:	64 e0       	ldi	r22, 0x04	; 4
 18e:	70 e0       	ldi	r23, 0x00	; 0
 190:	85 e3       	ldi	r24, 0x35	; 53
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 198:	65 e0       	ldi	r22, 0x05	; 5
 19a:	70 e0       	ldi	r23, 0x00	; 0
 19c:	85 e3       	ldi	r24, 0x35	; 53
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 1a4:	84 b3       	in	r24, 0x14	; 20
 1a6:	8f 67       	ori	r24, 0x7F	; 127
 1a8:	84 bb       	out	0x14, r24	; 20
 1aa:	08 95       	ret

000001ac <LCD_wr_char>:
 1ac:	cf 93       	push	r28
 1ae:	c8 2f       	mov	r28, r24
 1b0:	82 95       	swap	r24
 1b2:	8f 70       	andi	r24, 0x0F	; 15
 1b4:	85 bb       	out	0x15, r24	; 21
 1b6:	64 e0       	ldi	r22, 0x04	; 4
 1b8:	70 e0       	ldi	r23, 0x00	; 0
 1ba:	85 e3       	ldi	r24, 0x35	; 53
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
 1c2:	65 e0       	ldi	r22, 0x05	; 5
 1c4:	70 e0       	ldi	r23, 0x00	; 0
 1c6:	85 e3       	ldi	r24, 0x35	; 53
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 1ce:	66 e0       	ldi	r22, 0x06	; 6
 1d0:	70 e0       	ldi	r23, 0x00	; 0
 1d2:	85 e3       	ldi	r24, 0x35	; 53
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
 1da:	83 ec       	ldi	r24, 0xC3	; 195
 1dc:	99 e0       	ldi	r25, 0x09	; 9
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <LCD_wr_char+0x32>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <LCD_wr_char+0x38>
 1e4:	00 00       	nop
 1e6:	66 e0       	ldi	r22, 0x06	; 6
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	85 e3       	ldi	r24, 0x35	; 53
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 1f2:	cf 70       	andi	r28, 0x0F	; 15
 1f4:	c5 bb       	out	0x15, r28	; 21
 1f6:	64 e0       	ldi	r22, 0x04	; 4
 1f8:	70 e0       	ldi	r23, 0x00	; 0
 1fa:	85 e3       	ldi	r24, 0x35	; 53
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
 202:	65 e0       	ldi	r22, 0x05	; 5
 204:	70 e0       	ldi	r23, 0x00	; 0
 206:	85 e3       	ldi	r24, 0x35	; 53
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 20e:	66 e0       	ldi	r22, 0x06	; 6
 210:	70 e0       	ldi	r23, 0x00	; 0
 212:	85 e3       	ldi	r24, 0x35	; 53
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
 21a:	83 ec       	ldi	r24, 0xC3	; 195
 21c:	99 e0       	ldi	r25, 0x09	; 9
 21e:	01 97       	sbiw	r24, 0x01	; 1
 220:	f1 f7       	brne	.-4      	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
 222:	00 c0       	rjmp	.+0      	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
 224:	00 00       	nop
 226:	66 e0       	ldi	r22, 0x06	; 6
 228:	70 e0       	ldi	r23, 0x00	; 0
 22a:	85 e3       	ldi	r24, 0x35	; 53
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 232:	64 e0       	ldi	r22, 0x04	; 4
 234:	70 e0       	ldi	r23, 0x00	; 0
 236:	85 e3       	ldi	r24, 0x35	; 53
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 23e:	0e 94 7a 00 	call	0xf4	; 0xf4 <LCD_wait_flag>
 242:	cf 91       	pop	r28
 244:	08 95       	ret

00000246 <LCD_wr_instruction>:
 246:	cf 93       	push	r28
 248:	c8 2f       	mov	r28, r24
 24a:	82 95       	swap	r24
 24c:	8f 70       	andi	r24, 0x0F	; 15
 24e:	85 bb       	out	0x15, r24	; 21
 250:	64 e0       	ldi	r22, 0x04	; 4
 252:	70 e0       	ldi	r23, 0x00	; 0
 254:	85 e3       	ldi	r24, 0x35	; 53
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 25c:	65 e0       	ldi	r22, 0x05	; 5
 25e:	70 e0       	ldi	r23, 0x00	; 0
 260:	85 e3       	ldi	r24, 0x35	; 53
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 268:	66 e0       	ldi	r22, 0x06	; 6
 26a:	70 e0       	ldi	r23, 0x00	; 0
 26c:	85 e3       	ldi	r24, 0x35	; 53
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
 274:	83 ec       	ldi	r24, 0xC3	; 195
 276:	99 e0       	ldi	r25, 0x09	; 9
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <LCD_wr_instruction+0x32>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <LCD_wr_instruction+0x38>
 27e:	00 00       	nop
 280:	66 e0       	ldi	r22, 0x06	; 6
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	85 e3       	ldi	r24, 0x35	; 53
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 28c:	cf 70       	andi	r28, 0x0F	; 15
 28e:	c5 bb       	out	0x15, r28	; 21
 290:	64 e0       	ldi	r22, 0x04	; 4
 292:	70 e0       	ldi	r23, 0x00	; 0
 294:	85 e3       	ldi	r24, 0x35	; 53
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 29c:	65 e0       	ldi	r22, 0x05	; 5
 29e:	70 e0       	ldi	r23, 0x00	; 0
 2a0:	85 e3       	ldi	r24, 0x35	; 53
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 2a8:	66 e0       	ldi	r22, 0x06	; 6
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	85 e3       	ldi	r24, 0x35	; 53
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0e 94 41 00 	call	0x82	; 0x82 <saca_uno>
 2b4:	83 ec       	ldi	r24, 0xC3	; 195
 2b6:	99 e0       	ldi	r25, 0x09	; 9
 2b8:	01 97       	sbiw	r24, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <LCD_wr_instruction+0x72>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <LCD_wr_instruction+0x78>
 2be:	00 00       	nop
 2c0:	66 e0       	ldi	r22, 0x06	; 6
 2c2:	70 e0       	ldi	r23, 0x00	; 0
 2c4:	85 e3       	ldi	r24, 0x35	; 53
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 4d 00 	call	0x9a	; 0x9a <saca_cero>
 2cc:	0e 94 7a 00 	call	0xf4	; 0xf4 <LCD_wait_flag>
 2d0:	cf 91       	pop	r28
 2d2:	08 95       	ret

000002d4 <LCD_init>:
 2d4:	8f e7       	ldi	r24, 0x7F	; 127
 2d6:	84 bb       	out	0x14, r24	; 20
 2d8:	85 ea       	ldi	r24, 0xA5	; 165
 2da:	9e e0       	ldi	r25, 0x0E	; 14
 2dc:	01 97       	sbiw	r24, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <LCD_init+0x8>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <LCD_init+0xe>
 2e2:	00 00       	nop
 2e4:	83 e0       	ldi	r24, 0x03	; 3
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_wr_inst_ini>
 2ec:	81 ee       	ldi	r24, 0xE1	; 225
 2ee:	94 e0       	ldi	r25, 0x04	; 4
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <LCD_init+0x1c>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <LCD_init+0x22>
 2f6:	00 00       	nop
 2f8:	83 e0       	ldi	r24, 0x03	; 3
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_wr_inst_ini>
 300:	91 e2       	ldi	r25, 0x21	; 33
 302:	9a 95       	dec	r25
 304:	f1 f7       	brne	.-4      	; 0x302 <LCD_init+0x2e>
 306:	00 00       	nop
 308:	83 e0       	ldi	r24, 0x03	; 3
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_wr_inst_ini>
 310:	81 e2       	ldi	r24, 0x21	; 33
 312:	8a 95       	dec	r24
 314:	f1 f7       	brne	.-4      	; 0x312 <LCD_init+0x3e>
 316:	00 00       	nop
 318:	82 e0       	ldi	r24, 0x02	; 2
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_wr_inst_ini>
 320:	91 e2       	ldi	r25, 0x21	; 33
 322:	9a 95       	dec	r25
 324:	f1 f7       	brne	.-4      	; 0x322 <LCD_init+0x4e>
 326:	00 00       	nop
 328:	88 e2       	ldi	r24, 0x28	; 40
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	0e 94 23 01 	call	0x246	; 0x246 <LCD_wr_instruction>
 330:	88 e0       	ldi	r24, 0x08	; 8
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	0e 94 23 01 	call	0x246	; 0x246 <LCD_wr_instruction>
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	0e 94 23 01 	call	0x246	; 0x246 <LCD_wr_instruction>
 340:	86 e0       	ldi	r24, 0x06	; 6
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	0e 94 23 01 	call	0x246	; 0x246 <LCD_wr_instruction>
 348:	8c e0       	ldi	r24, 0x0C	; 12
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 23 01 	call	0x246	; 0x246 <LCD_wr_instruction>
 350:	08 95       	ret

00000352 <hastaTecla>:
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	43 2f       	mov	r20, r19
 356:	50 e0       	ldi	r21, 0x00	; 0
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	03 2e       	mov	r0, r19
 35e:	02 c0       	rjmp	.+4      	; 0x364 <hastaTecla+0x12>
 360:	88 0f       	add	r24, r24
 362:	99 1f       	adc	r25, r25
 364:	0a 94       	dec	r0
 366:	e2 f7       	brpl	.-8      	; 0x360 <hastaTecla+0xe>
 368:	80 95       	com	r24
 36a:	82 bb       	out	0x12, r24	; 18
 36c:	00 00       	nop
 36e:	00 00       	nop
 370:	24 e0       	ldi	r18, 0x04	; 4
 372:	30 c0       	rjmp	.+96     	; 0x3d4 <hastaTecla+0x82>
 374:	80 b3       	in	r24, 0x10	; 16
 376:	62 2f       	mov	r22, r18
 378:	70 e0       	ldi	r23, 0x00	; 0
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	02 2e       	mov	r0, r18
 37e:	02 c0       	rjmp	.+4      	; 0x384 <hastaTecla+0x32>
 380:	95 95       	asr	r25
 382:	87 95       	ror	r24
 384:	0a 94       	dec	r0
 386:	e2 f7       	brpl	.-8      	; 0x380 <hastaTecla+0x2e>
 388:	80 fd       	sbrc	r24, 0
 38a:	23 c0       	rjmp	.+70     	; 0x3d2 <hastaTecla+0x80>
 38c:	83 ed       	ldi	r24, 0xD3	; 211
 38e:	90 e3       	ldi	r25, 0x30	; 48
 390:	01 97       	sbiw	r24, 0x01	; 1
 392:	f1 f7       	brne	.-4      	; 0x390 <hastaTecla+0x3e>
 394:	00 c0       	rjmp	.+0      	; 0x396 <hastaTecla+0x44>
 396:	00 00       	nop
 398:	80 b3       	in	r24, 0x10	; 16
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	06 2e       	mov	r0, r22
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <hastaTecla+0x52>
 3a0:	95 95       	asr	r25
 3a2:	87 95       	ror	r24
 3a4:	0a 94       	dec	r0
 3a6:	e2 f7       	brpl	.-8      	; 0x3a0 <hastaTecla+0x4e>
 3a8:	80 ff       	sbrs	r24, 0
 3aa:	f6 cf       	rjmp	.-20     	; 0x398 <hastaTecla+0x46>
 3ac:	83 ed       	ldi	r24, 0xD3	; 211
 3ae:	90 e3       	ldi	r25, 0x30	; 48
 3b0:	01 97       	sbiw	r24, 0x01	; 1
 3b2:	f1 f7       	brne	.-4      	; 0x3b0 <hastaTecla+0x5e>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <hastaTecla+0x64>
 3b6:	00 00       	nop
 3b8:	64 50       	subi	r22, 0x04	; 4
 3ba:	71 09       	sbc	r23, r1
 3bc:	fa 01       	movw	r30, r20
 3be:	ee 0f       	add	r30, r30
 3c0:	ff 1f       	adc	r31, r31
 3c2:	ee 0f       	add	r30, r30
 3c4:	ff 1f       	adc	r31, r31
 3c6:	e0 5a       	subi	r30, 0xA0	; 160
 3c8:	ff 4f       	sbci	r31, 0xFF	; 255
 3ca:	e6 0f       	add	r30, r22
 3cc:	f7 1f       	adc	r31, r23
 3ce:	80 81       	ld	r24, Z
 3d0:	08 95       	ret
 3d2:	2f 5f       	subi	r18, 0xFF	; 255
 3d4:	28 30       	cpi	r18, 0x08	; 8
 3d6:	70 f2       	brcs	.-100    	; 0x374 <hastaTecla+0x22>
 3d8:	3f 5f       	subi	r19, 0xFF	; 255
 3da:	33 70       	andi	r19, 0x03	; 3
 3dc:	bb cf       	rjmp	.-138    	; 0x354 <hastaTecla+0x2>

000003de <KB_init>:
 3de:	8f e0       	ldi	r24, 0x0F	; 15
 3e0:	81 bb       	out	0x11, r24	; 17
 3e2:	8f ef       	ldi	r24, 0xFF	; 255
 3e4:	82 bb       	out	0x12, r24	; 18
 3e6:	08 95       	ret

000003e8 <__vector_14>:
 3e8:	1f 92       	push	r1
 3ea:	0f 92       	push	r0
 3ec:	0f b6       	in	r0, 0x3f	; 63
 3ee:	0f 92       	push	r0
 3f0:	11 24       	eor	r1, r1
 3f2:	8f 93       	push	r24
 3f4:	9f 93       	push	r25
 3f6:	84 b1       	in	r24, 0x04	; 4
 3f8:	95 b1       	in	r25, 0x05	; 5
 3fa:	96 95       	lsr	r25
 3fc:	87 95       	ror	r24
 3fe:	96 95       	lsr	r25
 400:	87 95       	ror	r24
 402:	83 bd       	out	0x23, r24	; 35
 404:	85 bb       	out	0x15, r24	; 21
 406:	9f 91       	pop	r25
 408:	8f 91       	pop	r24
 40a:	0f 90       	pop	r0
 40c:	0f be       	out	0x3f, r0	; 63
 40e:	0f 90       	pop	r0
 410:	1f 90       	pop	r1
 412:	18 95       	reti

00000414 <__vector_19>:
}
ISR(TIMER0_COMP_vect){
 414:	1f 92       	push	r1
 416:	0f 92       	push	r0
 418:	0f b6       	in	r0, 0x3f	; 63
 41a:	0f 92       	push	r0
 41c:	11 24       	eor	r1, r1
	
}
 41e:	0f 90       	pop	r0
 420:	0f be       	out	0x3f, r0	; 63
 422:	0f 90       	pop	r0
 424:	1f 90       	pop	r1
 426:	18 95       	reti

00000428 <EEPROM_write>:

void EEPROM_write(uint8_t address, uint8_t data) {
	while(isSet(EECR, EEWE));
 428:	e1 99       	sbic	0x1c, 1	; 28
 42a:	fe cf       	rjmp	.-4      	; 0x428 <EEPROM_write>
	EEAR = address;
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	9f bb       	out	0x1f, r25	; 31
 430:	8e bb       	out	0x1e, r24	; 30
	EEDR = data;
 432:	6d bb       	out	0x1d, r22	; 29
	EECR = setBit(EECR, EEMWE);
 434:	8c b3       	in	r24, 0x1c	; 28
 436:	84 60       	ori	r24, 0x04	; 4
 438:	8c bb       	out	0x1c, r24	; 28
	EECR = setBit(EECR, EEWE);
 43a:	8c b3       	in	r24, 0x1c	; 28
 43c:	82 60       	ori	r24, 0x02	; 2
 43e:	8c bb       	out	0x1c, r24	; 28
 440:	08 95       	ret

00000442 <EEPROM_read>:
}
uint8_t EEPROM_read(uint8_t address) {
	while(isSet(EECR, EEWE));
 442:	e1 99       	sbic	0x1c, 1	; 28
 444:	fe cf       	rjmp	.-4      	; 0x442 <EEPROM_read>
	EEAR = address;
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	9f bb       	out	0x1f, r25	; 31
 44a:	8e bb       	out	0x1e, r24	; 30
	EECR = setBit(EECR, EERE);
 44c:	8c b3       	in	r24, 0x1c	; 28
 44e:	81 60       	ori	r24, 0x01	; 1
 450:	8c bb       	out	0x1c, r24	; 28
	return EEDR;
 452:	8d b3       	in	r24, 0x1d	; 29
}
 454:	08 95       	ret

00000456 <main>:

int main(void)
{
	LCD_init();
 456:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <LCD_init>
	KB_init(); 
 45a:	0e 94 ef 01 	call	0x3de	; 0x3de <KB_init>
	uint8_t n = 4;
	for(;;){
		LCD_wr_instruction(0b10001100);
 45e:	8c e8       	ldi	r24, 0x8C	; 140
 460:	0e 94 23 01 	call	0x246	; 0x246 <LCD_wr_instruction>
		for(uint16_t i = 0; i < n; i++)
 464:	c0 e0       	ldi	r28, 0x00	; 0
 466:	d0 e0       	ldi	r29, 0x00	; 0
 468:	06 c0       	rjmp	.+12     	; 0x476 <__stack+0x17>
			LCD_wr_char(EEPROM_read(i));
 46a:	8c 2f       	mov	r24, r28
 46c:	0e 94 21 02 	call	0x442	; 0x442 <EEPROM_read>
 470:	0e 94 d6 00 	call	0x1ac	; 0x1ac <LCD_wr_char>
	LCD_init();
	KB_init(); 
	uint8_t n = 4;
	for(;;){
		LCD_wr_instruction(0b10001100);
		for(uint16_t i = 0; i < n; i++)
 474:	21 96       	adiw	r28, 0x01	; 1
 476:	c4 30       	cpi	r28, 0x04	; 4
 478:	d1 05       	cpc	r29, r1
 47a:	b8 f3       	brcs	.-18     	; 0x46a <__stack+0xb>
			LCD_wr_char(EEPROM_read(i));
		uint8_t t = hastaTecla();
 47c:	0e 94 a9 01 	call	0x352	; 0x352 <hastaTecla>
 480:	18 2f       	mov	r17, r24
		DDRA = 0xff;
 482:	8f ef       	ldi	r24, 0xFF	; 255
 484:	8a bb       	out	0x1a, r24	; 26
		PORTA = t;
 486:	1b bb       	out	0x1b, r17	; 27
		for(uint16_t i = n - 1; i > 0; i--) {
 488:	c3 e0       	ldi	r28, 0x03	; 3
 48a:	d0 e0       	ldi	r29, 0x00	; 0
 48c:	09 c0       	rjmp	.+18     	; 0x4a0 <__stack+0x41>
			uint8_t p = EEPROM_read(i - 1);
 48e:	8c 2f       	mov	r24, r28
 490:	81 50       	subi	r24, 0x01	; 1
 492:	0e 94 21 02 	call	0x442	; 0x442 <EEPROM_read>
			EEPROM_write(i, p);
 496:	68 2f       	mov	r22, r24
 498:	8c 2f       	mov	r24, r28
 49a:	0e 94 14 02 	call	0x428	; 0x428 <EEPROM_write>
		for(uint16_t i = 0; i < n; i++)
			LCD_wr_char(EEPROM_read(i));
		uint8_t t = hastaTecla();
		DDRA = 0xff;
		PORTA = t;
		for(uint16_t i = n - 1; i > 0; i--) {
 49e:	21 97       	sbiw	r28, 0x01	; 1
 4a0:	20 97       	sbiw	r28, 0x00	; 0
 4a2:	a9 f7       	brne	.-22     	; 0x48e <__stack+0x2f>
			uint8_t p = EEPROM_read(i - 1);
			EEPROM_write(i, p);
		}
		EEPROM_write(0, t);
 4a4:	61 2f       	mov	r22, r17
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	0e 94 14 02 	call	0x428	; 0x428 <EEPROM_write>
	}
 4ac:	d8 cf       	rjmp	.-80     	; 0x45e <main+0x8>

000004ae <_exit>:
 4ae:	f8 94       	cli

000004b0 <__stop_program>:
 4b0:	ff cf       	rjmp	.-2      	; 0x4b0 <__stop_program>
