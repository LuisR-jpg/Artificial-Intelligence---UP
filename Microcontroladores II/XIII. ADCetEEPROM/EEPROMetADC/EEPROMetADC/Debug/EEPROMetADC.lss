
EEPROMetADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000048c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  0000048c  00000520  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080007a  0080007a  0000053a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000053a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000056c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  000005a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001414  00000000  00000000  00000650  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000078a  00000000  00000000  00001a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006b6  00000000  00000000  000021ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  000028a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000471  00000000  00000000  00002a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ad  00000000  00000000  00002ecd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  0000367a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__vector_14>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 2d 02 	jmp	0x45a	; 0x45a <__vector_19>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e8       	ldi	r30, 0x8C	; 140
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 37       	cpi	r26, 0x7A	; 122
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e7       	ldi	r26, 0x7A	; 122
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 37       	cpi	r26, 0x7C	; 124
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 37 02 	call	0x46e	; 0x46e <main>
  8a:	0c 94 44 02 	jmp	0x488	; 0x488 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <saca_uno>:
				Fmicro/Divisor has to be between the valid range.
					1MHz/8 = 125kHz
		*/
			
	DDRADC = 0b00000000;
	PORTADC = 0b00000000; //ADC doesnt need pull up
  92:	fc 01       	movw	r30, r24
  94:	40 81       	ld	r20, Z
  96:	21 e0       	ldi	r18, 0x01	; 1
  98:	30 e0       	ldi	r19, 0x00	; 0
  9a:	02 c0       	rjmp	.+4      	; 0xa0 <saca_uno+0xe>
  9c:	22 0f       	add	r18, r18
  9e:	33 1f       	adc	r19, r19
  a0:	6a 95       	dec	r22
  a2:	e2 f7       	brpl	.-8      	; 0x9c <saca_uno+0xa>
  a4:	24 2b       	or	r18, r20
  a6:	20 83       	st	Z, r18
  a8:	08 95       	ret

000000aa <saca_cero>:
  aa:	fc 01       	movw	r30, r24
  ac:	90 81       	ld	r25, Z
  ae:	21 e0       	ldi	r18, 0x01	; 1
  b0:	30 e0       	ldi	r19, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <saca_cero+0xe>
  b4:	22 0f       	add	r18, r18
  b6:	33 1f       	adc	r19, r19
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <saca_cero+0xa>
  bc:	20 95       	com	r18
  be:	29 23       	and	r18, r25
  c0:	20 83       	st	Z, r18
  c2:	08 95       	ret

000000c4 <LCD_wr_inst_ini>:
  c4:	85 bb       	out	0x15, r24	; 21
  c6:	64 e0       	ldi	r22, 0x04	; 4
  c8:	70 e0       	ldi	r23, 0x00	; 0
  ca:	85 e3       	ldi	r24, 0x35	; 53
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
  d2:	65 e0       	ldi	r22, 0x05	; 5
  d4:	70 e0       	ldi	r23, 0x00	; 0
  d6:	85 e3       	ldi	r24, 0x35	; 53
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
  de:	66 e0       	ldi	r22, 0x06	; 6
  e0:	70 e0       	ldi	r23, 0x00	; 0
  e2:	85 e3       	ldi	r24, 0x35	; 53
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
  ea:	83 ec       	ldi	r24, 0xC3	; 195
  ec:	99 e0       	ldi	r25, 0x09	; 9
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <LCD_wr_inst_ini+0x2a>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <LCD_wr_inst_ini+0x30>
  f4:	00 00       	nop
  f6:	66 e0       	ldi	r22, 0x06	; 6
  f8:	70 e0       	ldi	r23, 0x00	; 0
  fa:	85 e3       	ldi	r24, 0x35	; 53
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 102:	08 95       	ret

00000104 <LCD_wait_flag>:
 104:	84 b3       	in	r24, 0x14	; 20
 106:	80 7f       	andi	r24, 0xF0	; 240
 108:	84 bb       	out	0x14, r24	; 20
 10a:	64 e0       	ldi	r22, 0x04	; 4
 10c:	70 e0       	ldi	r23, 0x00	; 0
 10e:	85 e3       	ldi	r24, 0x35	; 53
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 116:	65 e0       	ldi	r22, 0x05	; 5
 118:	70 e0       	ldi	r23, 0x00	; 0
 11a:	85 e3       	ldi	r24, 0x35	; 53
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
 122:	66 e0       	ldi	r22, 0x06	; 6
 124:	70 e0       	ldi	r23, 0x00	; 0
 126:	85 e3       	ldi	r24, 0x35	; 53
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
 12e:	83 ec       	ldi	r24, 0xC3	; 195
 130:	99 e0       	ldi	r25, 0x09	; 9
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <LCD_wait_flag+0x2e>
 136:	00 c0       	rjmp	.+0      	; 0x138 <LCD_wait_flag+0x34>
 138:	00 00       	nop
 13a:	66 e0       	ldi	r22, 0x06	; 6
 13c:	70 e0       	ldi	r23, 0x00	; 0
 13e:	85 e3       	ldi	r24, 0x35	; 53
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 146:	9b 99       	sbic	0x13, 3	; 19
 148:	17 c0       	rjmp	.+46     	; 0x178 <LCD_wait_flag+0x74>
 14a:	93 e0       	ldi	r25, 0x03	; 3
 14c:	9a 95       	dec	r25
 14e:	f1 f7       	brne	.-4      	; 0x14c <LCD_wait_flag+0x48>
 150:	00 00       	nop
 152:	66 e0       	ldi	r22, 0x06	; 6
 154:	70 e0       	ldi	r23, 0x00	; 0
 156:	85 e3       	ldi	r24, 0x35	; 53
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
 15e:	83 ec       	ldi	r24, 0xC3	; 195
 160:	99 e0       	ldi	r25, 0x09	; 9
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <LCD_wait_flag+0x5e>
 166:	00 c0       	rjmp	.+0      	; 0x168 <LCD_wait_flag+0x64>
 168:	00 00       	nop
 16a:	66 e0       	ldi	r22, 0x06	; 6
 16c:	70 e0       	ldi	r23, 0x00	; 0
 16e:	85 e3       	ldi	r24, 0x35	; 53
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 176:	d5 cf       	rjmp	.-86     	; 0x122 <LCD_wait_flag+0x1e>
 178:	66 e0       	ldi	r22, 0x06	; 6
 17a:	70 e0       	ldi	r23, 0x00	; 0
 17c:	85 e3       	ldi	r24, 0x35	; 53
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
 184:	83 ec       	ldi	r24, 0xC3	; 195
 186:	99 e0       	ldi	r25, 0x09	; 9
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <LCD_wait_flag+0x84>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <LCD_wait_flag+0x8a>
 18e:	00 00       	nop
 190:	66 e0       	ldi	r22, 0x06	; 6
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	85 e3       	ldi	r24, 0x35	; 53
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 19c:	64 e0       	ldi	r22, 0x04	; 4
 19e:	70 e0       	ldi	r23, 0x00	; 0
 1a0:	85 e3       	ldi	r24, 0x35	; 53
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 1a8:	65 e0       	ldi	r22, 0x05	; 5
 1aa:	70 e0       	ldi	r23, 0x00	; 0
 1ac:	85 e3       	ldi	r24, 0x35	; 53
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 1b4:	84 b3       	in	r24, 0x14	; 20
 1b6:	8f 67       	ori	r24, 0x7F	; 127
 1b8:	84 bb       	out	0x14, r24	; 20
 1ba:	08 95       	ret

000001bc <LCD_wr_char>:
 1bc:	cf 93       	push	r28
 1be:	c8 2f       	mov	r28, r24
 1c0:	82 95       	swap	r24
 1c2:	8f 70       	andi	r24, 0x0F	; 15
 1c4:	85 bb       	out	0x15, r24	; 21
 1c6:	64 e0       	ldi	r22, 0x04	; 4
 1c8:	70 e0       	ldi	r23, 0x00	; 0
 1ca:	85 e3       	ldi	r24, 0x35	; 53
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
 1d2:	65 e0       	ldi	r22, 0x05	; 5
 1d4:	70 e0       	ldi	r23, 0x00	; 0
 1d6:	85 e3       	ldi	r24, 0x35	; 53
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 1de:	66 e0       	ldi	r22, 0x06	; 6
 1e0:	70 e0       	ldi	r23, 0x00	; 0
 1e2:	85 e3       	ldi	r24, 0x35	; 53
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
 1ea:	83 ec       	ldi	r24, 0xC3	; 195
 1ec:	99 e0       	ldi	r25, 0x09	; 9
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <LCD_wr_char+0x32>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <LCD_wr_char+0x38>
 1f4:	00 00       	nop
 1f6:	66 e0       	ldi	r22, 0x06	; 6
 1f8:	70 e0       	ldi	r23, 0x00	; 0
 1fa:	85 e3       	ldi	r24, 0x35	; 53
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 202:	cf 70       	andi	r28, 0x0F	; 15
 204:	c5 bb       	out	0x15, r28	; 21
 206:	64 e0       	ldi	r22, 0x04	; 4
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	85 e3       	ldi	r24, 0x35	; 53
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
 212:	65 e0       	ldi	r22, 0x05	; 5
 214:	70 e0       	ldi	r23, 0x00	; 0
 216:	85 e3       	ldi	r24, 0x35	; 53
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 21e:	66 e0       	ldi	r22, 0x06	; 6
 220:	70 e0       	ldi	r23, 0x00	; 0
 222:	85 e3       	ldi	r24, 0x35	; 53
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
 22a:	83 ec       	ldi	r24, 0xC3	; 195
 22c:	99 e0       	ldi	r25, 0x09	; 9
 22e:	01 97       	sbiw	r24, 0x01	; 1
 230:	f1 f7       	brne	.-4      	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
 232:	00 c0       	rjmp	.+0      	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
 234:	00 00       	nop
 236:	66 e0       	ldi	r22, 0x06	; 6
 238:	70 e0       	ldi	r23, 0x00	; 0
 23a:	85 e3       	ldi	r24, 0x35	; 53
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 242:	64 e0       	ldi	r22, 0x04	; 4
 244:	70 e0       	ldi	r23, 0x00	; 0
 246:	85 e3       	ldi	r24, 0x35	; 53
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 24e:	0e 94 82 00 	call	0x104	; 0x104 <LCD_wait_flag>
 252:	cf 91       	pop	r28
 254:	08 95       	ret

00000256 <LCD_wr_string>:
 256:	cf 93       	push	r28
 258:	df 93       	push	r29
 25a:	fc 01       	movw	r30, r24
 25c:	04 c0       	rjmp	.+8      	; 0x266 <LCD_wr_string+0x10>
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	0e 94 de 00 	call	0x1bc	; 0x1bc <LCD_wr_char>
 264:	fe 01       	movw	r30, r28
 266:	ef 01       	movw	r28, r30
 268:	21 96       	adiw	r28, 0x01	; 1
 26a:	80 81       	ld	r24, Z
 26c:	81 11       	cpse	r24, r1
 26e:	f7 cf       	rjmp	.-18     	; 0x25e <LCD_wr_string+0x8>
 270:	df 91       	pop	r29
 272:	cf 91       	pop	r28
 274:	08 95       	ret

00000276 <LCD_wr_instruction>:
 276:	cf 93       	push	r28
 278:	c8 2f       	mov	r28, r24
 27a:	82 95       	swap	r24
 27c:	8f 70       	andi	r24, 0x0F	; 15
 27e:	85 bb       	out	0x15, r24	; 21
 280:	64 e0       	ldi	r22, 0x04	; 4
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	85 e3       	ldi	r24, 0x35	; 53
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 28c:	65 e0       	ldi	r22, 0x05	; 5
 28e:	70 e0       	ldi	r23, 0x00	; 0
 290:	85 e3       	ldi	r24, 0x35	; 53
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 298:	66 e0       	ldi	r22, 0x06	; 6
 29a:	70 e0       	ldi	r23, 0x00	; 0
 29c:	85 e3       	ldi	r24, 0x35	; 53
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
 2a4:	83 ec       	ldi	r24, 0xC3	; 195
 2a6:	99 e0       	ldi	r25, 0x09	; 9
 2a8:	01 97       	sbiw	r24, 0x01	; 1
 2aa:	f1 f7       	brne	.-4      	; 0x2a8 <LCD_wr_instruction+0x32>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <LCD_wr_instruction+0x38>
 2ae:	00 00       	nop
 2b0:	66 e0       	ldi	r22, 0x06	; 6
 2b2:	70 e0       	ldi	r23, 0x00	; 0
 2b4:	85 e3       	ldi	r24, 0x35	; 53
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 2bc:	cf 70       	andi	r28, 0x0F	; 15
 2be:	c5 bb       	out	0x15, r28	; 21
 2c0:	64 e0       	ldi	r22, 0x04	; 4
 2c2:	70 e0       	ldi	r23, 0x00	; 0
 2c4:	85 e3       	ldi	r24, 0x35	; 53
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 2cc:	65 e0       	ldi	r22, 0x05	; 5
 2ce:	70 e0       	ldi	r23, 0x00	; 0
 2d0:	85 e3       	ldi	r24, 0x35	; 53
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 2d8:	66 e0       	ldi	r22, 0x06	; 6
 2da:	70 e0       	ldi	r23, 0x00	; 0
 2dc:	85 e3       	ldi	r24, 0x35	; 53
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 49 00 	call	0x92	; 0x92 <saca_uno>
 2e4:	83 ec       	ldi	r24, 0xC3	; 195
 2e6:	99 e0       	ldi	r25, 0x09	; 9
 2e8:	01 97       	sbiw	r24, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <LCD_wr_instruction+0x72>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <LCD_wr_instruction+0x78>
 2ee:	00 00       	nop
 2f0:	66 e0       	ldi	r22, 0x06	; 6
 2f2:	70 e0       	ldi	r23, 0x00	; 0
 2f4:	85 e3       	ldi	r24, 0x35	; 53
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	0e 94 55 00 	call	0xaa	; 0xaa <saca_cero>
 2fc:	0e 94 82 00 	call	0x104	; 0x104 <LCD_wait_flag>
 300:	cf 91       	pop	r28
 302:	08 95       	ret

00000304 <LCD_wr_lines>:
 304:	0f 93       	push	r16
 306:	1f 93       	push	r17
 308:	cf 93       	push	r28
 30a:	df 93       	push	r29
 30c:	8c 01       	movw	r16, r24
 30e:	eb 01       	movw	r28, r22
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_wr_instruction>
 318:	82 e0       	ldi	r24, 0x02	; 2
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_wr_instruction>
 320:	c8 01       	movw	r24, r16
 322:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_wr_string>
 326:	80 ec       	ldi	r24, 0xC0	; 192
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_wr_instruction>
 32e:	ce 01       	movw	r24, r28
 330:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_wr_string>
 334:	df 91       	pop	r29
 336:	cf 91       	pop	r28
 338:	1f 91       	pop	r17
 33a:	0f 91       	pop	r16
 33c:	08 95       	ret

0000033e <LCD_init>:
 33e:	8f e7       	ldi	r24, 0x7F	; 127
 340:	84 bb       	out	0x14, r24	; 20
 342:	85 ea       	ldi	r24, 0xA5	; 165
 344:	9e e0       	ldi	r25, 0x0E	; 14
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	f1 f7       	brne	.-4      	; 0x346 <LCD_init+0x8>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <LCD_init+0xe>
 34c:	00 00       	nop
 34e:	83 e0       	ldi	r24, 0x03	; 3
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	0e 94 62 00 	call	0xc4	; 0xc4 <LCD_wr_inst_ini>
 356:	81 ee       	ldi	r24, 0xE1	; 225
 358:	94 e0       	ldi	r25, 0x04	; 4
 35a:	01 97       	sbiw	r24, 0x01	; 1
 35c:	f1 f7       	brne	.-4      	; 0x35a <LCD_init+0x1c>
 35e:	00 c0       	rjmp	.+0      	; 0x360 <LCD_init+0x22>
 360:	00 00       	nop
 362:	83 e0       	ldi	r24, 0x03	; 3
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	0e 94 62 00 	call	0xc4	; 0xc4 <LCD_wr_inst_ini>
 36a:	91 e2       	ldi	r25, 0x21	; 33
 36c:	9a 95       	dec	r25
 36e:	f1 f7       	brne	.-4      	; 0x36c <LCD_init+0x2e>
 370:	00 00       	nop
 372:	83 e0       	ldi	r24, 0x03	; 3
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	0e 94 62 00 	call	0xc4	; 0xc4 <LCD_wr_inst_ini>
 37a:	81 e2       	ldi	r24, 0x21	; 33
 37c:	8a 95       	dec	r24
 37e:	f1 f7       	brne	.-4      	; 0x37c <LCD_init+0x3e>
 380:	00 00       	nop
 382:	82 e0       	ldi	r24, 0x02	; 2
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	0e 94 62 00 	call	0xc4	; 0xc4 <LCD_wr_inst_ini>
 38a:	91 e2       	ldi	r25, 0x21	; 33
 38c:	9a 95       	dec	r25
 38e:	f1 f7       	brne	.-4      	; 0x38c <LCD_init+0x4e>
 390:	00 00       	nop
 392:	88 e2       	ldi	r24, 0x28	; 40
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_wr_instruction>
 39a:	88 e0       	ldi	r24, 0x08	; 8
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_wr_instruction>
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_wr_instruction>
 3aa:	86 e0       	ldi	r24, 0x06	; 6
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_wr_instruction>
 3b2:	8c e0       	ldi	r24, 0x0C	; 12
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_wr_instruction>
 3ba:	08 95       	ret

000003bc <KB_init>:
 3bc:	8f e0       	ldi	r24, 0x0F	; 15
 3be:	81 bb       	out	0x11, r24	; 17
 3c0:	8f ef       	ldi	r24, 0xFF	; 255
 3c2:	82 bb       	out	0x12, r24	; 18
 3c4:	08 95       	ret

000003c6 <__vector_14>:
}
ISR(ADC_vect){ //Entra aqui solito despues de la conversion
 3c6:	1f 92       	push	r1
 3c8:	0f 92       	push	r0
 3ca:	0f b6       	in	r0, 0x3f	; 63
 3cc:	0f 92       	push	r0
 3ce:	11 24       	eor	r1, r1
 3d0:	2f 93       	push	r18
 3d2:	3f 93       	push	r19
 3d4:	4f 93       	push	r20
 3d6:	5f 93       	push	r21
 3d8:	6f 93       	push	r22
 3da:	7f 93       	push	r23
 3dc:	8f 93       	push	r24
 3de:	9f 93       	push	r25
 3e0:	af 93       	push	r26
 3e2:	bf 93       	push	r27
 3e4:	ef 93       	push	r30
 3e6:	ff 93       	push	r31
	uint8_t r = ADCH; //8 bits
 3e8:	85 b1       	in	r24, 0x05	; 5
	//uint16_t r = ADC; //10 bits
	
	//Codigo
	PORTB = d;
 3ea:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__data_end>
 3ee:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__data_end+0x1>
 3f2:	88 bb       	out	0x18, r24	; 24
	if(d == 255) LCD_wr_lines("EEPROM llena", "");
 3f4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__data_end>
 3f8:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__data_end+0x1>
 3fc:	8f 3f       	cpi	r24, 0xFF	; 255
 3fe:	91 05       	cpc	r25, r1
 400:	39 f4       	brne	.+14     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 402:	68 e7       	ldi	r22, 0x78	; 120
 404:	70 e0       	ldi	r23, 0x00	; 0
 406:	80 e6       	ldi	r24, 0x60	; 96
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	0e 94 82 01 	call	0x304	; 0x304 <LCD_wr_lines>
 40e:	09 c0       	rjmp	.+18     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
	else d++;//EEPROM_write(d++, r);
 410:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__data_end>
 414:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__data_end+0x1>
 418:	01 96       	adiw	r24, 0x01	; 1
 41a:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__data_end+0x1>
 41e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__data_end>
}
 422:	ff 91       	pop	r31
 424:	ef 91       	pop	r30
 426:	bf 91       	pop	r27
 428:	af 91       	pop	r26
 42a:	9f 91       	pop	r25
 42c:	8f 91       	pop	r24
 42e:	7f 91       	pop	r23
 430:	6f 91       	pop	r22
 432:	5f 91       	pop	r21
 434:	4f 91       	pop	r20
 436:	3f 91       	pop	r19
 438:	2f 91       	pop	r18
 43a:	0f 90       	pop	r0
 43c:	0f be       	out	0x3f, r0	; 63
 43e:	0f 90       	pop	r0
 440:	1f 90       	pop	r1
 442:	18 95       	reti

00000444 <Timer0_init>:

void Timer0_init(){
	TIFR = 0b00000011; // Clear interruptions
 444:	83 e0       	ldi	r24, 0x03	; 3
 446:	88 bf       	out	0x38, r24	; 56
	TIMSK = 0b00000010; // Set interruption. Bit 0: Overflow; Bit 1: Compare
 448:	82 e0       	ldi	r24, 0x02	; 2
 44a:	89 bf       	out	0x39, r24	; 57
	sei();
 44c:	78 94       	sei
	TCNT0 = 0; //Counts
 44e:	12 be       	out	0x32, r1	; 50
	OCR0 = 243; //When the compare interruption will be called
 450:	83 ef       	ldi	r24, 0xF3	; 243
 452:	8c bf       	out	0x3c, r24	; 60
	TCCR0 = 0b00001101; //CTC, last 3 bits to set prescaler (1024)
 454:	8d e0       	ldi	r24, 0x0D	; 13
 456:	83 bf       	out	0x33, r24	; 51
 458:	08 95       	ret

0000045a <__vector_19>:
}
ISR(TIMER0_COMP_vect){
 45a:	1f 92       	push	r1
 45c:	0f 92       	push	r0
 45e:	0f b6       	in	r0, 0x3f	; 63
 460:	0f 92       	push	r0
 462:	11 24       	eor	r1, r1
	
}
 464:	0f 90       	pop	r0
 466:	0f be       	out	0x3f, r0	; 63
 468:	0f 90       	pop	r0
 46a:	1f 90       	pop	r1
 46c:	18 95       	reti

0000046e <main>:

int main(void) {
	LCD_init();
 46e:	0e 94 9f 01 	call	0x33e	; 0x33e <LCD_init>
	LCD_wr_string("Sensando...");
 472:	8d e6       	ldi	r24, 0x6D	; 109
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_wr_string>
	KB_init();
 47a:	0e 94 de 01 	call	0x3bc	; 0x3bc <KB_init>
	//ADC_init();
	Timer0_init();
 47e:	0e 94 22 02 	call	0x444	; 0x444 <Timer0_init>
	
	DDRB = 0xFF;
 482:	8f ef       	ldi	r24, 0xFF	; 255
 484:	87 bb       	out	0x17, r24	; 23
 486:	ff cf       	rjmp	.-2      	; 0x486 <main+0x18>

00000488 <_exit>:
 488:	f8 94       	cli

0000048a <__stop_program>:
 48a:	ff cf       	rjmp	.-2      	; 0x48a <__stop_program>
