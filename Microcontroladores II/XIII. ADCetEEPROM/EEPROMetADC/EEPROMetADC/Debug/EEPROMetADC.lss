
EEPROMetADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000150e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003c  00800060  0000150e  000015a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  0080009c  0080009c  000015de  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015de  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000163c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00001678  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001602  00000000  00000000  00001720  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007eb  00000000  00000000  00002d22  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007ae  00000000  00000000  0000350d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c8  00000000  00000000  00003cbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000487  00000000  00000000  00003e84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008af  00000000  00000000  0000430b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00004bba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__vector_14>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 15 03 	jmp	0x62a	; 0x62a <__vector_19>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__fp_szero+0x2>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <main+0x5c>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <LCD_wr_instruction+0x2a>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <EEPROM_read+0x10>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d4 e0       	ldi	r29, 0x04	; 4
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ee e0       	ldi	r30, 0x0E	; 14
     162:	f5 e1       	ldi	r31, 0x15	; 21
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	ac 39       	cpi	r26, 0x9C	; 156
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	ac e9       	ldi	r26, 0x9C	; 156
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a0 3b       	cpi	r26, 0xB0	; 176
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 1f 03 	call	0x63e	; 0x63e <main>
     184:	0c 94 85 0a 	jmp	0x150a	; 0x150a <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <EEPROM_write>:

volatile uint16_t d = 0, l;
uint8_t uno[16];

void EEPROM_write(uint8_t address, uint8_t data) {
	while(isSet(EECR, EEWE));
     18c:	e1 99       	sbic	0x1c, 1	; 28
     18e:	fe cf       	rjmp	.-4      	; 0x18c <EEPROM_write>
	EEAR = address;
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	9f bb       	out	0x1f, r25	; 31
     194:	8e bb       	out	0x1e, r24	; 30
	EEDR = data;
     196:	6d bb       	out	0x1d, r22	; 29
	cli();
     198:	f8 94       	cli
	EECR = setBit(EECR, EEMWE);
     19a:	8c b3       	in	r24, 0x1c	; 28
     19c:	84 60       	ori	r24, 0x04	; 4
     19e:	8c bb       	out	0x1c, r24	; 28
	EECR = setBit(EECR, EEWE);
     1a0:	8c b3       	in	r24, 0x1c	; 28
     1a2:	82 60       	ori	r24, 0x02	; 2
     1a4:	8c bb       	out	0x1c, r24	; 28
	sei();
     1a6:	78 94       	sei
     1a8:	08 95       	ret

000001aa <EEPROM_read>:
}
uint8_t EEPROM_read(uint8_t address) {
	while(isSet(EECR, EEWE));
     1aa:	e1 99       	sbic	0x1c, 1	; 28
     1ac:	fe cf       	rjmp	.-4      	; 0x1aa <EEPROM_read>
	EEAR = address;
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	9f bb       	out	0x1f, r25	; 31
     1b2:	8e bb       	out	0x1e, r24	; 30
	EECR = setBit(EECR, EERE);
     1b4:	8c b3       	in	r24, 0x1c	; 28
     1b6:	81 60       	ori	r24, 0x01	; 1
     1b8:	8c bb       	out	0x1c, r24	; 28
	return EEDR;
     1ba:	8d b3       	in	r24, 0x1d	; 29
}
     1bc:	08 95       	ret

000001be <saca_uno>:
	saca_cero(&PORTLCD,RS);
	saca_cero(&PORTLCD,RW);
	DDRLCD|=(15<<0)|(1<<RS)|(1<<RW)|(1<<E);
}
void saca_uno(volatile uint8_t *LUGAR, uint8_t BIT){
	*LUGAR=*LUGAR|(1<<BIT);
     1be:	fc 01       	movw	r30, r24
     1c0:	40 81       	ld	r20, Z
     1c2:	21 e0       	ldi	r18, 0x01	; 1
     1c4:	30 e0       	ldi	r19, 0x00	; 0
     1c6:	02 c0       	rjmp	.+4      	; 0x1cc <saca_uno+0xe>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	6a 95       	dec	r22
     1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <saca_uno+0xa>
     1d0:	24 2b       	or	r18, r20
     1d2:	20 83       	st	Z, r18
     1d4:	08 95       	ret

000001d6 <saca_cero>:
}
void saca_cero(volatile uint8_t *LUGAR, uint8_t BIT){
     1d6:	fc 01       	movw	r30, r24
	*LUGAR=*LUGAR&~(1<<BIT);
     1d8:	90 81       	ld	r25, Z
     1da:	21 e0       	ldi	r18, 0x01	; 1
     1dc:	30 e0       	ldi	r19, 0x00	; 0
     1de:	02 c0       	rjmp	.+4      	; 0x1e4 <saca_cero+0xe>
     1e0:	22 0f       	add	r18, r18
     1e2:	33 1f       	adc	r19, r19
     1e4:	6a 95       	dec	r22
     1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <saca_cero+0xa>
     1e8:	20 95       	com	r18
     1ea:	29 23       	and	r18, r25
     1ec:	20 83       	st	Z, r18
     1ee:	08 95       	ret

000001f0 <LCD_wr_inst_ini>:
	saca_cero(&PORTLCD,RS);
	LCD_wait_flag();
	
}
void LCD_wr_inst_ini(uint8_t instruccion){
	PORTLCD=instruccion; //Saco el dato y le digo que escribir? un dato
     1f0:	85 bb       	out	0x15, r24	; 21
	saca_cero(&PORTLCD,RS);
     1f2:	64 e0       	ldi	r22, 0x04	; 4
     1f4:	70 e0       	ldi	r23, 0x00	; 0
     1f6:	85 e3       	ldi	r24, 0x35	; 53
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_cero(&PORTLCD,RW);
     1fe:	65 e0       	ldi	r22, 0x05	; 5
     200:	70 e0       	ldi	r23, 0x00	; 0
     202:	85 e3       	ldi	r24, 0x35	; 53
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,E);
     20a:	66 e0       	ldi	r22, 0x06	; 6
     20c:	70 e0       	ldi	r23, 0x00	; 0
     20e:	85 e3       	ldi	r24, 0x35	; 53
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     216:	83 ec       	ldi	r24, 0xC3	; 195
     218:	99 e0       	ldi	r25, 0x09	; 9
     21a:	01 97       	sbiw	r24, 0x01	; 1
     21c:	f1 f7       	brne	.-4      	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
     21e:	00 c0       	rjmp	.+0      	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
     220:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     222:	66 e0       	ldi	r22, 0x06	; 6
     224:	70 e0       	ldi	r23, 0x00	; 0
     226:	85 e3       	ldi	r24, 0x35	; 53
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
     22e:	08 95       	ret

00000230 <LCD_wait_flag>:
	saca_cero(&PORTLCD,E);
	LCD_wait_flag();
}
void LCD_wait_flag(void){
	//_delay_ms(100);
	DDRLCD&=0b11110000; //Para poner el pin BF como entrada para leer la bandera lo dem?s salida
     230:	84 b3       	in	r24, 0x14	; 20
     232:	80 7f       	andi	r24, 0xF0	; 240
     234:	84 bb       	out	0x14, r24	; 20
	saca_cero(&PORTLCD,RS);// Instrucci?n
     236:	64 e0       	ldi	r22, 0x04	; 4
     238:	70 e0       	ldi	r23, 0x00	; 0
     23a:	85 e3       	ldi	r24, 0x35	; 53
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,RW); // Leer
     242:	65 e0       	ldi	r22, 0x05	; 5
     244:	70 e0       	ldi	r23, 0x00	; 0
     246:	85 e3       	ldi	r24, 0x35	; 53
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
	while(1){
		saca_uno(&PORTLCD,E); //pregunto por el primer nibble
     24e:	66 e0       	ldi	r22, 0x06	; 6
     250:	70 e0       	ldi	r23, 0x00	; 0
     252:	85 e3       	ldi	r24, 0x35	; 53
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     25a:	83 ec       	ldi	r24, 0xC3	; 195
     25c:	99 e0       	ldi	r25, 0x09	; 9
     25e:	01 97       	sbiw	r24, 0x01	; 1
     260:	f1 f7       	brne	.-4      	; 0x25e <LCD_wait_flag+0x2e>
     262:	00 c0       	rjmp	.+0      	; 0x264 <LCD_wait_flag+0x34>
     264:	00 00       	nop
		_delay_ms(10);
		saca_cero(&PORTLCD,E);
     266:	66 e0       	ldi	r22, 0x06	; 6
     268:	70 e0       	ldi	r23, 0x00	; 0
     26a:	85 e3       	ldi	r24, 0x35	; 53
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
		if(isSet(PINLCD,BF)) {break;} //uno_en_bit para protues, 0 para la vida real
     272:	9b 99       	sbic	0x13, 3	; 19
     274:	17 c0       	rjmp	.+46     	; 0x2a4 <LCD_wait_flag+0x74>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     276:	93 e0       	ldi	r25, 0x03	; 3
     278:	9a 95       	dec	r25
     27a:	f1 f7       	brne	.-4      	; 0x278 <LCD_wait_flag+0x48>
     27c:	00 00       	nop
		_delay_us(10);
		saca_uno(&PORTLCD,E); //pregunto por el segundo nibble
     27e:	66 e0       	ldi	r22, 0x06	; 6
     280:	70 e0       	ldi	r23, 0x00	; 0
     282:	85 e3       	ldi	r24, 0x35	; 53
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     28a:	83 ec       	ldi	r24, 0xC3	; 195
     28c:	99 e0       	ldi	r25, 0x09	; 9
     28e:	01 97       	sbiw	r24, 0x01	; 1
     290:	f1 f7       	brne	.-4      	; 0x28e <LCD_wait_flag+0x5e>
     292:	00 c0       	rjmp	.+0      	; 0x294 <LCD_wait_flag+0x64>
     294:	00 00       	nop
		_delay_ms(10);
		saca_cero(&PORTLCD,E);
     296:	66 e0       	ldi	r22, 0x06	; 6
     298:	70 e0       	ldi	r23, 0x00	; 0
     29a:	85 e3       	ldi	r24, 0x35	; 53
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	}
     2a2:	d5 cf       	rjmp	.-86     	; 0x24e <LCD_wait_flag+0x1e>
	saca_uno(&PORTLCD,E); //pregunto por el segundo nibble
     2a4:	66 e0       	ldi	r22, 0x06	; 6
     2a6:	70 e0       	ldi	r23, 0x00	; 0
     2a8:	85 e3       	ldi	r24, 0x35	; 53
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     2b0:	83 ec       	ldi	r24, 0xC3	; 195
     2b2:	99 e0       	ldi	r25, 0x09	; 9
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <LCD_wait_flag+0x84>
     2b8:	00 c0       	rjmp	.+0      	; 0x2ba <LCD_wait_flag+0x8a>
     2ba:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     2bc:	66 e0       	ldi	r22, 0x06	; 6
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	85 e3       	ldi	r24, 0x35	; 53
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	//entonces cuando tenga cero puede continuar con esto...
	saca_cero(&PORTLCD,RS);
     2c8:	64 e0       	ldi	r22, 0x04	; 4
     2ca:	70 e0       	ldi	r23, 0x00	; 0
     2cc:	85 e3       	ldi	r24, 0x35	; 53
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_cero(&PORTLCD,RW);
     2d4:	65 e0       	ldi	r22, 0x05	; 5
     2d6:	70 e0       	ldi	r23, 0x00	; 0
     2d8:	85 e3       	ldi	r24, 0x35	; 53
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	DDRLCD|=(15<<0)|(1<<RS)|(1<<RW)|(1<<E);
     2e0:	84 b3       	in	r24, 0x14	; 20
     2e2:	8f 67       	ori	r24, 0x7F	; 127
     2e4:	84 bb       	out	0x14, r24	; 20
     2e6:	08 95       	ret

000002e8 <LCD_wr_char>:
	LCD_wr_instruction(LCD_Cmd_Off);		//apaga el display
	LCD_wr_instruction(LCD_Cmd_Clear);		//limpia el display
	LCD_wr_instruction(LCD_Cmd_ModeDnS);	//Entry mode set ID S
	LCD_wr_instruction(LCD_Cmd_OnsCsB);		//Enciende el display
}
void LCD_wr_char(uint8_t data){
     2e8:	cf 93       	push	r28
     2ea:	c8 2f       	mov	r28, r24
	//saco la parte m?s significativa del dato
	PORTLCD=data>>4; //Saco el dato y le digo que escribir? un dato
     2ec:	82 95       	swap	r24
     2ee:	8f 70       	andi	r24, 0x0F	; 15
     2f0:	85 bb       	out	0x15, r24	; 21
	saca_uno(&PORTLCD,RS);
     2f2:	64 e0       	ldi	r22, 0x04	; 4
     2f4:	70 e0       	ldi	r23, 0x00	; 0
     2f6:	85 e3       	ldi	r24, 0x35	; 53
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
	saca_cero(&PORTLCD,RW);
     2fe:	65 e0       	ldi	r22, 0x05	; 5
     300:	70 e0       	ldi	r23, 0x00	; 0
     302:	85 e3       	ldi	r24, 0x35	; 53
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,E);
     30a:	66 e0       	ldi	r22, 0x06	; 6
     30c:	70 e0       	ldi	r23, 0x00	; 0
     30e:	85 e3       	ldi	r24, 0x35	; 53
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     316:	83 ec       	ldi	r24, 0xC3	; 195
     318:	99 e0       	ldi	r25, 0x09	; 9
     31a:	01 97       	sbiw	r24, 0x01	; 1
     31c:	f1 f7       	brne	.-4      	; 0x31a <LCD_wr_char+0x32>
     31e:	00 c0       	rjmp	.+0      	; 0x320 <LCD_wr_char+0x38>
     320:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     322:	66 e0       	ldi	r22, 0x06	; 6
     324:	70 e0       	ldi	r23, 0x00	; 0
     326:	85 e3       	ldi	r24, 0x35	; 53
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	//saco la parte menos significativa del dato
	PORTLCD=data&0b00001111; //Saco el dato y le digo que escribir? un dato
     32e:	cf 70       	andi	r28, 0x0F	; 15
     330:	c5 bb       	out	0x15, r28	; 21
	saca_uno(&PORTLCD,RS);
     332:	64 e0       	ldi	r22, 0x04	; 4
     334:	70 e0       	ldi	r23, 0x00	; 0
     336:	85 e3       	ldi	r24, 0x35	; 53
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
	saca_cero(&PORTLCD,RW);
     33e:	65 e0       	ldi	r22, 0x05	; 5
     340:	70 e0       	ldi	r23, 0x00	; 0
     342:	85 e3       	ldi	r24, 0x35	; 53
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,E);
     34a:	66 e0       	ldi	r22, 0x06	; 6
     34c:	70 e0       	ldi	r23, 0x00	; 0
     34e:	85 e3       	ldi	r24, 0x35	; 53
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     356:	83 ec       	ldi	r24, 0xC3	; 195
     358:	99 e0       	ldi	r25, 0x09	; 9
     35a:	01 97       	sbiw	r24, 0x01	; 1
     35c:	f1 f7       	brne	.-4      	; 0x35a <LCD_wr_char+0x72>
     35e:	00 c0       	rjmp	.+0      	; 0x360 <LCD_wr_char+0x78>
     360:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     362:	66 e0       	ldi	r22, 0x06	; 6
     364:	70 e0       	ldi	r23, 0x00	; 0
     366:	85 e3       	ldi	r24, 0x35	; 53
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_cero(&PORTLCD,RS);
     36e:	64 e0       	ldi	r22, 0x04	; 4
     370:	70 e0       	ldi	r23, 0x00	; 0
     372:	85 e3       	ldi	r24, 0x35	; 53
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	LCD_wait_flag();
     37a:	0e 94 18 01 	call	0x230	; 0x230 <LCD_wait_flag>
	
}
     37e:	cf 91       	pop	r28
     380:	08 95       	ret

00000382 <LCD_wr_string>:
	LCD_wr_instruction(LCD_Cmd_Home);
	LCD_wr_string(a);
	LCD_wr_instruction(0b11000000);
	LCD_wr_string(b);
}
void LCD_wr_string(volatile uint8_t *s){
     382:	cf 93       	push	r28
     384:	df 93       	push	r29
     386:	fc 01       	movw	r30, r24
	uint8_t c;
	while((c=*s++)){
     388:	04 c0       	rjmp	.+8      	; 0x392 <LCD_wr_string+0x10>
		LCD_wr_char(c);
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <LCD_wr_char>
	LCD_wr_instruction(0b11000000);
	LCD_wr_string(b);
}
void LCD_wr_string(volatile uint8_t *s){
	uint8_t c;
	while((c=*s++)){
     390:	fe 01       	movw	r30, r28
     392:	ef 01       	movw	r28, r30
     394:	21 96       	adiw	r28, 0x01	; 1
     396:	80 81       	ld	r24, Z
     398:	81 11       	cpse	r24, r1
     39a:	f7 cf       	rjmp	.-18     	; 0x38a <LCD_wr_string+0x8>
		LCD_wr_char(c);
	}
}
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	08 95       	ret

000003a2 <LCD_wr_instruction>:
	saca_cero(&PORTLCD,RW);
	saca_uno(&PORTLCD,E);
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
}
void LCD_wr_instruction(uint8_t instruccion){
     3a2:	cf 93       	push	r28
     3a4:	c8 2f       	mov	r28, r24
	//saco la parte m?s significativa de la instrucci?n
	PORTLCD=instruccion>>4; //Saco el dato y le digo que escribir? un dato
     3a6:	82 95       	swap	r24
     3a8:	8f 70       	andi	r24, 0x0F	; 15
     3aa:	85 bb       	out	0x15, r24	; 21
	saca_cero(&PORTLCD,RS);
     3ac:	64 e0       	ldi	r22, 0x04	; 4
     3ae:	70 e0       	ldi	r23, 0x00	; 0
     3b0:	85 e3       	ldi	r24, 0x35	; 53
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_cero(&PORTLCD,RW);
     3b8:	65 e0       	ldi	r22, 0x05	; 5
     3ba:	70 e0       	ldi	r23, 0x00	; 0
     3bc:	85 e3       	ldi	r24, 0x35	; 53
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,E);
     3c4:	66 e0       	ldi	r22, 0x06	; 6
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	85 e3       	ldi	r24, 0x35	; 53
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     3d0:	83 ec       	ldi	r24, 0xC3	; 195
     3d2:	99 e0       	ldi	r25, 0x09	; 9
     3d4:	01 97       	sbiw	r24, 0x01	; 1
     3d6:	f1 f7       	brne	.-4      	; 0x3d4 <LCD_wr_instruction+0x32>
     3d8:	00 c0       	rjmp	.+0      	; 0x3da <LCD_wr_instruction+0x38>
     3da:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     3dc:	66 e0       	ldi	r22, 0x06	; 6
     3de:	70 e0       	ldi	r23, 0x00	; 0
     3e0:	85 e3       	ldi	r24, 0x35	; 53
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	//saco la parte menos significativa de la instrucci?n
	PORTLCD=instruccion&0b00001111; //Saco el dato y le digo que escribir? un dato
     3e8:	cf 70       	andi	r28, 0x0F	; 15
     3ea:	c5 bb       	out	0x15, r28	; 21
	saca_cero(&PORTLCD,RS);
     3ec:	64 e0       	ldi	r22, 0x04	; 4
     3ee:	70 e0       	ldi	r23, 0x00	; 0
     3f0:	85 e3       	ldi	r24, 0x35	; 53
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_cero(&PORTLCD,RW);
     3f8:	65 e0       	ldi	r22, 0x05	; 5
     3fa:	70 e0       	ldi	r23, 0x00	; 0
     3fc:	85 e3       	ldi	r24, 0x35	; 53
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,E);
     404:	66 e0       	ldi	r22, 0x06	; 6
     406:	70 e0       	ldi	r23, 0x00	; 0
     408:	85 e3       	ldi	r24, 0x35	; 53
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     410:	83 ec       	ldi	r24, 0xC3	; 195
     412:	99 e0       	ldi	r25, 0x09	; 9
     414:	01 97       	sbiw	r24, 0x01	; 1
     416:	f1 f7       	brne	.-4      	; 0x414 <__DATA_REGION_LENGTH__+0x14>
     418:	00 c0       	rjmp	.+0      	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
     41a:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     41c:	66 e0       	ldi	r22, 0x06	; 6
     41e:	70 e0       	ldi	r23, 0x00	; 0
     420:	85 e3       	ldi	r24, 0x35	; 53
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	LCD_wait_flag();
     428:	0e 94 18 01 	call	0x230	; 0x230 <LCD_wait_flag>
}
     42c:	cf 91       	pop	r28
     42e:	08 95       	ret

00000430 <LCD_wr_lines>:
//#define LCD_Cmd_Function 0b001 DL  N  F  00
#define LCD_Cmd_Func2Lin   0b00101000 //para dos lineas
#define LCD_Cmd_Func1LinCh 0b00100000 //para una linea con letra chica
#define LCD_Cmd_Func1LinG  0b00100100 //para una linea con letra grande
//#define LCD_Cmd_DDRAM    0b1xxxxxxx
void LCD_wr_lines(uint8_t *a, uint8_t *b){
     430:	0f 93       	push	r16
     432:	1f 93       	push	r17
     434:	cf 93       	push	r28
     436:	df 93       	push	r29
     438:	8c 01       	movw	r16, r24
     43a:	eb 01       	movw	r28, r22
	LCD_wr_instruction(LCD_Cmd_Clear);
     43c:	81 e0       	ldi	r24, 0x01	; 1
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_Home);
     444:	82 e0       	ldi	r24, 0x02	; 2
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_string(a);
     44c:	c8 01       	movw	r24, r16
     44e:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_wr_string>
	LCD_wr_instruction(0b11000000);
     452:	80 ec       	ldi	r24, 0xC0	; 192
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_string(b);
     45a:	ce 01       	movw	r24, r28
     45c:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_wr_string>
}
     460:	df 91       	pop	r29
     462:	cf 91       	pop	r28
     464:	1f 91       	pop	r17
     466:	0f 91       	pop	r16
     468:	08 95       	ret

0000046a <LCD_init>:
	while((c=*s++)){
		LCD_wr_char(c);
	}
}
void LCD_init(void){
	DDRLCD=(15<<0)|(1<<RS)|(1<<RW)|(1<<E); //DDRLCD=DDRLCD|(0B01111111)
     46a:	8f e7       	ldi	r24, 0x7F	; 127
     46c:	84 bb       	out	0x14, r24	; 20
     46e:	85 ea       	ldi	r24, 0xA5	; 165
     470:	9e e0       	ldi	r25, 0x0E	; 14
     472:	01 97       	sbiw	r24, 0x01	; 1
     474:	f1 f7       	brne	.-4      	; 0x472 <LCD_init+0x8>
     476:	00 c0       	rjmp	.+0      	; 0x478 <LCD_init+0xe>
     478:	00 00       	nop
	_delay_ms(15);
	LCD_wr_inst_ini(0b00000011);
     47a:	83 e0       	ldi	r24, 0x03	; 3
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_wr_inst_ini>
     482:	81 ee       	ldi	r24, 0xE1	; 225
     484:	94 e0       	ldi	r25, 0x04	; 4
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	f1 f7       	brne	.-4      	; 0x486 <LCD_init+0x1c>
     48a:	00 c0       	rjmp	.+0      	; 0x48c <LCD_init+0x22>
     48c:	00 00       	nop
	_delay_ms(5);
	LCD_wr_inst_ini(0b00000011);
     48e:	83 e0       	ldi	r24, 0x03	; 3
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_wr_inst_ini>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     496:	91 e2       	ldi	r25, 0x21	; 33
     498:	9a 95       	dec	r25
     49a:	f1 f7       	brne	.-4      	; 0x498 <LCD_init+0x2e>
     49c:	00 00       	nop
	_delay_us(100);
	LCD_wr_inst_ini(0b00000011);
     49e:	83 e0       	ldi	r24, 0x03	; 3
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_wr_inst_ini>
     4a6:	81 e2       	ldi	r24, 0x21	; 33
     4a8:	8a 95       	dec	r24
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <LCD_init+0x3e>
     4ac:	00 00       	nop
	_delay_us(100);
	LCD_wr_inst_ini(0b00000010);
     4ae:	82 e0       	ldi	r24, 0x02	; 2
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_wr_inst_ini>
     4b6:	91 e2       	ldi	r25, 0x21	; 33
     4b8:	9a 95       	dec	r25
     4ba:	f1 f7       	brne	.-4      	; 0x4b8 <LCD_init+0x4e>
     4bc:	00 00       	nop
	_delay_us(100);
	LCD_wr_instruction(LCD_Cmd_Func2Lin);	//4 Bits, n?mero de l?neas y tipo de letra
     4be:	88 e2       	ldi	r24, 0x28	; 40
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_Off);		//apaga el display
     4c6:	88 e0       	ldi	r24, 0x08	; 8
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_Clear);		//limpia el display
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_ModeDnS);	//Entry mode set ID S
     4d6:	86 e0       	ldi	r24, 0x06	; 6
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_OnsCsB);		//Enciende el display
     4de:	8c e0       	ldi	r24, 0x0C	; 12
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
     4e6:	08 95       	ret

000004e8 <hastaTecla>:
	{'4', '5', '6', 'B'},
	{'1', '2', '3', 'C'},
	{'E', '0', 'F', 'D'}
};
uint8_t hastaTecla(){
	for(uint8_t i = 0;; i++, i %= 4){
     4e8:	30 e0       	ldi	r19, 0x00	; 0
		PORTX = ~(1 << i);
     4ea:	43 2f       	mov	r20, r19
     4ec:	50 e0       	ldi	r21, 0x00	; 0
     4ee:	81 e0       	ldi	r24, 0x01	; 1
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	03 2e       	mov	r0, r19
     4f4:	02 c0       	rjmp	.+4      	; 0x4fa <hastaTecla+0x12>
     4f6:	88 0f       	add	r24, r24
     4f8:	99 1f       	adc	r25, r25
     4fa:	0a 94       	dec	r0
     4fc:	e2 f7       	brpl	.-8      	; 0x4f6 <hastaTecla+0xe>
     4fe:	80 95       	com	r24
     500:	82 bb       	out	0x12, r24	; 18
		asm("nop");
     502:	00 00       	nop
		asm("nop");
     504:	00 00       	nop
		for(uint8_t j = 4; j < 8; j++){
     506:	24 e0       	ldi	r18, 0x04	; 4
     508:	30 c0       	rjmp	.+96     	; 0x56a <hastaTecla+0x82>
			if(isClear(PINX, j)){
     50a:	80 b3       	in	r24, 0x10	; 16
     50c:	62 2f       	mov	r22, r18
     50e:	70 e0       	ldi	r23, 0x00	; 0
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	02 2e       	mov	r0, r18
     514:	02 c0       	rjmp	.+4      	; 0x51a <hastaTecla+0x32>
     516:	95 95       	asr	r25
     518:	87 95       	ror	r24
     51a:	0a 94       	dec	r0
     51c:	e2 f7       	brpl	.-8      	; 0x516 <hastaTecla+0x2e>
     51e:	80 fd       	sbrc	r24, 0
     520:	23 c0       	rjmp	.+70     	; 0x568 <hastaTecla+0x80>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     522:	83 ed       	ldi	r24, 0xD3	; 211
     524:	90 e3       	ldi	r25, 0x30	; 48
     526:	01 97       	sbiw	r24, 0x01	; 1
     528:	f1 f7       	brne	.-4      	; 0x526 <hastaTecla+0x3e>
     52a:	00 c0       	rjmp	.+0      	; 0x52c <hastaTecla+0x44>
     52c:	00 00       	nop
				_delay_ms(50);
				while(isClear(PINX, j));
     52e:	80 b3       	in	r24, 0x10	; 16
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	06 2e       	mov	r0, r22
     534:	02 c0       	rjmp	.+4      	; 0x53a <hastaTecla+0x52>
     536:	95 95       	asr	r25
     538:	87 95       	ror	r24
     53a:	0a 94       	dec	r0
     53c:	e2 f7       	brpl	.-8      	; 0x536 <hastaTecla+0x4e>
     53e:	80 ff       	sbrs	r24, 0
     540:	f6 cf       	rjmp	.-20     	; 0x52e <hastaTecla+0x46>
     542:	83 ed       	ldi	r24, 0xD3	; 211
     544:	90 e3       	ldi	r25, 0x30	; 48
     546:	01 97       	sbiw	r24, 0x01	; 1
     548:	f1 f7       	brne	.-4      	; 0x546 <hastaTecla+0x5e>
     54a:	00 c0       	rjmp	.+0      	; 0x54c <hastaTecla+0x64>
     54c:	00 00       	nop
				_delay_ms(50);
				return keyboard[i][j-4];
     54e:	64 50       	subi	r22, 0x04	; 4
     550:	71 09       	sbc	r23, r1
     552:	fa 01       	movw	r30, r20
     554:	ee 0f       	add	r30, r30
     556:	ff 1f       	adc	r31, r31
     558:	ee 0f       	add	r30, r30
     55a:	ff 1f       	adc	r31, r31
     55c:	e0 5a       	subi	r30, 0xA0	; 160
     55e:	ff 4f       	sbci	r31, 0xFF	; 255
     560:	e6 0f       	add	r30, r22
     562:	f7 1f       	adc	r31, r23
     564:	80 81       	ld	r24, Z
     566:	08 95       	ret
uint8_t hastaTecla(){
	for(uint8_t i = 0;; i++, i %= 4){
		PORTX = ~(1 << i);
		asm("nop");
		asm("nop");
		for(uint8_t j = 4; j < 8; j++){
     568:	2f 5f       	subi	r18, 0xFF	; 255
     56a:	28 30       	cpi	r18, 0x08	; 8
     56c:	70 f2       	brcs	.-100    	; 0x50a <hastaTecla+0x22>
	{'4', '5', '6', 'B'},
	{'1', '2', '3', 'C'},
	{'E', '0', 'F', 'D'}
};
uint8_t hastaTecla(){
	for(uint8_t i = 0;; i++, i %= 4){
     56e:	3f 5f       	subi	r19, 0xFF	; 255
     570:	33 70       	andi	r19, 0x03	; 3
				while(isClear(PINX, j));
				_delay_ms(50);
				return keyboard[i][j-4];
			}
		}
	}
     572:	bb cf       	rjmp	.-138    	; 0x4ea <hastaTecla+0x2>

00000574 <KB_init>:
}
void KB_init(){
	DDRX = 0x0F;
     574:	8f e0       	ldi	r24, 0x0F	; 15
     576:	81 bb       	out	0x11, r24	; 17
	PORTX = 0xFF;
     578:	8f ef       	ldi	r24, 0xFF	; 255
     57a:	82 bb       	out	0x12, r24	; 18
     57c:	08 95       	ret

0000057e <ADC_init>:

#define PORTADC PORTA
#define PINADC PINA
#define DDRADC DDRA
void ADC_init(){
	ADMUX = 0b01100000; 
     57e:	80 e6       	ldi	r24, 0x60	; 96
     580:	87 b9       	out	0x07, r24	; 7
			5:	
				0 = 10 bits adjusted to the right (using full precision of the ADC). Use ADC register with a 16-bit variable.
				1 = 8 bits
			2, 1, 0: Specify the PIN to be read in binary
		*/
	SFIOR = 0b01100000;
     582:	80 bf       	out	0x30, r24	; 48
			7 - 5 bits: 
				000 - Free running mode (we ask to do the conversion)
				011 - Compare match timer 0
			When using something different to free running mode: Bit 5 of ADCSRA has to be 1.
		*/
	ADCSRA =  0b10111011;
     584:	8b eb       	ldi	r24, 0xBB	; 187
     586:	86 b9       	out	0x06, r24	; 6
				111		128
				Fmicro/Divisor has to be between the valid range.
					1MHz/8 = 125kHz
		*/
			
	DDRADC = 0b00000000;
     588:	1a ba       	out	0x1a, r1	; 26
	PORTADC = 0b00000000; //ADC doesnt need pull up
     58a:	1b ba       	out	0x1b, r1	; 27
     58c:	08 95       	ret

0000058e <__vector_14>:
}
ISR(ADC_vect){ //Entra aqui solito despues de la conversion
     58e:	1f 92       	push	r1
     590:	0f 92       	push	r0
     592:	0f b6       	in	r0, 0x3f	; 63
     594:	0f 92       	push	r0
     596:	11 24       	eor	r1, r1
     598:	2f 93       	push	r18
     59a:	3f 93       	push	r19
     59c:	4f 93       	push	r20
     59e:	5f 93       	push	r21
     5a0:	6f 93       	push	r22
     5a2:	7f 93       	push	r23
     5a4:	8f 93       	push	r24
     5a6:	9f 93       	push	r25
     5a8:	af 93       	push	r26
     5aa:	bf 93       	push	r27
     5ac:	ef 93       	push	r30
     5ae:	ff 93       	push	r31
	uint8_t r = ADCH; //8 bits
     5b0:	65 b1       	in	r22, 0x05	; 5
	//uint16_t r = ADC; //10 bits
	//dtostrf(a, 1, 3, v); //Float to string

	
	//Codigo
	PORTB = d;
     5b2:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
     5b6:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <__data_end+0x1>
     5ba:	88 bb       	out	0x18, r24	; 24
	if(d > 511) LCD_wr_lines("EEPROM llena", "");
     5bc:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
     5c0:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <__data_end+0x1>
     5c4:	81 15       	cp	r24, r1
     5c6:	92 40       	sbci	r25, 0x02	; 2
     5c8:	38 f0       	brcs	.+14     	; 0x5d8 <__vector_14+0x4a>
     5ca:	68 e8       	ldi	r22, 0x88	; 136
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	80 e7       	ldi	r24, 0x70	; 112
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	0e 94 18 02 	call	0x430	; 0x430 <LCD_wr_lines>
     5d6:	0d c0       	rjmp	.+26     	; 0x5f2 <__vector_14+0x64>
	else EEPROM_write(d++, r);
     5d8:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
     5dc:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <__data_end+0x1>
     5e0:	9c 01       	movw	r18, r24
     5e2:	2f 5f       	subi	r18, 0xFF	; 255
     5e4:	3f 4f       	sbci	r19, 0xFF	; 255
     5e6:	30 93 9d 00 	sts	0x009D, r19	; 0x80009d <__data_end+0x1>
     5ea:	20 93 9c 00 	sts	0x009C, r18	; 0x80009c <__data_end>
     5ee:	0e 94 c6 00 	call	0x18c	; 0x18c <EEPROM_write>
	
}
     5f2:	ff 91       	pop	r31
     5f4:	ef 91       	pop	r30
     5f6:	bf 91       	pop	r27
     5f8:	af 91       	pop	r26
     5fa:	9f 91       	pop	r25
     5fc:	8f 91       	pop	r24
     5fe:	7f 91       	pop	r23
     600:	6f 91       	pop	r22
     602:	5f 91       	pop	r21
     604:	4f 91       	pop	r20
     606:	3f 91       	pop	r19
     608:	2f 91       	pop	r18
     60a:	0f 90       	pop	r0
     60c:	0f be       	out	0x3f, r0	; 63
     60e:	0f 90       	pop	r0
     610:	1f 90       	pop	r1
     612:	18 95       	reti

00000614 <Timer0_init>:

void Timer0_init(){
	TIFR = 0b00000011; // Clear interruptions
     614:	83 e0       	ldi	r24, 0x03	; 3
     616:	88 bf       	out	0x38, r24	; 56
	TIMSK = 0b00000010; // Set interruption. Bit 0: Overflow; Bit 1: Compare
     618:	82 e0       	ldi	r24, 0x02	; 2
     61a:	89 bf       	out	0x39, r24	; 57
	sei();
     61c:	78 94       	sei
	TCNT0 = 0; //Counts
     61e:	12 be       	out	0x32, r1	; 50
	OCR0 = 243; //When the compare interruption will be called
     620:	83 ef       	ldi	r24, 0xF3	; 243
     622:	8c bf       	out	0x3c, r24	; 60
	TCCR0 = 0b00001101; //CTC, last 3 bits to set prescaler (1024)
     624:	8d e0       	ldi	r24, 0x0D	; 13
     626:	83 bf       	out	0x33, r24	; 51
     628:	08 95       	ret

0000062a <__vector_19>:
}
ISR(TIMER0_COMP_vect){
     62a:	1f 92       	push	r1
     62c:	0f 92       	push	r0
     62e:	0f b6       	in	r0, 0x3f	; 63
     630:	0f 92       	push	r0
     632:	11 24       	eor	r1, r1
}
     634:	0f 90       	pop	r0
     636:	0f be       	out	0x3f, r0	; 63
     638:	0f 90       	pop	r0
     63a:	1f 90       	pop	r1
     63c:	18 95       	reti

0000063e <main>:

int main(void) {
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	00 d0       	rcall	.+0      	; 0x644 <main+0x6>
     644:	00 d0       	rcall	.+0      	; 0x646 <main+0x8>
     646:	1f 92       	push	r1
     648:	cd b7       	in	r28, 0x3d	; 61
     64a:	de b7       	in	r29, 0x3e	; 62
	LCD_init();
     64c:	0e 94 35 02 	call	0x46a	; 0x46a <LCD_init>
	LCD_wr_instruction(LCD_Cmd_Clear);
     650:	81 e0       	ldi	r24, 0x01	; 1
     652:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_string("Sensando...");
     656:	8d e7       	ldi	r24, 0x7D	; 125
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_wr_string>
	KB_init();
     65e:	0e 94 ba 02 	call	0x574	; 0x574 <KB_init>
	ADC_init();
     662:	0e 94 bf 02 	call	0x57e	; 0x57e <ADC_init>
	Timer0_init();
     666:	0e 94 0a 03 	call	0x614	; 0x614 <Timer0_init>
	
	DDRB = 0xFF;
     66a:	8f ef       	ldi	r24, 0xFF	; 255
     66c:	87 bb       	out	0x17, r24	; 23
	PORTB = 0;
     66e:	18 ba       	out	0x18, r1	; 24
	uint8_t t;
	for(;;){
		//A = <; B = >; C = +
		while(hastaTecla() != 'C');
     670:	0e 94 74 02 	call	0x4e8	; 0x4e8 <hastaTecla>
     674:	83 34       	cpi	r24, 0x43	; 67
     676:	e1 f7       	brne	.-8      	; 0x670 <main+0x32>
		cli();
     678:	f8 94       	cli
		if(d) d--;
     67a:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
     67e:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <__data_end+0x1>
     682:	89 2b       	or	r24, r25
     684:	49 f0       	breq	.+18     	; 0x698 <main+0x5a>
     686:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
     68a:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <__data_end+0x1>
     68e:	01 97       	sbiw	r24, 0x01	; 1
     690:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__data_end+0x1>
     694:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end>
		LCD_wr_lines("Ultimos val.", "");
     698:	68 e8       	ldi	r22, 0x88	; 136
     69a:	70 e0       	ldi	r23, 0x00	; 0
     69c:	89 e8       	ldi	r24, 0x89	; 137
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	0e 94 18 02 	call	0x430	; 0x430 <LCD_wr_lines>
		uint16_t a = 1000;
		t = 0, l = d;
     6a4:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
     6a8:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <__data_end+0x1>
     6ac:	90 93 9f 00 	sts	0x009F, r25	; 0x80009f <l+0x1>
     6b0:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <l>
		//A = <; B = >; C = +
		while(hastaTecla() != 'C');
		cli();
		if(d) d--;
		LCD_wr_lines("Ultimos val.", "");
		uint16_t a = 1000;
     6b4:	08 ee       	ldi	r16, 0xE8	; 232
     6b6:	13 e0       	ldi	r17, 0x03	; 3
		t = 0, l = d;
     6b8:	80 e0       	ldi	r24, 0x00	; 0
		do {
			if(t == 'A' && d > 0) d--;
     6ba:	81 34       	cpi	r24, 0x41	; 65
     6bc:	81 f4       	brne	.+32     	; 0x6de <main+0xa0>
     6be:	20 91 9c 00 	lds	r18, 0x009C	; 0x80009c <__data_end>
     6c2:	30 91 9d 00 	lds	r19, 0x009D	; 0x80009d <__data_end+0x1>
     6c6:	23 2b       	or	r18, r19
     6c8:	51 f0       	breq	.+20     	; 0x6de <main+0xa0>
     6ca:	20 91 9c 00 	lds	r18, 0x009C	; 0x80009c <__data_end>
     6ce:	30 91 9d 00 	lds	r19, 0x009D	; 0x80009d <__data_end+0x1>
     6d2:	21 50       	subi	r18, 0x01	; 1
     6d4:	31 09       	sbc	r19, r1
     6d6:	30 93 9d 00 	sts	0x009D, r19	; 0x80009d <__data_end+0x1>
     6da:	20 93 9c 00 	sts	0x009C, r18	; 0x80009c <__data_end>
			if(t == 'B' && d < l) d++;
     6de:	82 34       	cpi	r24, 0x42	; 66
     6e0:	a1 f4       	brne	.+40     	; 0x70a <main+0xcc>
     6e2:	20 91 9c 00 	lds	r18, 0x009C	; 0x80009c <__data_end>
     6e6:	30 91 9d 00 	lds	r19, 0x009D	; 0x80009d <__data_end+0x1>
     6ea:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <l>
     6ee:	90 91 9f 00 	lds	r25, 0x009F	; 0x80009f <l+0x1>
     6f2:	28 17       	cp	r18, r24
     6f4:	39 07       	cpc	r19, r25
     6f6:	48 f4       	brcc	.+18     	; 0x70a <main+0xcc>
     6f8:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
     6fc:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <__data_end+0x1>
     700:	01 96       	adiw	r24, 0x01	; 1
     702:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__data_end+0x1>
     706:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end>
			if(a != d){
     70a:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
     70e:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <__data_end+0x1>
     712:	08 17       	cp	r16, r24
     714:	19 07       	cpc	r17, r25
     716:	d1 f1       	breq	.+116    	; 0x78c <main+0x14e>
				float p = EEPROM_read(d);
     718:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
     71c:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <__data_end+0x1>
     720:	0e 94 d5 00 	call	0x1aa	; 0x1aa <EEPROM_read>
     724:	68 2f       	mov	r22, r24
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	80 e0       	ldi	r24, 0x00	; 0
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	0e 94 4e 04 	call	0x89c	; 0x89c <__floatunsisf>
				float v = p/255*5;
     730:	20 e0       	ldi	r18, 0x00	; 0
     732:	30 e0       	ldi	r19, 0x00	; 0
     734:	4f e7       	ldi	r20, 0x7F	; 127
     736:	53 e4       	ldi	r21, 0x43	; 67
     738:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <__divsf3>
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	40 ea       	ldi	r20, 0xA0	; 160
     742:	50 e4       	ldi	r21, 0x40	; 64
     744:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__mulsf3>
				uint8_t s[5];
				dtostrf(v, 1, 3, s); //Var, # digits, # decimales, cad
     748:	9e 01       	movw	r18, r28
     74a:	2f 5f       	subi	r18, 0xFF	; 255
     74c:	3f 4f       	sbci	r19, 0xFF	; 255
     74e:	79 01       	movw	r14, r18
     750:	89 01       	movw	r16, r18
     752:	23 e0       	ldi	r18, 0x03	; 3
     754:	41 e0       	ldi	r20, 0x01	; 1
     756:	0e 94 49 05 	call	0xa92	; 0xa92 <dtostrf>
				sprintf(uno, "%s v", s);
     75a:	ff 92       	push	r15
     75c:	ef 92       	push	r14
     75e:	86 e9       	ldi	r24, 0x96	; 150
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	9f 93       	push	r25
     764:	8f 93       	push	r24
     766:	80 ea       	ldi	r24, 0xA0	; 160
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	9f 93       	push	r25
     76c:	8f 93       	push	r24
     76e:	0e 94 69 05 	call	0xad2	; 0xad2 <sprintf>
				LCD_wr_instruction(0b11000000);
     772:	80 ec       	ldi	r24, 0xC0	; 192
     774:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
				LCD_wr_string(uno);
     778:	80 ea       	ldi	r24, 0xA0	; 160
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_wr_string>
     780:	0f 90       	pop	r0
     782:	0f 90       	pop	r0
     784:	0f 90       	pop	r0
     786:	0f 90       	pop	r0
     788:	0f 90       	pop	r0
     78a:	0f 90       	pop	r0
			}
			a = d;
     78c:	00 91 9c 00 	lds	r16, 0x009C	; 0x80009c <__data_end>
     790:	10 91 9d 00 	lds	r17, 0x009D	; 0x80009d <__data_end+0x1>
			t = hastaTecla();
     794:	0e 94 74 02 	call	0x4e8	; 0x4e8 <hastaTecla>
		}
		while(t != 'C');
     798:	83 34       	cpi	r24, 0x43	; 67
     79a:	09 f0       	breq	.+2      	; 0x79e <main+0x160>
     79c:	8e cf       	rjmp	.-228    	; 0x6ba <main+0x7c>
		LCD_wr_instruction(LCD_Cmd_Clear);
     79e:	81 e0       	ldi	r24, 0x01	; 1
     7a0:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
		LCD_wr_string("Sensando...");
     7a4:	8d e7       	ldi	r24, 0x7D	; 125
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_wr_string>
		d = 0;
     7ac:	10 92 9d 00 	sts	0x009D, r1	; 0x80009d <__data_end+0x1>
     7b0:	10 92 9c 00 	sts	0x009C, r1	; 0x80009c <__data_end>
		sei();
     7b4:	78 94       	sei
	}
     7b6:	5c cf       	rjmp	.-328    	; 0x670 <main+0x32>

000007b8 <__divsf3>:
     7b8:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__divsf3x>
     7bc:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_round>
     7c0:	0e 94 9b 04 	call	0x936	; 0x936 <__fp_pscB>
     7c4:	58 f0       	brcs	.+22     	; 0x7dc <__divsf3+0x24>
     7c6:	0e 94 94 04 	call	0x928	; 0x928 <__fp_pscA>
     7ca:	40 f0       	brcs	.+16     	; 0x7dc <__divsf3+0x24>
     7cc:	29 f4       	brne	.+10     	; 0x7d8 <__divsf3+0x20>
     7ce:	5f 3f       	cpi	r21, 0xFF	; 255
     7d0:	29 f0       	breq	.+10     	; 0x7dc <__divsf3+0x24>
     7d2:	0c 94 8b 04 	jmp	0x916	; 0x916 <__fp_inf>
     7d6:	51 11       	cpse	r21, r1
     7d8:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_szero>
     7dc:	0c 94 91 04 	jmp	0x922	; 0x922 <__fp_nan>

000007e0 <__divsf3x>:
     7e0:	0e 94 b3 04 	call	0x966	; 0x966 <__fp_split3>
     7e4:	68 f3       	brcs	.-38     	; 0x7c0 <__divsf3+0x8>

000007e6 <__divsf3_pse>:
     7e6:	99 23       	and	r25, r25
     7e8:	b1 f3       	breq	.-20     	; 0x7d6 <__divsf3+0x1e>
     7ea:	55 23       	and	r21, r21
     7ec:	91 f3       	breq	.-28     	; 0x7d2 <__divsf3+0x1a>
     7ee:	95 1b       	sub	r25, r21
     7f0:	55 0b       	sbc	r21, r21
     7f2:	bb 27       	eor	r27, r27
     7f4:	aa 27       	eor	r26, r26
     7f6:	62 17       	cp	r22, r18
     7f8:	73 07       	cpc	r23, r19
     7fa:	84 07       	cpc	r24, r20
     7fc:	38 f0       	brcs	.+14     	; 0x80c <__divsf3_pse+0x26>
     7fe:	9f 5f       	subi	r25, 0xFF	; 255
     800:	5f 4f       	sbci	r21, 0xFF	; 255
     802:	22 0f       	add	r18, r18
     804:	33 1f       	adc	r19, r19
     806:	44 1f       	adc	r20, r20
     808:	aa 1f       	adc	r26, r26
     80a:	a9 f3       	breq	.-22     	; 0x7f6 <__divsf3_pse+0x10>
     80c:	35 d0       	rcall	.+106    	; 0x878 <__divsf3_pse+0x92>
     80e:	0e 2e       	mov	r0, r30
     810:	3a f0       	brmi	.+14     	; 0x820 <__divsf3_pse+0x3a>
     812:	e0 e8       	ldi	r30, 0x80	; 128
     814:	32 d0       	rcall	.+100    	; 0x87a <__divsf3_pse+0x94>
     816:	91 50       	subi	r25, 0x01	; 1
     818:	50 40       	sbci	r21, 0x00	; 0
     81a:	e6 95       	lsr	r30
     81c:	00 1c       	adc	r0, r0
     81e:	ca f7       	brpl	.-14     	; 0x812 <__divsf3_pse+0x2c>
     820:	2b d0       	rcall	.+86     	; 0x878 <__divsf3_pse+0x92>
     822:	fe 2f       	mov	r31, r30
     824:	29 d0       	rcall	.+82     	; 0x878 <__divsf3_pse+0x92>
     826:	66 0f       	add	r22, r22
     828:	77 1f       	adc	r23, r23
     82a:	88 1f       	adc	r24, r24
     82c:	bb 1f       	adc	r27, r27
     82e:	26 17       	cp	r18, r22
     830:	37 07       	cpc	r19, r23
     832:	48 07       	cpc	r20, r24
     834:	ab 07       	cpc	r26, r27
     836:	b0 e8       	ldi	r27, 0x80	; 128
     838:	09 f0       	breq	.+2      	; 0x83c <__divsf3_pse+0x56>
     83a:	bb 0b       	sbc	r27, r27
     83c:	80 2d       	mov	r24, r0
     83e:	bf 01       	movw	r22, r30
     840:	ff 27       	eor	r31, r31
     842:	93 58       	subi	r25, 0x83	; 131
     844:	5f 4f       	sbci	r21, 0xFF	; 255
     846:	3a f0       	brmi	.+14     	; 0x856 <__divsf3_pse+0x70>
     848:	9e 3f       	cpi	r25, 0xFE	; 254
     84a:	51 05       	cpc	r21, r1
     84c:	78 f0       	brcs	.+30     	; 0x86c <__divsf3_pse+0x86>
     84e:	0c 94 8b 04 	jmp	0x916	; 0x916 <__fp_inf>
     852:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_szero>
     856:	5f 3f       	cpi	r21, 0xFF	; 255
     858:	e4 f3       	brlt	.-8      	; 0x852 <__divsf3_pse+0x6c>
     85a:	98 3e       	cpi	r25, 0xE8	; 232
     85c:	d4 f3       	brlt	.-12     	; 0x852 <__divsf3_pse+0x6c>
     85e:	86 95       	lsr	r24
     860:	77 95       	ror	r23
     862:	67 95       	ror	r22
     864:	b7 95       	ror	r27
     866:	f7 95       	ror	r31
     868:	9f 5f       	subi	r25, 0xFF	; 255
     86a:	c9 f7       	brne	.-14     	; 0x85e <__divsf3_pse+0x78>
     86c:	88 0f       	add	r24, r24
     86e:	91 1d       	adc	r25, r1
     870:	96 95       	lsr	r25
     872:	87 95       	ror	r24
     874:	97 f9       	bld	r25, 7
     876:	08 95       	ret
     878:	e1 e0       	ldi	r30, 0x01	; 1
     87a:	66 0f       	add	r22, r22
     87c:	77 1f       	adc	r23, r23
     87e:	88 1f       	adc	r24, r24
     880:	bb 1f       	adc	r27, r27
     882:	62 17       	cp	r22, r18
     884:	73 07       	cpc	r23, r19
     886:	84 07       	cpc	r24, r20
     888:	ba 07       	cpc	r27, r26
     88a:	20 f0       	brcs	.+8      	; 0x894 <__divsf3_pse+0xae>
     88c:	62 1b       	sub	r22, r18
     88e:	73 0b       	sbc	r23, r19
     890:	84 0b       	sbc	r24, r20
     892:	ba 0b       	sbc	r27, r26
     894:	ee 1f       	adc	r30, r30
     896:	88 f7       	brcc	.-30     	; 0x87a <__divsf3_pse+0x94>
     898:	e0 95       	com	r30
     89a:	08 95       	ret

0000089c <__floatunsisf>:
     89c:	e8 94       	clt
     89e:	09 c0       	rjmp	.+18     	; 0x8b2 <__floatsisf+0x12>

000008a0 <__floatsisf>:
     8a0:	97 fb       	bst	r25, 7
     8a2:	3e f4       	brtc	.+14     	; 0x8b2 <__floatsisf+0x12>
     8a4:	90 95       	com	r25
     8a6:	80 95       	com	r24
     8a8:	70 95       	com	r23
     8aa:	61 95       	neg	r22
     8ac:	7f 4f       	sbci	r23, 0xFF	; 255
     8ae:	8f 4f       	sbci	r24, 0xFF	; 255
     8b0:	9f 4f       	sbci	r25, 0xFF	; 255
     8b2:	99 23       	and	r25, r25
     8b4:	a9 f0       	breq	.+42     	; 0x8e0 <__floatsisf+0x40>
     8b6:	f9 2f       	mov	r31, r25
     8b8:	96 e9       	ldi	r25, 0x96	; 150
     8ba:	bb 27       	eor	r27, r27
     8bc:	93 95       	inc	r25
     8be:	f6 95       	lsr	r31
     8c0:	87 95       	ror	r24
     8c2:	77 95       	ror	r23
     8c4:	67 95       	ror	r22
     8c6:	b7 95       	ror	r27
     8c8:	f1 11       	cpse	r31, r1
     8ca:	f8 cf       	rjmp	.-16     	; 0x8bc <__floatsisf+0x1c>
     8cc:	fa f4       	brpl	.+62     	; 0x90c <__floatsisf+0x6c>
     8ce:	bb 0f       	add	r27, r27
     8d0:	11 f4       	brne	.+4      	; 0x8d6 <__floatsisf+0x36>
     8d2:	60 ff       	sbrs	r22, 0
     8d4:	1b c0       	rjmp	.+54     	; 0x90c <__floatsisf+0x6c>
     8d6:	6f 5f       	subi	r22, 0xFF	; 255
     8d8:	7f 4f       	sbci	r23, 0xFF	; 255
     8da:	8f 4f       	sbci	r24, 0xFF	; 255
     8dc:	9f 4f       	sbci	r25, 0xFF	; 255
     8de:	16 c0       	rjmp	.+44     	; 0x90c <__floatsisf+0x6c>
     8e0:	88 23       	and	r24, r24
     8e2:	11 f0       	breq	.+4      	; 0x8e8 <__floatsisf+0x48>
     8e4:	96 e9       	ldi	r25, 0x96	; 150
     8e6:	11 c0       	rjmp	.+34     	; 0x90a <__floatsisf+0x6a>
     8e8:	77 23       	and	r23, r23
     8ea:	21 f0       	breq	.+8      	; 0x8f4 <__floatsisf+0x54>
     8ec:	9e e8       	ldi	r25, 0x8E	; 142
     8ee:	87 2f       	mov	r24, r23
     8f0:	76 2f       	mov	r23, r22
     8f2:	05 c0       	rjmp	.+10     	; 0x8fe <__floatsisf+0x5e>
     8f4:	66 23       	and	r22, r22
     8f6:	71 f0       	breq	.+28     	; 0x914 <__floatsisf+0x74>
     8f8:	96 e8       	ldi	r25, 0x86	; 134
     8fa:	86 2f       	mov	r24, r22
     8fc:	70 e0       	ldi	r23, 0x00	; 0
     8fe:	60 e0       	ldi	r22, 0x00	; 0
     900:	2a f0       	brmi	.+10     	; 0x90c <__floatsisf+0x6c>
     902:	9a 95       	dec	r25
     904:	66 0f       	add	r22, r22
     906:	77 1f       	adc	r23, r23
     908:	88 1f       	adc	r24, r24
     90a:	da f7       	brpl	.-10     	; 0x902 <__floatsisf+0x62>
     90c:	88 0f       	add	r24, r24
     90e:	96 95       	lsr	r25
     910:	87 95       	ror	r24
     912:	97 f9       	bld	r25, 7
     914:	08 95       	ret

00000916 <__fp_inf>:
     916:	97 f9       	bld	r25, 7
     918:	9f 67       	ori	r25, 0x7F	; 127
     91a:	80 e8       	ldi	r24, 0x80	; 128
     91c:	70 e0       	ldi	r23, 0x00	; 0
     91e:	60 e0       	ldi	r22, 0x00	; 0
     920:	08 95       	ret

00000922 <__fp_nan>:
     922:	9f ef       	ldi	r25, 0xFF	; 255
     924:	80 ec       	ldi	r24, 0xC0	; 192
     926:	08 95       	ret

00000928 <__fp_pscA>:
     928:	00 24       	eor	r0, r0
     92a:	0a 94       	dec	r0
     92c:	16 16       	cp	r1, r22
     92e:	17 06       	cpc	r1, r23
     930:	18 06       	cpc	r1, r24
     932:	09 06       	cpc	r0, r25
     934:	08 95       	ret

00000936 <__fp_pscB>:
     936:	00 24       	eor	r0, r0
     938:	0a 94       	dec	r0
     93a:	12 16       	cp	r1, r18
     93c:	13 06       	cpc	r1, r19
     93e:	14 06       	cpc	r1, r20
     940:	05 06       	cpc	r0, r21
     942:	08 95       	ret

00000944 <__fp_round>:
     944:	09 2e       	mov	r0, r25
     946:	03 94       	inc	r0
     948:	00 0c       	add	r0, r0
     94a:	11 f4       	brne	.+4      	; 0x950 <__fp_round+0xc>
     94c:	88 23       	and	r24, r24
     94e:	52 f0       	brmi	.+20     	; 0x964 <__fp_round+0x20>
     950:	bb 0f       	add	r27, r27
     952:	40 f4       	brcc	.+16     	; 0x964 <__fp_round+0x20>
     954:	bf 2b       	or	r27, r31
     956:	11 f4       	brne	.+4      	; 0x95c <__fp_round+0x18>
     958:	60 ff       	sbrs	r22, 0
     95a:	04 c0       	rjmp	.+8      	; 0x964 <__fp_round+0x20>
     95c:	6f 5f       	subi	r22, 0xFF	; 255
     95e:	7f 4f       	sbci	r23, 0xFF	; 255
     960:	8f 4f       	sbci	r24, 0xFF	; 255
     962:	9f 4f       	sbci	r25, 0xFF	; 255
     964:	08 95       	ret

00000966 <__fp_split3>:
     966:	57 fd       	sbrc	r21, 7
     968:	90 58       	subi	r25, 0x80	; 128
     96a:	44 0f       	add	r20, r20
     96c:	55 1f       	adc	r21, r21
     96e:	59 f0       	breq	.+22     	; 0x986 <__fp_splitA+0x10>
     970:	5f 3f       	cpi	r21, 0xFF	; 255
     972:	71 f0       	breq	.+28     	; 0x990 <__fp_splitA+0x1a>
     974:	47 95       	ror	r20

00000976 <__fp_splitA>:
     976:	88 0f       	add	r24, r24
     978:	97 fb       	bst	r25, 7
     97a:	99 1f       	adc	r25, r25
     97c:	61 f0       	breq	.+24     	; 0x996 <__fp_splitA+0x20>
     97e:	9f 3f       	cpi	r25, 0xFF	; 255
     980:	79 f0       	breq	.+30     	; 0x9a0 <__fp_splitA+0x2a>
     982:	87 95       	ror	r24
     984:	08 95       	ret
     986:	12 16       	cp	r1, r18
     988:	13 06       	cpc	r1, r19
     98a:	14 06       	cpc	r1, r20
     98c:	55 1f       	adc	r21, r21
     98e:	f2 cf       	rjmp	.-28     	; 0x974 <__fp_split3+0xe>
     990:	46 95       	lsr	r20
     992:	f1 df       	rcall	.-30     	; 0x976 <__fp_splitA>
     994:	08 c0       	rjmp	.+16     	; 0x9a6 <__fp_splitA+0x30>
     996:	16 16       	cp	r1, r22
     998:	17 06       	cpc	r1, r23
     99a:	18 06       	cpc	r1, r24
     99c:	99 1f       	adc	r25, r25
     99e:	f1 cf       	rjmp	.-30     	; 0x982 <__fp_splitA+0xc>
     9a0:	86 95       	lsr	r24
     9a2:	71 05       	cpc	r23, r1
     9a4:	61 05       	cpc	r22, r1
     9a6:	08 94       	sec
     9a8:	08 95       	ret

000009aa <__fp_zero>:
     9aa:	e8 94       	clt

000009ac <__fp_szero>:
     9ac:	bb 27       	eor	r27, r27
     9ae:	66 27       	eor	r22, r22
     9b0:	77 27       	eor	r23, r23
     9b2:	cb 01       	movw	r24, r22
     9b4:	97 f9       	bld	r25, 7
     9b6:	08 95       	ret

000009b8 <__mulsf3>:
     9b8:	0e 94 ef 04 	call	0x9de	; 0x9de <__mulsf3x>
     9bc:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_round>
     9c0:	0e 94 94 04 	call	0x928	; 0x928 <__fp_pscA>
     9c4:	38 f0       	brcs	.+14     	; 0x9d4 <__mulsf3+0x1c>
     9c6:	0e 94 9b 04 	call	0x936	; 0x936 <__fp_pscB>
     9ca:	20 f0       	brcs	.+8      	; 0x9d4 <__mulsf3+0x1c>
     9cc:	95 23       	and	r25, r21
     9ce:	11 f0       	breq	.+4      	; 0x9d4 <__mulsf3+0x1c>
     9d0:	0c 94 8b 04 	jmp	0x916	; 0x916 <__fp_inf>
     9d4:	0c 94 91 04 	jmp	0x922	; 0x922 <__fp_nan>
     9d8:	11 24       	eor	r1, r1
     9da:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_szero>

000009de <__mulsf3x>:
     9de:	0e 94 b3 04 	call	0x966	; 0x966 <__fp_split3>
     9e2:	70 f3       	brcs	.-36     	; 0x9c0 <__mulsf3+0x8>

000009e4 <__mulsf3_pse>:
     9e4:	95 9f       	mul	r25, r21
     9e6:	c1 f3       	breq	.-16     	; 0x9d8 <__mulsf3+0x20>
     9e8:	95 0f       	add	r25, r21
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	55 1f       	adc	r21, r21
     9ee:	62 9f       	mul	r22, r18
     9f0:	f0 01       	movw	r30, r0
     9f2:	72 9f       	mul	r23, r18
     9f4:	bb 27       	eor	r27, r27
     9f6:	f0 0d       	add	r31, r0
     9f8:	b1 1d       	adc	r27, r1
     9fa:	63 9f       	mul	r22, r19
     9fc:	aa 27       	eor	r26, r26
     9fe:	f0 0d       	add	r31, r0
     a00:	b1 1d       	adc	r27, r1
     a02:	aa 1f       	adc	r26, r26
     a04:	64 9f       	mul	r22, r20
     a06:	66 27       	eor	r22, r22
     a08:	b0 0d       	add	r27, r0
     a0a:	a1 1d       	adc	r26, r1
     a0c:	66 1f       	adc	r22, r22
     a0e:	82 9f       	mul	r24, r18
     a10:	22 27       	eor	r18, r18
     a12:	b0 0d       	add	r27, r0
     a14:	a1 1d       	adc	r26, r1
     a16:	62 1f       	adc	r22, r18
     a18:	73 9f       	mul	r23, r19
     a1a:	b0 0d       	add	r27, r0
     a1c:	a1 1d       	adc	r26, r1
     a1e:	62 1f       	adc	r22, r18
     a20:	83 9f       	mul	r24, r19
     a22:	a0 0d       	add	r26, r0
     a24:	61 1d       	adc	r22, r1
     a26:	22 1f       	adc	r18, r18
     a28:	74 9f       	mul	r23, r20
     a2a:	33 27       	eor	r19, r19
     a2c:	a0 0d       	add	r26, r0
     a2e:	61 1d       	adc	r22, r1
     a30:	23 1f       	adc	r18, r19
     a32:	84 9f       	mul	r24, r20
     a34:	60 0d       	add	r22, r0
     a36:	21 1d       	adc	r18, r1
     a38:	82 2f       	mov	r24, r18
     a3a:	76 2f       	mov	r23, r22
     a3c:	6a 2f       	mov	r22, r26
     a3e:	11 24       	eor	r1, r1
     a40:	9f 57       	subi	r25, 0x7F	; 127
     a42:	50 40       	sbci	r21, 0x00	; 0
     a44:	9a f0       	brmi	.+38     	; 0xa6c <__mulsf3_pse+0x88>
     a46:	f1 f0       	breq	.+60     	; 0xa84 <__mulsf3_pse+0xa0>
     a48:	88 23       	and	r24, r24
     a4a:	4a f0       	brmi	.+18     	; 0xa5e <__mulsf3_pse+0x7a>
     a4c:	ee 0f       	add	r30, r30
     a4e:	ff 1f       	adc	r31, r31
     a50:	bb 1f       	adc	r27, r27
     a52:	66 1f       	adc	r22, r22
     a54:	77 1f       	adc	r23, r23
     a56:	88 1f       	adc	r24, r24
     a58:	91 50       	subi	r25, 0x01	; 1
     a5a:	50 40       	sbci	r21, 0x00	; 0
     a5c:	a9 f7       	brne	.-22     	; 0xa48 <__mulsf3_pse+0x64>
     a5e:	9e 3f       	cpi	r25, 0xFE	; 254
     a60:	51 05       	cpc	r21, r1
     a62:	80 f0       	brcs	.+32     	; 0xa84 <__mulsf3_pse+0xa0>
     a64:	0c 94 8b 04 	jmp	0x916	; 0x916 <__fp_inf>
     a68:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_szero>
     a6c:	5f 3f       	cpi	r21, 0xFF	; 255
     a6e:	e4 f3       	brlt	.-8      	; 0xa68 <__mulsf3_pse+0x84>
     a70:	98 3e       	cpi	r25, 0xE8	; 232
     a72:	d4 f3       	brlt	.-12     	; 0xa68 <__mulsf3_pse+0x84>
     a74:	86 95       	lsr	r24
     a76:	77 95       	ror	r23
     a78:	67 95       	ror	r22
     a7a:	b7 95       	ror	r27
     a7c:	f7 95       	ror	r31
     a7e:	e7 95       	ror	r30
     a80:	9f 5f       	subi	r25, 0xFF	; 255
     a82:	c1 f7       	brne	.-16     	; 0xa74 <__mulsf3_pse+0x90>
     a84:	fe 2b       	or	r31, r30
     a86:	88 0f       	add	r24, r24
     a88:	91 1d       	adc	r25, r1
     a8a:	96 95       	lsr	r25
     a8c:	87 95       	ror	r24
     a8e:	97 f9       	bld	r25, 7
     a90:	08 95       	ret

00000a92 <dtostrf>:
     a92:	ef 92       	push	r14
     a94:	0f 93       	push	r16
     a96:	1f 93       	push	r17
     a98:	cf 93       	push	r28
     a9a:	df 93       	push	r29
     a9c:	e8 01       	movw	r28, r16
     a9e:	47 fd       	sbrc	r20, 7
     aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <dtostrf+0x14>
     aa2:	34 e0       	ldi	r19, 0x04	; 4
     aa4:	01 c0       	rjmp	.+2      	; 0xaa8 <dtostrf+0x16>
     aa6:	34 e1       	ldi	r19, 0x14	; 20
     aa8:	04 2e       	mov	r0, r20
     aaa:	00 0c       	add	r0, r0
     aac:	55 0b       	sbc	r21, r21
     aae:	57 ff       	sbrs	r21, 7
     ab0:	03 c0       	rjmp	.+6      	; 0xab8 <dtostrf+0x26>
     ab2:	51 95       	neg	r21
     ab4:	41 95       	neg	r20
     ab6:	51 09       	sbc	r21, r1
     ab8:	e3 2e       	mov	r14, r19
     aba:	02 2f       	mov	r16, r18
     abc:	24 2f       	mov	r18, r20
     abe:	ae 01       	movw	r20, r28
     ac0:	0e 94 6c 07 	call	0xed8	; 0xed8 <dtoa_prf>
     ac4:	ce 01       	movw	r24, r28
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	1f 91       	pop	r17
     acc:	0f 91       	pop	r16
     ace:	ef 90       	pop	r14
     ad0:	08 95       	ret

00000ad2 <sprintf>:
     ad2:	ae e0       	ldi	r26, 0x0E	; 14
     ad4:	b0 e0       	ldi	r27, 0x00	; 0
     ad6:	ef e6       	ldi	r30, 0x6F	; 111
     ad8:	f5 e0       	ldi	r31, 0x05	; 5
     ada:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__prologue_saves__+0x1c>
     ade:	0d 89       	ldd	r16, Y+21	; 0x15
     ae0:	1e 89       	ldd	r17, Y+22	; 0x16
     ae2:	86 e0       	ldi	r24, 0x06	; 6
     ae4:	8c 83       	std	Y+4, r24	; 0x04
     ae6:	1a 83       	std	Y+2, r17	; 0x02
     ae8:	09 83       	std	Y+1, r16	; 0x01
     aea:	8f ef       	ldi	r24, 0xFF	; 255
     aec:	9f e7       	ldi	r25, 0x7F	; 127
     aee:	9e 83       	std	Y+6, r25	; 0x06
     af0:	8d 83       	std	Y+5, r24	; 0x05
     af2:	ae 01       	movw	r20, r28
     af4:	47 5e       	subi	r20, 0xE7	; 231
     af6:	5f 4f       	sbci	r21, 0xFF	; 255
     af8:	6f 89       	ldd	r22, Y+23	; 0x17
     afa:	78 8d       	ldd	r23, Y+24	; 0x18
     afc:	ce 01       	movw	r24, r28
     afe:	01 96       	adiw	r24, 0x01	; 1
     b00:	0e 94 8b 05 	call	0xb16	; 0xb16 <vfprintf>
     b04:	ef 81       	ldd	r30, Y+7	; 0x07
     b06:	f8 85       	ldd	r31, Y+8	; 0x08
     b08:	e0 0f       	add	r30, r16
     b0a:	f1 1f       	adc	r31, r17
     b0c:	10 82       	st	Z, r1
     b0e:	2e 96       	adiw	r28, 0x0e	; 14
     b10:	e4 e0       	ldi	r30, 0x04	; 4
     b12:	0c 94 78 0a 	jmp	0x14f0	; 0x14f0 <__epilogue_restores__+0x1c>

00000b16 <vfprintf>:
     b16:	ab e0       	ldi	r26, 0x0B	; 11
     b18:	b0 e0       	ldi	r27, 0x00	; 0
     b1a:	e1 e9       	ldi	r30, 0x91	; 145
     b1c:	f5 e0       	ldi	r31, 0x05	; 5
     b1e:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__prologue_saves__>
     b22:	6c 01       	movw	r12, r24
     b24:	7b 01       	movw	r14, r22
     b26:	8a 01       	movw	r16, r20
     b28:	fc 01       	movw	r30, r24
     b2a:	17 82       	std	Z+7, r1	; 0x07
     b2c:	16 82       	std	Z+6, r1	; 0x06
     b2e:	83 81       	ldd	r24, Z+3	; 0x03
     b30:	81 ff       	sbrs	r24, 1
     b32:	cc c1       	rjmp	.+920    	; 0xecc <vfprintf+0x3b6>
     b34:	ce 01       	movw	r24, r28
     b36:	01 96       	adiw	r24, 0x01	; 1
     b38:	3c 01       	movw	r6, r24
     b3a:	f6 01       	movw	r30, r12
     b3c:	93 81       	ldd	r25, Z+3	; 0x03
     b3e:	f7 01       	movw	r30, r14
     b40:	93 fd       	sbrc	r25, 3
     b42:	85 91       	lpm	r24, Z+
     b44:	93 ff       	sbrs	r25, 3
     b46:	81 91       	ld	r24, Z+
     b48:	7f 01       	movw	r14, r30
     b4a:	88 23       	and	r24, r24
     b4c:	09 f4       	brne	.+2      	; 0xb50 <vfprintf+0x3a>
     b4e:	ba c1       	rjmp	.+884    	; 0xec4 <vfprintf+0x3ae>
     b50:	85 32       	cpi	r24, 0x25	; 37
     b52:	39 f4       	brne	.+14     	; 0xb62 <vfprintf+0x4c>
     b54:	93 fd       	sbrc	r25, 3
     b56:	85 91       	lpm	r24, Z+
     b58:	93 ff       	sbrs	r25, 3
     b5a:	81 91       	ld	r24, Z+
     b5c:	7f 01       	movw	r14, r30
     b5e:	85 32       	cpi	r24, 0x25	; 37
     b60:	29 f4       	brne	.+10     	; 0xb6c <vfprintf+0x56>
     b62:	b6 01       	movw	r22, r12
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	0e 94 b4 09 	call	0x1368	; 0x1368 <fputc>
     b6a:	e7 cf       	rjmp	.-50     	; 0xb3a <vfprintf+0x24>
     b6c:	91 2c       	mov	r9, r1
     b6e:	21 2c       	mov	r2, r1
     b70:	31 2c       	mov	r3, r1
     b72:	ff e1       	ldi	r31, 0x1F	; 31
     b74:	f3 15       	cp	r31, r3
     b76:	d8 f0       	brcs	.+54     	; 0xbae <vfprintf+0x98>
     b78:	8b 32       	cpi	r24, 0x2B	; 43
     b7a:	79 f0       	breq	.+30     	; 0xb9a <vfprintf+0x84>
     b7c:	38 f4       	brcc	.+14     	; 0xb8c <vfprintf+0x76>
     b7e:	80 32       	cpi	r24, 0x20	; 32
     b80:	79 f0       	breq	.+30     	; 0xba0 <vfprintf+0x8a>
     b82:	83 32       	cpi	r24, 0x23	; 35
     b84:	a1 f4       	brne	.+40     	; 0xbae <vfprintf+0x98>
     b86:	23 2d       	mov	r18, r3
     b88:	20 61       	ori	r18, 0x10	; 16
     b8a:	1d c0       	rjmp	.+58     	; 0xbc6 <vfprintf+0xb0>
     b8c:	8d 32       	cpi	r24, 0x2D	; 45
     b8e:	61 f0       	breq	.+24     	; 0xba8 <vfprintf+0x92>
     b90:	80 33       	cpi	r24, 0x30	; 48
     b92:	69 f4       	brne	.+26     	; 0xbae <vfprintf+0x98>
     b94:	23 2d       	mov	r18, r3
     b96:	21 60       	ori	r18, 0x01	; 1
     b98:	16 c0       	rjmp	.+44     	; 0xbc6 <vfprintf+0xb0>
     b9a:	83 2d       	mov	r24, r3
     b9c:	82 60       	ori	r24, 0x02	; 2
     b9e:	38 2e       	mov	r3, r24
     ba0:	e3 2d       	mov	r30, r3
     ba2:	e4 60       	ori	r30, 0x04	; 4
     ba4:	3e 2e       	mov	r3, r30
     ba6:	2a c0       	rjmp	.+84     	; 0xbfc <vfprintf+0xe6>
     ba8:	f3 2d       	mov	r31, r3
     baa:	f8 60       	ori	r31, 0x08	; 8
     bac:	1d c0       	rjmp	.+58     	; 0xbe8 <vfprintf+0xd2>
     bae:	37 fc       	sbrc	r3, 7
     bb0:	2d c0       	rjmp	.+90     	; 0xc0c <vfprintf+0xf6>
     bb2:	20 ed       	ldi	r18, 0xD0	; 208
     bb4:	28 0f       	add	r18, r24
     bb6:	2a 30       	cpi	r18, 0x0A	; 10
     bb8:	40 f0       	brcs	.+16     	; 0xbca <vfprintf+0xb4>
     bba:	8e 32       	cpi	r24, 0x2E	; 46
     bbc:	b9 f4       	brne	.+46     	; 0xbec <vfprintf+0xd6>
     bbe:	36 fc       	sbrc	r3, 6
     bc0:	81 c1       	rjmp	.+770    	; 0xec4 <vfprintf+0x3ae>
     bc2:	23 2d       	mov	r18, r3
     bc4:	20 64       	ori	r18, 0x40	; 64
     bc6:	32 2e       	mov	r3, r18
     bc8:	19 c0       	rjmp	.+50     	; 0xbfc <vfprintf+0xe6>
     bca:	36 fe       	sbrs	r3, 6
     bcc:	06 c0       	rjmp	.+12     	; 0xbda <vfprintf+0xc4>
     bce:	8a e0       	ldi	r24, 0x0A	; 10
     bd0:	98 9e       	mul	r9, r24
     bd2:	20 0d       	add	r18, r0
     bd4:	11 24       	eor	r1, r1
     bd6:	92 2e       	mov	r9, r18
     bd8:	11 c0       	rjmp	.+34     	; 0xbfc <vfprintf+0xe6>
     bda:	ea e0       	ldi	r30, 0x0A	; 10
     bdc:	2e 9e       	mul	r2, r30
     bde:	20 0d       	add	r18, r0
     be0:	11 24       	eor	r1, r1
     be2:	22 2e       	mov	r2, r18
     be4:	f3 2d       	mov	r31, r3
     be6:	f0 62       	ori	r31, 0x20	; 32
     be8:	3f 2e       	mov	r3, r31
     bea:	08 c0       	rjmp	.+16     	; 0xbfc <vfprintf+0xe6>
     bec:	8c 36       	cpi	r24, 0x6C	; 108
     bee:	21 f4       	brne	.+8      	; 0xbf8 <vfprintf+0xe2>
     bf0:	83 2d       	mov	r24, r3
     bf2:	80 68       	ori	r24, 0x80	; 128
     bf4:	38 2e       	mov	r3, r24
     bf6:	02 c0       	rjmp	.+4      	; 0xbfc <vfprintf+0xe6>
     bf8:	88 36       	cpi	r24, 0x68	; 104
     bfa:	41 f4       	brne	.+16     	; 0xc0c <vfprintf+0xf6>
     bfc:	f7 01       	movw	r30, r14
     bfe:	93 fd       	sbrc	r25, 3
     c00:	85 91       	lpm	r24, Z+
     c02:	93 ff       	sbrs	r25, 3
     c04:	81 91       	ld	r24, Z+
     c06:	7f 01       	movw	r14, r30
     c08:	81 11       	cpse	r24, r1
     c0a:	b3 cf       	rjmp	.-154    	; 0xb72 <vfprintf+0x5c>
     c0c:	98 2f       	mov	r25, r24
     c0e:	9f 7d       	andi	r25, 0xDF	; 223
     c10:	95 54       	subi	r25, 0x45	; 69
     c12:	93 30       	cpi	r25, 0x03	; 3
     c14:	28 f4       	brcc	.+10     	; 0xc20 <vfprintf+0x10a>
     c16:	0c 5f       	subi	r16, 0xFC	; 252
     c18:	1f 4f       	sbci	r17, 0xFF	; 255
     c1a:	9f e3       	ldi	r25, 0x3F	; 63
     c1c:	99 83       	std	Y+1, r25	; 0x01
     c1e:	0d c0       	rjmp	.+26     	; 0xc3a <vfprintf+0x124>
     c20:	83 36       	cpi	r24, 0x63	; 99
     c22:	31 f0       	breq	.+12     	; 0xc30 <vfprintf+0x11a>
     c24:	83 37       	cpi	r24, 0x73	; 115
     c26:	71 f0       	breq	.+28     	; 0xc44 <vfprintf+0x12e>
     c28:	83 35       	cpi	r24, 0x53	; 83
     c2a:	09 f0       	breq	.+2      	; 0xc2e <vfprintf+0x118>
     c2c:	59 c0       	rjmp	.+178    	; 0xce0 <vfprintf+0x1ca>
     c2e:	21 c0       	rjmp	.+66     	; 0xc72 <vfprintf+0x15c>
     c30:	f8 01       	movw	r30, r16
     c32:	80 81       	ld	r24, Z
     c34:	89 83       	std	Y+1, r24	; 0x01
     c36:	0e 5f       	subi	r16, 0xFE	; 254
     c38:	1f 4f       	sbci	r17, 0xFF	; 255
     c3a:	88 24       	eor	r8, r8
     c3c:	83 94       	inc	r8
     c3e:	91 2c       	mov	r9, r1
     c40:	53 01       	movw	r10, r6
     c42:	13 c0       	rjmp	.+38     	; 0xc6a <vfprintf+0x154>
     c44:	28 01       	movw	r4, r16
     c46:	f2 e0       	ldi	r31, 0x02	; 2
     c48:	4f 0e       	add	r4, r31
     c4a:	51 1c       	adc	r5, r1
     c4c:	f8 01       	movw	r30, r16
     c4e:	a0 80       	ld	r10, Z
     c50:	b1 80       	ldd	r11, Z+1	; 0x01
     c52:	36 fe       	sbrs	r3, 6
     c54:	03 c0       	rjmp	.+6      	; 0xc5c <vfprintf+0x146>
     c56:	69 2d       	mov	r22, r9
     c58:	70 e0       	ldi	r23, 0x00	; 0
     c5a:	02 c0       	rjmp	.+4      	; 0xc60 <vfprintf+0x14a>
     c5c:	6f ef       	ldi	r22, 0xFF	; 255
     c5e:	7f ef       	ldi	r23, 0xFF	; 255
     c60:	c5 01       	movw	r24, r10
     c62:	0e 94 a9 09 	call	0x1352	; 0x1352 <strnlen>
     c66:	4c 01       	movw	r8, r24
     c68:	82 01       	movw	r16, r4
     c6a:	f3 2d       	mov	r31, r3
     c6c:	ff 77       	andi	r31, 0x7F	; 127
     c6e:	3f 2e       	mov	r3, r31
     c70:	16 c0       	rjmp	.+44     	; 0xc9e <vfprintf+0x188>
     c72:	28 01       	movw	r4, r16
     c74:	22 e0       	ldi	r18, 0x02	; 2
     c76:	42 0e       	add	r4, r18
     c78:	51 1c       	adc	r5, r1
     c7a:	f8 01       	movw	r30, r16
     c7c:	a0 80       	ld	r10, Z
     c7e:	b1 80       	ldd	r11, Z+1	; 0x01
     c80:	36 fe       	sbrs	r3, 6
     c82:	03 c0       	rjmp	.+6      	; 0xc8a <vfprintf+0x174>
     c84:	69 2d       	mov	r22, r9
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	02 c0       	rjmp	.+4      	; 0xc8e <vfprintf+0x178>
     c8a:	6f ef       	ldi	r22, 0xFF	; 255
     c8c:	7f ef       	ldi	r23, 0xFF	; 255
     c8e:	c5 01       	movw	r24, r10
     c90:	0e 94 9e 09 	call	0x133c	; 0x133c <strnlen_P>
     c94:	4c 01       	movw	r8, r24
     c96:	f3 2d       	mov	r31, r3
     c98:	f0 68       	ori	r31, 0x80	; 128
     c9a:	3f 2e       	mov	r3, r31
     c9c:	82 01       	movw	r16, r4
     c9e:	33 fc       	sbrc	r3, 3
     ca0:	1b c0       	rjmp	.+54     	; 0xcd8 <vfprintf+0x1c2>
     ca2:	82 2d       	mov	r24, r2
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	88 16       	cp	r8, r24
     ca8:	99 06       	cpc	r9, r25
     caa:	b0 f4       	brcc	.+44     	; 0xcd8 <vfprintf+0x1c2>
     cac:	b6 01       	movw	r22, r12
     cae:	80 e2       	ldi	r24, 0x20	; 32
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	0e 94 b4 09 	call	0x1368	; 0x1368 <fputc>
     cb6:	2a 94       	dec	r2
     cb8:	f4 cf       	rjmp	.-24     	; 0xca2 <vfprintf+0x18c>
     cba:	f5 01       	movw	r30, r10
     cbc:	37 fc       	sbrc	r3, 7
     cbe:	85 91       	lpm	r24, Z+
     cc0:	37 fe       	sbrs	r3, 7
     cc2:	81 91       	ld	r24, Z+
     cc4:	5f 01       	movw	r10, r30
     cc6:	b6 01       	movw	r22, r12
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 b4 09 	call	0x1368	; 0x1368 <fputc>
     cce:	21 10       	cpse	r2, r1
     cd0:	2a 94       	dec	r2
     cd2:	21 e0       	ldi	r18, 0x01	; 1
     cd4:	82 1a       	sub	r8, r18
     cd6:	91 08       	sbc	r9, r1
     cd8:	81 14       	cp	r8, r1
     cda:	91 04       	cpc	r9, r1
     cdc:	71 f7       	brne	.-36     	; 0xcba <vfprintf+0x1a4>
     cde:	e8 c0       	rjmp	.+464    	; 0xeb0 <vfprintf+0x39a>
     ce0:	84 36       	cpi	r24, 0x64	; 100
     ce2:	11 f0       	breq	.+4      	; 0xce8 <vfprintf+0x1d2>
     ce4:	89 36       	cpi	r24, 0x69	; 105
     ce6:	41 f5       	brne	.+80     	; 0xd38 <vfprintf+0x222>
     ce8:	f8 01       	movw	r30, r16
     cea:	37 fe       	sbrs	r3, 7
     cec:	07 c0       	rjmp	.+14     	; 0xcfc <vfprintf+0x1e6>
     cee:	60 81       	ld	r22, Z
     cf0:	71 81       	ldd	r23, Z+1	; 0x01
     cf2:	82 81       	ldd	r24, Z+2	; 0x02
     cf4:	93 81       	ldd	r25, Z+3	; 0x03
     cf6:	0c 5f       	subi	r16, 0xFC	; 252
     cf8:	1f 4f       	sbci	r17, 0xFF	; 255
     cfa:	08 c0       	rjmp	.+16     	; 0xd0c <vfprintf+0x1f6>
     cfc:	60 81       	ld	r22, Z
     cfe:	71 81       	ldd	r23, Z+1	; 0x01
     d00:	07 2e       	mov	r0, r23
     d02:	00 0c       	add	r0, r0
     d04:	88 0b       	sbc	r24, r24
     d06:	99 0b       	sbc	r25, r25
     d08:	0e 5f       	subi	r16, 0xFE	; 254
     d0a:	1f 4f       	sbci	r17, 0xFF	; 255
     d0c:	f3 2d       	mov	r31, r3
     d0e:	ff 76       	andi	r31, 0x6F	; 111
     d10:	3f 2e       	mov	r3, r31
     d12:	97 ff       	sbrs	r25, 7
     d14:	09 c0       	rjmp	.+18     	; 0xd28 <vfprintf+0x212>
     d16:	90 95       	com	r25
     d18:	80 95       	com	r24
     d1a:	70 95       	com	r23
     d1c:	61 95       	neg	r22
     d1e:	7f 4f       	sbci	r23, 0xFF	; 255
     d20:	8f 4f       	sbci	r24, 0xFF	; 255
     d22:	9f 4f       	sbci	r25, 0xFF	; 255
     d24:	f0 68       	ori	r31, 0x80	; 128
     d26:	3f 2e       	mov	r3, r31
     d28:	2a e0       	ldi	r18, 0x0A	; 10
     d2a:	30 e0       	ldi	r19, 0x00	; 0
     d2c:	a3 01       	movw	r20, r6
     d2e:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <__ultoa_invert>
     d32:	88 2e       	mov	r8, r24
     d34:	86 18       	sub	r8, r6
     d36:	45 c0       	rjmp	.+138    	; 0xdc2 <vfprintf+0x2ac>
     d38:	85 37       	cpi	r24, 0x75	; 117
     d3a:	31 f4       	brne	.+12     	; 0xd48 <vfprintf+0x232>
     d3c:	23 2d       	mov	r18, r3
     d3e:	2f 7e       	andi	r18, 0xEF	; 239
     d40:	b2 2e       	mov	r11, r18
     d42:	2a e0       	ldi	r18, 0x0A	; 10
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	25 c0       	rjmp	.+74     	; 0xd92 <vfprintf+0x27c>
     d48:	93 2d       	mov	r25, r3
     d4a:	99 7f       	andi	r25, 0xF9	; 249
     d4c:	b9 2e       	mov	r11, r25
     d4e:	8f 36       	cpi	r24, 0x6F	; 111
     d50:	c1 f0       	breq	.+48     	; 0xd82 <vfprintf+0x26c>
     d52:	18 f4       	brcc	.+6      	; 0xd5a <vfprintf+0x244>
     d54:	88 35       	cpi	r24, 0x58	; 88
     d56:	79 f0       	breq	.+30     	; 0xd76 <vfprintf+0x260>
     d58:	b5 c0       	rjmp	.+362    	; 0xec4 <vfprintf+0x3ae>
     d5a:	80 37       	cpi	r24, 0x70	; 112
     d5c:	19 f0       	breq	.+6      	; 0xd64 <vfprintf+0x24e>
     d5e:	88 37       	cpi	r24, 0x78	; 120
     d60:	21 f0       	breq	.+8      	; 0xd6a <vfprintf+0x254>
     d62:	b0 c0       	rjmp	.+352    	; 0xec4 <vfprintf+0x3ae>
     d64:	e9 2f       	mov	r30, r25
     d66:	e0 61       	ori	r30, 0x10	; 16
     d68:	be 2e       	mov	r11, r30
     d6a:	b4 fe       	sbrs	r11, 4
     d6c:	0d c0       	rjmp	.+26     	; 0xd88 <vfprintf+0x272>
     d6e:	fb 2d       	mov	r31, r11
     d70:	f4 60       	ori	r31, 0x04	; 4
     d72:	bf 2e       	mov	r11, r31
     d74:	09 c0       	rjmp	.+18     	; 0xd88 <vfprintf+0x272>
     d76:	34 fe       	sbrs	r3, 4
     d78:	0a c0       	rjmp	.+20     	; 0xd8e <vfprintf+0x278>
     d7a:	29 2f       	mov	r18, r25
     d7c:	26 60       	ori	r18, 0x06	; 6
     d7e:	b2 2e       	mov	r11, r18
     d80:	06 c0       	rjmp	.+12     	; 0xd8e <vfprintf+0x278>
     d82:	28 e0       	ldi	r18, 0x08	; 8
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	05 c0       	rjmp	.+10     	; 0xd92 <vfprintf+0x27c>
     d88:	20 e1       	ldi	r18, 0x10	; 16
     d8a:	30 e0       	ldi	r19, 0x00	; 0
     d8c:	02 c0       	rjmp	.+4      	; 0xd92 <vfprintf+0x27c>
     d8e:	20 e1       	ldi	r18, 0x10	; 16
     d90:	32 e0       	ldi	r19, 0x02	; 2
     d92:	f8 01       	movw	r30, r16
     d94:	b7 fe       	sbrs	r11, 7
     d96:	07 c0       	rjmp	.+14     	; 0xda6 <vfprintf+0x290>
     d98:	60 81       	ld	r22, Z
     d9a:	71 81       	ldd	r23, Z+1	; 0x01
     d9c:	82 81       	ldd	r24, Z+2	; 0x02
     d9e:	93 81       	ldd	r25, Z+3	; 0x03
     da0:	0c 5f       	subi	r16, 0xFC	; 252
     da2:	1f 4f       	sbci	r17, 0xFF	; 255
     da4:	06 c0       	rjmp	.+12     	; 0xdb2 <vfprintf+0x29c>
     da6:	60 81       	ld	r22, Z
     da8:	71 81       	ldd	r23, Z+1	; 0x01
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	0e 5f       	subi	r16, 0xFE	; 254
     db0:	1f 4f       	sbci	r17, 0xFF	; 255
     db2:	a3 01       	movw	r20, r6
     db4:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <__ultoa_invert>
     db8:	88 2e       	mov	r8, r24
     dba:	86 18       	sub	r8, r6
     dbc:	fb 2d       	mov	r31, r11
     dbe:	ff 77       	andi	r31, 0x7F	; 127
     dc0:	3f 2e       	mov	r3, r31
     dc2:	36 fe       	sbrs	r3, 6
     dc4:	0d c0       	rjmp	.+26     	; 0xde0 <vfprintf+0x2ca>
     dc6:	23 2d       	mov	r18, r3
     dc8:	2e 7f       	andi	r18, 0xFE	; 254
     dca:	a2 2e       	mov	r10, r18
     dcc:	89 14       	cp	r8, r9
     dce:	58 f4       	brcc	.+22     	; 0xde6 <vfprintf+0x2d0>
     dd0:	34 fe       	sbrs	r3, 4
     dd2:	0b c0       	rjmp	.+22     	; 0xdea <vfprintf+0x2d4>
     dd4:	32 fc       	sbrc	r3, 2
     dd6:	09 c0       	rjmp	.+18     	; 0xdea <vfprintf+0x2d4>
     dd8:	83 2d       	mov	r24, r3
     dda:	8e 7e       	andi	r24, 0xEE	; 238
     ddc:	a8 2e       	mov	r10, r24
     dde:	05 c0       	rjmp	.+10     	; 0xdea <vfprintf+0x2d4>
     de0:	b8 2c       	mov	r11, r8
     de2:	a3 2c       	mov	r10, r3
     de4:	03 c0       	rjmp	.+6      	; 0xdec <vfprintf+0x2d6>
     de6:	b8 2c       	mov	r11, r8
     de8:	01 c0       	rjmp	.+2      	; 0xdec <vfprintf+0x2d6>
     dea:	b9 2c       	mov	r11, r9
     dec:	a4 fe       	sbrs	r10, 4
     dee:	0f c0       	rjmp	.+30     	; 0xe0e <vfprintf+0x2f8>
     df0:	fe 01       	movw	r30, r28
     df2:	e8 0d       	add	r30, r8
     df4:	f1 1d       	adc	r31, r1
     df6:	80 81       	ld	r24, Z
     df8:	80 33       	cpi	r24, 0x30	; 48
     dfa:	21 f4       	brne	.+8      	; 0xe04 <vfprintf+0x2ee>
     dfc:	9a 2d       	mov	r25, r10
     dfe:	99 7e       	andi	r25, 0xE9	; 233
     e00:	a9 2e       	mov	r10, r25
     e02:	09 c0       	rjmp	.+18     	; 0xe16 <vfprintf+0x300>
     e04:	a2 fe       	sbrs	r10, 2
     e06:	06 c0       	rjmp	.+12     	; 0xe14 <vfprintf+0x2fe>
     e08:	b3 94       	inc	r11
     e0a:	b3 94       	inc	r11
     e0c:	04 c0       	rjmp	.+8      	; 0xe16 <vfprintf+0x300>
     e0e:	8a 2d       	mov	r24, r10
     e10:	86 78       	andi	r24, 0x86	; 134
     e12:	09 f0       	breq	.+2      	; 0xe16 <vfprintf+0x300>
     e14:	b3 94       	inc	r11
     e16:	a3 fc       	sbrc	r10, 3
     e18:	11 c0       	rjmp	.+34     	; 0xe3c <vfprintf+0x326>
     e1a:	a0 fe       	sbrs	r10, 0
     e1c:	06 c0       	rjmp	.+12     	; 0xe2a <vfprintf+0x314>
     e1e:	b2 14       	cp	r11, r2
     e20:	88 f4       	brcc	.+34     	; 0xe44 <vfprintf+0x32e>
     e22:	28 0c       	add	r2, r8
     e24:	92 2c       	mov	r9, r2
     e26:	9b 18       	sub	r9, r11
     e28:	0e c0       	rjmp	.+28     	; 0xe46 <vfprintf+0x330>
     e2a:	b2 14       	cp	r11, r2
     e2c:	60 f4       	brcc	.+24     	; 0xe46 <vfprintf+0x330>
     e2e:	b6 01       	movw	r22, r12
     e30:	80 e2       	ldi	r24, 0x20	; 32
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	0e 94 b4 09 	call	0x1368	; 0x1368 <fputc>
     e38:	b3 94       	inc	r11
     e3a:	f7 cf       	rjmp	.-18     	; 0xe2a <vfprintf+0x314>
     e3c:	b2 14       	cp	r11, r2
     e3e:	18 f4       	brcc	.+6      	; 0xe46 <vfprintf+0x330>
     e40:	2b 18       	sub	r2, r11
     e42:	02 c0       	rjmp	.+4      	; 0xe48 <vfprintf+0x332>
     e44:	98 2c       	mov	r9, r8
     e46:	21 2c       	mov	r2, r1
     e48:	a4 fe       	sbrs	r10, 4
     e4a:	10 c0       	rjmp	.+32     	; 0xe6c <vfprintf+0x356>
     e4c:	b6 01       	movw	r22, r12
     e4e:	80 e3       	ldi	r24, 0x30	; 48
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	0e 94 b4 09 	call	0x1368	; 0x1368 <fputc>
     e56:	a2 fe       	sbrs	r10, 2
     e58:	17 c0       	rjmp	.+46     	; 0xe88 <vfprintf+0x372>
     e5a:	a1 fc       	sbrc	r10, 1
     e5c:	03 c0       	rjmp	.+6      	; 0xe64 <vfprintf+0x34e>
     e5e:	88 e7       	ldi	r24, 0x78	; 120
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	02 c0       	rjmp	.+4      	; 0xe68 <vfprintf+0x352>
     e64:	88 e5       	ldi	r24, 0x58	; 88
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	b6 01       	movw	r22, r12
     e6a:	0c c0       	rjmp	.+24     	; 0xe84 <vfprintf+0x36e>
     e6c:	8a 2d       	mov	r24, r10
     e6e:	86 78       	andi	r24, 0x86	; 134
     e70:	59 f0       	breq	.+22     	; 0xe88 <vfprintf+0x372>
     e72:	a1 fe       	sbrs	r10, 1
     e74:	02 c0       	rjmp	.+4      	; 0xe7a <vfprintf+0x364>
     e76:	8b e2       	ldi	r24, 0x2B	; 43
     e78:	01 c0       	rjmp	.+2      	; 0xe7c <vfprintf+0x366>
     e7a:	80 e2       	ldi	r24, 0x20	; 32
     e7c:	a7 fc       	sbrc	r10, 7
     e7e:	8d e2       	ldi	r24, 0x2D	; 45
     e80:	b6 01       	movw	r22, r12
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	0e 94 b4 09 	call	0x1368	; 0x1368 <fputc>
     e88:	89 14       	cp	r8, r9
     e8a:	38 f4       	brcc	.+14     	; 0xe9a <vfprintf+0x384>
     e8c:	b6 01       	movw	r22, r12
     e8e:	80 e3       	ldi	r24, 0x30	; 48
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	0e 94 b4 09 	call	0x1368	; 0x1368 <fputc>
     e96:	9a 94       	dec	r9
     e98:	f7 cf       	rjmp	.-18     	; 0xe88 <vfprintf+0x372>
     e9a:	8a 94       	dec	r8
     e9c:	f3 01       	movw	r30, r6
     e9e:	e8 0d       	add	r30, r8
     ea0:	f1 1d       	adc	r31, r1
     ea2:	80 81       	ld	r24, Z
     ea4:	b6 01       	movw	r22, r12
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	0e 94 b4 09 	call	0x1368	; 0x1368 <fputc>
     eac:	81 10       	cpse	r8, r1
     eae:	f5 cf       	rjmp	.-22     	; 0xe9a <vfprintf+0x384>
     eb0:	22 20       	and	r2, r2
     eb2:	09 f4       	brne	.+2      	; 0xeb6 <vfprintf+0x3a0>
     eb4:	42 ce       	rjmp	.-892    	; 0xb3a <vfprintf+0x24>
     eb6:	b6 01       	movw	r22, r12
     eb8:	80 e2       	ldi	r24, 0x20	; 32
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	0e 94 b4 09 	call	0x1368	; 0x1368 <fputc>
     ec0:	2a 94       	dec	r2
     ec2:	f6 cf       	rjmp	.-20     	; 0xeb0 <vfprintf+0x39a>
     ec4:	f6 01       	movw	r30, r12
     ec6:	86 81       	ldd	r24, Z+6	; 0x06
     ec8:	97 81       	ldd	r25, Z+7	; 0x07
     eca:	02 c0       	rjmp	.+4      	; 0xed0 <vfprintf+0x3ba>
     ecc:	8f ef       	ldi	r24, 0xFF	; 255
     ece:	9f ef       	ldi	r25, 0xFF	; 255
     ed0:	2b 96       	adiw	r28, 0x0b	; 11
     ed2:	e2 e1       	ldi	r30, 0x12	; 18
     ed4:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__epilogue_restores__>

00000ed8 <dtoa_prf>:
     ed8:	a9 e0       	ldi	r26, 0x09	; 9
     eda:	b0 e0       	ldi	r27, 0x00	; 0
     edc:	e2 e7       	ldi	r30, 0x72	; 114
     ede:	f7 e0       	ldi	r31, 0x07	; 7
     ee0:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__prologue_saves__+0xc>
     ee4:	6a 01       	movw	r12, r20
     ee6:	12 2f       	mov	r17, r18
     ee8:	b0 2e       	mov	r11, r16
     eea:	2b e3       	ldi	r18, 0x3B	; 59
     eec:	20 17       	cp	r18, r16
     eee:	20 f0       	brcs	.+8      	; 0xef8 <dtoa_prf+0x20>
     ef0:	ff 24       	eor	r15, r15
     ef2:	f3 94       	inc	r15
     ef4:	f0 0e       	add	r15, r16
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <dtoa_prf+0x24>
     ef8:	2c e3       	ldi	r18, 0x3C	; 60
     efa:	f2 2e       	mov	r15, r18
     efc:	0f 2d       	mov	r16, r15
     efe:	27 e0       	ldi	r18, 0x07	; 7
     f00:	ae 01       	movw	r20, r28
     f02:	4f 5f       	subi	r20, 0xFF	; 255
     f04:	5f 4f       	sbci	r21, 0xFF	; 255
     f06:	0e 94 c6 08 	call	0x118c	; 0x118c <__ftoa_engine>
     f0a:	bc 01       	movw	r22, r24
     f0c:	49 81       	ldd	r20, Y+1	; 0x01
     f0e:	84 2f       	mov	r24, r20
     f10:	89 70       	andi	r24, 0x09	; 9
     f12:	81 30       	cpi	r24, 0x01	; 1
     f14:	31 f0       	breq	.+12     	; 0xf22 <dtoa_prf+0x4a>
     f16:	e1 fc       	sbrc	r14, 1
     f18:	06 c0       	rjmp	.+12     	; 0xf26 <dtoa_prf+0x4e>
     f1a:	e0 fe       	sbrs	r14, 0
     f1c:	06 c0       	rjmp	.+12     	; 0xf2a <dtoa_prf+0x52>
     f1e:	90 e2       	ldi	r25, 0x20	; 32
     f20:	05 c0       	rjmp	.+10     	; 0xf2c <dtoa_prf+0x54>
     f22:	9d e2       	ldi	r25, 0x2D	; 45
     f24:	03 c0       	rjmp	.+6      	; 0xf2c <dtoa_prf+0x54>
     f26:	9b e2       	ldi	r25, 0x2B	; 43
     f28:	01 c0       	rjmp	.+2      	; 0xf2c <dtoa_prf+0x54>
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	5e 2d       	mov	r21, r14
     f2e:	50 71       	andi	r21, 0x10	; 16
     f30:	43 ff       	sbrs	r20, 3
     f32:	3c c0       	rjmp	.+120    	; 0xfac <dtoa_prf+0xd4>
     f34:	91 11       	cpse	r25, r1
     f36:	02 c0       	rjmp	.+4      	; 0xf3c <dtoa_prf+0x64>
     f38:	83 e0       	ldi	r24, 0x03	; 3
     f3a:	01 c0       	rjmp	.+2      	; 0xf3e <dtoa_prf+0x66>
     f3c:	84 e0       	ldi	r24, 0x04	; 4
     f3e:	81 17       	cp	r24, r17
     f40:	18 f4       	brcc	.+6      	; 0xf48 <dtoa_prf+0x70>
     f42:	21 2f       	mov	r18, r17
     f44:	28 1b       	sub	r18, r24
     f46:	01 c0       	rjmp	.+2      	; 0xf4a <dtoa_prf+0x72>
     f48:	20 e0       	ldi	r18, 0x00	; 0
     f4a:	51 11       	cpse	r21, r1
     f4c:	0b c0       	rjmp	.+22     	; 0xf64 <dtoa_prf+0x8c>
     f4e:	f6 01       	movw	r30, r12
     f50:	82 2f       	mov	r24, r18
     f52:	30 e2       	ldi	r19, 0x20	; 32
     f54:	88 23       	and	r24, r24
     f56:	19 f0       	breq	.+6      	; 0xf5e <dtoa_prf+0x86>
     f58:	31 93       	st	Z+, r19
     f5a:	81 50       	subi	r24, 0x01	; 1
     f5c:	fb cf       	rjmp	.-10     	; 0xf54 <dtoa_prf+0x7c>
     f5e:	c2 0e       	add	r12, r18
     f60:	d1 1c       	adc	r13, r1
     f62:	20 e0       	ldi	r18, 0x00	; 0
     f64:	99 23       	and	r25, r25
     f66:	29 f0       	breq	.+10     	; 0xf72 <dtoa_prf+0x9a>
     f68:	d6 01       	movw	r26, r12
     f6a:	9c 93       	st	X, r25
     f6c:	f6 01       	movw	r30, r12
     f6e:	31 96       	adiw	r30, 0x01	; 1
     f70:	6f 01       	movw	r12, r30
     f72:	c6 01       	movw	r24, r12
     f74:	03 96       	adiw	r24, 0x03	; 3
     f76:	e2 fe       	sbrs	r14, 2
     f78:	0a c0       	rjmp	.+20     	; 0xf8e <dtoa_prf+0xb6>
     f7a:	3e e4       	ldi	r19, 0x4E	; 78
     f7c:	d6 01       	movw	r26, r12
     f7e:	3c 93       	st	X, r19
     f80:	41 e4       	ldi	r20, 0x41	; 65
     f82:	11 96       	adiw	r26, 0x01	; 1
     f84:	4c 93       	st	X, r20
     f86:	11 97       	sbiw	r26, 0x01	; 1
     f88:	12 96       	adiw	r26, 0x02	; 2
     f8a:	3c 93       	st	X, r19
     f8c:	06 c0       	rjmp	.+12     	; 0xf9a <dtoa_prf+0xc2>
     f8e:	3e e6       	ldi	r19, 0x6E	; 110
     f90:	f6 01       	movw	r30, r12
     f92:	30 83       	st	Z, r19
     f94:	41 e6       	ldi	r20, 0x61	; 97
     f96:	41 83       	std	Z+1, r20	; 0x01
     f98:	32 83       	std	Z+2, r19	; 0x02
     f9a:	fc 01       	movw	r30, r24
     f9c:	32 2f       	mov	r19, r18
     f9e:	40 e2       	ldi	r20, 0x20	; 32
     fa0:	33 23       	and	r19, r19
     fa2:	09 f4       	brne	.+2      	; 0xfa6 <dtoa_prf+0xce>
     fa4:	42 c0       	rjmp	.+132    	; 0x102a <dtoa_prf+0x152>
     fa6:	41 93       	st	Z+, r20
     fa8:	31 50       	subi	r19, 0x01	; 1
     faa:	fa cf       	rjmp	.-12     	; 0xfa0 <dtoa_prf+0xc8>
     fac:	42 ff       	sbrs	r20, 2
     fae:	44 c0       	rjmp	.+136    	; 0x1038 <dtoa_prf+0x160>
     fb0:	91 11       	cpse	r25, r1
     fb2:	02 c0       	rjmp	.+4      	; 0xfb8 <dtoa_prf+0xe0>
     fb4:	83 e0       	ldi	r24, 0x03	; 3
     fb6:	01 c0       	rjmp	.+2      	; 0xfba <dtoa_prf+0xe2>
     fb8:	84 e0       	ldi	r24, 0x04	; 4
     fba:	81 17       	cp	r24, r17
     fbc:	18 f4       	brcc	.+6      	; 0xfc4 <dtoa_prf+0xec>
     fbe:	21 2f       	mov	r18, r17
     fc0:	28 1b       	sub	r18, r24
     fc2:	01 c0       	rjmp	.+2      	; 0xfc6 <dtoa_prf+0xee>
     fc4:	20 e0       	ldi	r18, 0x00	; 0
     fc6:	51 11       	cpse	r21, r1
     fc8:	0b c0       	rjmp	.+22     	; 0xfe0 <dtoa_prf+0x108>
     fca:	f6 01       	movw	r30, r12
     fcc:	82 2f       	mov	r24, r18
     fce:	30 e2       	ldi	r19, 0x20	; 32
     fd0:	88 23       	and	r24, r24
     fd2:	19 f0       	breq	.+6      	; 0xfda <dtoa_prf+0x102>
     fd4:	31 93       	st	Z+, r19
     fd6:	81 50       	subi	r24, 0x01	; 1
     fd8:	fb cf       	rjmp	.-10     	; 0xfd0 <dtoa_prf+0xf8>
     fda:	c2 0e       	add	r12, r18
     fdc:	d1 1c       	adc	r13, r1
     fde:	20 e0       	ldi	r18, 0x00	; 0
     fe0:	99 23       	and	r25, r25
     fe2:	29 f0       	breq	.+10     	; 0xfee <dtoa_prf+0x116>
     fe4:	d6 01       	movw	r26, r12
     fe6:	9c 93       	st	X, r25
     fe8:	f6 01       	movw	r30, r12
     fea:	31 96       	adiw	r30, 0x01	; 1
     fec:	6f 01       	movw	r12, r30
     fee:	c6 01       	movw	r24, r12
     ff0:	03 96       	adiw	r24, 0x03	; 3
     ff2:	e2 fe       	sbrs	r14, 2
     ff4:	0b c0       	rjmp	.+22     	; 0x100c <dtoa_prf+0x134>
     ff6:	39 e4       	ldi	r19, 0x49	; 73
     ff8:	d6 01       	movw	r26, r12
     ffa:	3c 93       	st	X, r19
     ffc:	3e e4       	ldi	r19, 0x4E	; 78
     ffe:	11 96       	adiw	r26, 0x01	; 1
    1000:	3c 93       	st	X, r19
    1002:	11 97       	sbiw	r26, 0x01	; 1
    1004:	36 e4       	ldi	r19, 0x46	; 70
    1006:	12 96       	adiw	r26, 0x02	; 2
    1008:	3c 93       	st	X, r19
    100a:	07 c0       	rjmp	.+14     	; 0x101a <dtoa_prf+0x142>
    100c:	39 e6       	ldi	r19, 0x69	; 105
    100e:	f6 01       	movw	r30, r12
    1010:	30 83       	st	Z, r19
    1012:	3e e6       	ldi	r19, 0x6E	; 110
    1014:	31 83       	std	Z+1, r19	; 0x01
    1016:	36 e6       	ldi	r19, 0x66	; 102
    1018:	32 83       	std	Z+2, r19	; 0x02
    101a:	fc 01       	movw	r30, r24
    101c:	32 2f       	mov	r19, r18
    101e:	40 e2       	ldi	r20, 0x20	; 32
    1020:	33 23       	and	r19, r19
    1022:	19 f0       	breq	.+6      	; 0x102a <dtoa_prf+0x152>
    1024:	41 93       	st	Z+, r20
    1026:	31 50       	subi	r19, 0x01	; 1
    1028:	fb cf       	rjmp	.-10     	; 0x1020 <dtoa_prf+0x148>
    102a:	fc 01       	movw	r30, r24
    102c:	e2 0f       	add	r30, r18
    102e:	f1 1d       	adc	r31, r1
    1030:	10 82       	st	Z, r1
    1032:	8e ef       	ldi	r24, 0xFE	; 254
    1034:	9f ef       	ldi	r25, 0xFF	; 255
    1036:	a6 c0       	rjmp	.+332    	; 0x1184 <dtoa_prf+0x2ac>
    1038:	21 e0       	ldi	r18, 0x01	; 1
    103a:	30 e0       	ldi	r19, 0x00	; 0
    103c:	91 11       	cpse	r25, r1
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <dtoa_prf+0x16c>
    1040:	20 e0       	ldi	r18, 0x00	; 0
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	16 16       	cp	r1, r22
    1046:	17 06       	cpc	r1, r23
    1048:	1c f4       	brge	.+6      	; 0x1050 <dtoa_prf+0x178>
    104a:	fb 01       	movw	r30, r22
    104c:	31 96       	adiw	r30, 0x01	; 1
    104e:	02 c0       	rjmp	.+4      	; 0x1054 <dtoa_prf+0x17c>
    1050:	e1 e0       	ldi	r30, 0x01	; 1
    1052:	f0 e0       	ldi	r31, 0x00	; 0
    1054:	2e 0f       	add	r18, r30
    1056:	3f 1f       	adc	r19, r31
    1058:	bb 20       	and	r11, r11
    105a:	21 f0       	breq	.+8      	; 0x1064 <dtoa_prf+0x18c>
    105c:	eb 2d       	mov	r30, r11
    105e:	f0 e0       	ldi	r31, 0x00	; 0
    1060:	31 96       	adiw	r30, 0x01	; 1
    1062:	02 c0       	rjmp	.+4      	; 0x1068 <dtoa_prf+0x190>
    1064:	e0 e0       	ldi	r30, 0x00	; 0
    1066:	f0 e0       	ldi	r31, 0x00	; 0
    1068:	2e 0f       	add	r18, r30
    106a:	3f 1f       	adc	r19, r31
    106c:	e1 2f       	mov	r30, r17
    106e:	f0 e0       	ldi	r31, 0x00	; 0
    1070:	2e 17       	cp	r18, r30
    1072:	3f 07       	cpc	r19, r31
    1074:	1c f4       	brge	.+6      	; 0x107c <dtoa_prf+0x1a4>
    1076:	12 1b       	sub	r17, r18
    1078:	21 2f       	mov	r18, r17
    107a:	01 c0       	rjmp	.+2      	; 0x107e <dtoa_prf+0x1a6>
    107c:	20 e0       	ldi	r18, 0x00	; 0
    107e:	8e 2d       	mov	r24, r14
    1080:	88 71       	andi	r24, 0x18	; 24
    1082:	59 f4       	brne	.+22     	; 0x109a <dtoa_prf+0x1c2>
    1084:	f6 01       	movw	r30, r12
    1086:	82 2f       	mov	r24, r18
    1088:	30 e2       	ldi	r19, 0x20	; 32
    108a:	88 23       	and	r24, r24
    108c:	19 f0       	breq	.+6      	; 0x1094 <dtoa_prf+0x1bc>
    108e:	31 93       	st	Z+, r19
    1090:	81 50       	subi	r24, 0x01	; 1
    1092:	fb cf       	rjmp	.-10     	; 0x108a <dtoa_prf+0x1b2>
    1094:	c2 0e       	add	r12, r18
    1096:	d1 1c       	adc	r13, r1
    1098:	20 e0       	ldi	r18, 0x00	; 0
    109a:	99 23       	and	r25, r25
    109c:	29 f0       	breq	.+10     	; 0x10a8 <dtoa_prf+0x1d0>
    109e:	d6 01       	movw	r26, r12
    10a0:	9c 93       	st	X, r25
    10a2:	f6 01       	movw	r30, r12
    10a4:	31 96       	adiw	r30, 0x01	; 1
    10a6:	6f 01       	movw	r12, r30
    10a8:	51 11       	cpse	r21, r1
    10aa:	0b c0       	rjmp	.+22     	; 0x10c2 <dtoa_prf+0x1ea>
    10ac:	f6 01       	movw	r30, r12
    10ae:	82 2f       	mov	r24, r18
    10b0:	90 e3       	ldi	r25, 0x30	; 48
    10b2:	88 23       	and	r24, r24
    10b4:	19 f0       	breq	.+6      	; 0x10bc <dtoa_prf+0x1e4>
    10b6:	91 93       	st	Z+, r25
    10b8:	81 50       	subi	r24, 0x01	; 1
    10ba:	fb cf       	rjmp	.-10     	; 0x10b2 <dtoa_prf+0x1da>
    10bc:	c2 0e       	add	r12, r18
    10be:	d1 1c       	adc	r13, r1
    10c0:	20 e0       	ldi	r18, 0x00	; 0
    10c2:	0f 2d       	mov	r16, r15
    10c4:	06 0f       	add	r16, r22
    10c6:	9a 81       	ldd	r25, Y+2	; 0x02
    10c8:	34 2f       	mov	r19, r20
    10ca:	30 71       	andi	r19, 0x10	; 16
    10cc:	44 ff       	sbrs	r20, 4
    10ce:	03 c0       	rjmp	.+6      	; 0x10d6 <dtoa_prf+0x1fe>
    10d0:	91 33       	cpi	r25, 0x31	; 49
    10d2:	09 f4       	brne	.+2      	; 0x10d6 <dtoa_prf+0x1fe>
    10d4:	01 50       	subi	r16, 0x01	; 1
    10d6:	10 16       	cp	r1, r16
    10d8:	24 f4       	brge	.+8      	; 0x10e2 <dtoa_prf+0x20a>
    10da:	09 30       	cpi	r16, 0x09	; 9
    10dc:	18 f0       	brcs	.+6      	; 0x10e4 <dtoa_prf+0x20c>
    10de:	08 e0       	ldi	r16, 0x08	; 8
    10e0:	01 c0       	rjmp	.+2      	; 0x10e4 <dtoa_prf+0x20c>
    10e2:	01 e0       	ldi	r16, 0x01	; 1
    10e4:	ab 01       	movw	r20, r22
    10e6:	77 ff       	sbrs	r23, 7
    10e8:	02 c0       	rjmp	.+4      	; 0x10ee <dtoa_prf+0x216>
    10ea:	40 e0       	ldi	r20, 0x00	; 0
    10ec:	50 e0       	ldi	r21, 0x00	; 0
    10ee:	fb 01       	movw	r30, r22
    10f0:	e4 1b       	sub	r30, r20
    10f2:	f5 0b       	sbc	r31, r21
    10f4:	a1 e0       	ldi	r26, 0x01	; 1
    10f6:	b0 e0       	ldi	r27, 0x00	; 0
    10f8:	ac 0f       	add	r26, r28
    10fa:	bd 1f       	adc	r27, r29
    10fc:	ea 0f       	add	r30, r26
    10fe:	fb 1f       	adc	r31, r27
    1100:	8e e2       	ldi	r24, 0x2E	; 46
    1102:	a8 2e       	mov	r10, r24
    1104:	4b 01       	movw	r8, r22
    1106:	80 1a       	sub	r8, r16
    1108:	91 08       	sbc	r9, r1
    110a:	0b 2d       	mov	r16, r11
    110c:	10 e0       	ldi	r17, 0x00	; 0
    110e:	11 95       	neg	r17
    1110:	01 95       	neg	r16
    1112:	11 09       	sbc	r17, r1
    1114:	4f 3f       	cpi	r20, 0xFF	; 255
    1116:	bf ef       	ldi	r27, 0xFF	; 255
    1118:	5b 07       	cpc	r21, r27
    111a:	21 f4       	brne	.+8      	; 0x1124 <dtoa_prf+0x24c>
    111c:	d6 01       	movw	r26, r12
    111e:	ac 92       	st	X, r10
    1120:	11 96       	adiw	r26, 0x01	; 1
    1122:	6d 01       	movw	r12, r26
    1124:	64 17       	cp	r22, r20
    1126:	75 07       	cpc	r23, r21
    1128:	2c f0       	brlt	.+10     	; 0x1134 <dtoa_prf+0x25c>
    112a:	84 16       	cp	r8, r20
    112c:	95 06       	cpc	r9, r21
    112e:	14 f4       	brge	.+4      	; 0x1134 <dtoa_prf+0x25c>
    1130:	81 81       	ldd	r24, Z+1	; 0x01
    1132:	01 c0       	rjmp	.+2      	; 0x1136 <dtoa_prf+0x25e>
    1134:	80 e3       	ldi	r24, 0x30	; 48
    1136:	41 50       	subi	r20, 0x01	; 1
    1138:	51 09       	sbc	r21, r1
    113a:	31 96       	adiw	r30, 0x01	; 1
    113c:	d6 01       	movw	r26, r12
    113e:	11 96       	adiw	r26, 0x01	; 1
    1140:	7d 01       	movw	r14, r26
    1142:	40 17       	cp	r20, r16
    1144:	51 07       	cpc	r21, r17
    1146:	24 f0       	brlt	.+8      	; 0x1150 <dtoa_prf+0x278>
    1148:	d6 01       	movw	r26, r12
    114a:	8c 93       	st	X, r24
    114c:	67 01       	movw	r12, r14
    114e:	e2 cf       	rjmp	.-60     	; 0x1114 <dtoa_prf+0x23c>
    1150:	64 17       	cp	r22, r20
    1152:	75 07       	cpc	r23, r21
    1154:	39 f4       	brne	.+14     	; 0x1164 <dtoa_prf+0x28c>
    1156:	96 33       	cpi	r25, 0x36	; 54
    1158:	20 f4       	brcc	.+8      	; 0x1162 <dtoa_prf+0x28a>
    115a:	95 33       	cpi	r25, 0x35	; 53
    115c:	19 f4       	brne	.+6      	; 0x1164 <dtoa_prf+0x28c>
    115e:	31 11       	cpse	r19, r1
    1160:	01 c0       	rjmp	.+2      	; 0x1164 <dtoa_prf+0x28c>
    1162:	81 e3       	ldi	r24, 0x31	; 49
    1164:	f6 01       	movw	r30, r12
    1166:	80 83       	st	Z, r24
    1168:	f7 01       	movw	r30, r14
    116a:	82 2f       	mov	r24, r18
    116c:	90 e2       	ldi	r25, 0x20	; 32
    116e:	88 23       	and	r24, r24
    1170:	19 f0       	breq	.+6      	; 0x1178 <dtoa_prf+0x2a0>
    1172:	91 93       	st	Z+, r25
    1174:	81 50       	subi	r24, 0x01	; 1
    1176:	fb cf       	rjmp	.-10     	; 0x116e <dtoa_prf+0x296>
    1178:	f7 01       	movw	r30, r14
    117a:	e2 0f       	add	r30, r18
    117c:	f1 1d       	adc	r31, r1
    117e:	10 82       	st	Z, r1
    1180:	80 e0       	ldi	r24, 0x00	; 0
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	29 96       	adiw	r28, 0x09	; 9
    1186:	ec e0       	ldi	r30, 0x0C	; 12
    1188:	0c 94 70 0a 	jmp	0x14e0	; 0x14e0 <__epilogue_restores__+0xc>

0000118c <__ftoa_engine>:
    118c:	28 30       	cpi	r18, 0x08	; 8
    118e:	08 f0       	brcs	.+2      	; 0x1192 <__ftoa_engine+0x6>
    1190:	27 e0       	ldi	r18, 0x07	; 7
    1192:	33 27       	eor	r19, r19
    1194:	da 01       	movw	r26, r20
    1196:	99 0f       	add	r25, r25
    1198:	31 1d       	adc	r19, r1
    119a:	87 fd       	sbrc	r24, 7
    119c:	91 60       	ori	r25, 0x01	; 1
    119e:	00 96       	adiw	r24, 0x00	; 0
    11a0:	61 05       	cpc	r22, r1
    11a2:	71 05       	cpc	r23, r1
    11a4:	39 f4       	brne	.+14     	; 0x11b4 <__ftoa_engine+0x28>
    11a6:	32 60       	ori	r19, 0x02	; 2
    11a8:	2e 5f       	subi	r18, 0xFE	; 254
    11aa:	3d 93       	st	X+, r19
    11ac:	30 e3       	ldi	r19, 0x30	; 48
    11ae:	2a 95       	dec	r18
    11b0:	e1 f7       	brne	.-8      	; 0x11aa <__ftoa_engine+0x1e>
    11b2:	08 95       	ret
    11b4:	9f 3f       	cpi	r25, 0xFF	; 255
    11b6:	30 f0       	brcs	.+12     	; 0x11c4 <__ftoa_engine+0x38>
    11b8:	80 38       	cpi	r24, 0x80	; 128
    11ba:	71 05       	cpc	r23, r1
    11bc:	61 05       	cpc	r22, r1
    11be:	09 f0       	breq	.+2      	; 0x11c2 <__ftoa_engine+0x36>
    11c0:	3c 5f       	subi	r19, 0xFC	; 252
    11c2:	3c 5f       	subi	r19, 0xFC	; 252
    11c4:	3d 93       	st	X+, r19
    11c6:	91 30       	cpi	r25, 0x01	; 1
    11c8:	08 f0       	brcs	.+2      	; 0x11cc <__ftoa_engine+0x40>
    11ca:	80 68       	ori	r24, 0x80	; 128
    11cc:	91 1d       	adc	r25, r1
    11ce:	df 93       	push	r29
    11d0:	cf 93       	push	r28
    11d2:	1f 93       	push	r17
    11d4:	0f 93       	push	r16
    11d6:	ff 92       	push	r15
    11d8:	ef 92       	push	r14
    11da:	19 2f       	mov	r17, r25
    11dc:	98 7f       	andi	r25, 0xF8	; 248
    11de:	96 95       	lsr	r25
    11e0:	e9 2f       	mov	r30, r25
    11e2:	96 95       	lsr	r25
    11e4:	96 95       	lsr	r25
    11e6:	e9 0f       	add	r30, r25
    11e8:	ff 27       	eor	r31, r31
    11ea:	e2 55       	subi	r30, 0x52	; 82
    11ec:	ff 4f       	sbci	r31, 0xFF	; 255
    11ee:	99 27       	eor	r25, r25
    11f0:	33 27       	eor	r19, r19
    11f2:	ee 24       	eor	r14, r14
    11f4:	ff 24       	eor	r15, r15
    11f6:	a7 01       	movw	r20, r14
    11f8:	e7 01       	movw	r28, r14
    11fa:	05 90       	lpm	r0, Z+
    11fc:	08 94       	sec
    11fe:	07 94       	ror	r0
    1200:	28 f4       	brcc	.+10     	; 0x120c <__ftoa_engine+0x80>
    1202:	36 0f       	add	r19, r22
    1204:	e7 1e       	adc	r14, r23
    1206:	f8 1e       	adc	r15, r24
    1208:	49 1f       	adc	r20, r25
    120a:	51 1d       	adc	r21, r1
    120c:	66 0f       	add	r22, r22
    120e:	77 1f       	adc	r23, r23
    1210:	88 1f       	adc	r24, r24
    1212:	99 1f       	adc	r25, r25
    1214:	06 94       	lsr	r0
    1216:	a1 f7       	brne	.-24     	; 0x1200 <__ftoa_engine+0x74>
    1218:	05 90       	lpm	r0, Z+
    121a:	07 94       	ror	r0
    121c:	28 f4       	brcc	.+10     	; 0x1228 <__ftoa_engine+0x9c>
    121e:	e7 0e       	add	r14, r23
    1220:	f8 1e       	adc	r15, r24
    1222:	49 1f       	adc	r20, r25
    1224:	56 1f       	adc	r21, r22
    1226:	c1 1d       	adc	r28, r1
    1228:	77 0f       	add	r23, r23
    122a:	88 1f       	adc	r24, r24
    122c:	99 1f       	adc	r25, r25
    122e:	66 1f       	adc	r22, r22
    1230:	06 94       	lsr	r0
    1232:	a1 f7       	brne	.-24     	; 0x121c <__ftoa_engine+0x90>
    1234:	05 90       	lpm	r0, Z+
    1236:	07 94       	ror	r0
    1238:	28 f4       	brcc	.+10     	; 0x1244 <__ftoa_engine+0xb8>
    123a:	f8 0e       	add	r15, r24
    123c:	49 1f       	adc	r20, r25
    123e:	56 1f       	adc	r21, r22
    1240:	c7 1f       	adc	r28, r23
    1242:	d1 1d       	adc	r29, r1
    1244:	88 0f       	add	r24, r24
    1246:	99 1f       	adc	r25, r25
    1248:	66 1f       	adc	r22, r22
    124a:	77 1f       	adc	r23, r23
    124c:	06 94       	lsr	r0
    124e:	a1 f7       	brne	.-24     	; 0x1238 <__ftoa_engine+0xac>
    1250:	05 90       	lpm	r0, Z+
    1252:	07 94       	ror	r0
    1254:	20 f4       	brcc	.+8      	; 0x125e <__ftoa_engine+0xd2>
    1256:	49 0f       	add	r20, r25
    1258:	56 1f       	adc	r21, r22
    125a:	c7 1f       	adc	r28, r23
    125c:	d8 1f       	adc	r29, r24
    125e:	99 0f       	add	r25, r25
    1260:	66 1f       	adc	r22, r22
    1262:	77 1f       	adc	r23, r23
    1264:	88 1f       	adc	r24, r24
    1266:	06 94       	lsr	r0
    1268:	a9 f7       	brne	.-22     	; 0x1254 <__ftoa_engine+0xc8>
    126a:	84 91       	lpm	r24, Z
    126c:	10 95       	com	r17
    126e:	17 70       	andi	r17, 0x07	; 7
    1270:	41 f0       	breq	.+16     	; 0x1282 <__ftoa_engine+0xf6>
    1272:	d6 95       	lsr	r29
    1274:	c7 95       	ror	r28
    1276:	57 95       	ror	r21
    1278:	47 95       	ror	r20
    127a:	f7 94       	ror	r15
    127c:	e7 94       	ror	r14
    127e:	1a 95       	dec	r17
    1280:	c1 f7       	brne	.-16     	; 0x1272 <__ftoa_engine+0xe6>
    1282:	e4 e5       	ldi	r30, 0x54	; 84
    1284:	f0 e0       	ldi	r31, 0x00	; 0
    1286:	68 94       	set
    1288:	15 90       	lpm	r1, Z+
    128a:	15 91       	lpm	r17, Z+
    128c:	35 91       	lpm	r19, Z+
    128e:	65 91       	lpm	r22, Z+
    1290:	95 91       	lpm	r25, Z+
    1292:	05 90       	lpm	r0, Z+
    1294:	7f e2       	ldi	r23, 0x2F	; 47
    1296:	73 95       	inc	r23
    1298:	e1 18       	sub	r14, r1
    129a:	f1 0a       	sbc	r15, r17
    129c:	43 0b       	sbc	r20, r19
    129e:	56 0b       	sbc	r21, r22
    12a0:	c9 0b       	sbc	r28, r25
    12a2:	d0 09       	sbc	r29, r0
    12a4:	c0 f7       	brcc	.-16     	; 0x1296 <__ftoa_engine+0x10a>
    12a6:	e1 0c       	add	r14, r1
    12a8:	f1 1e       	adc	r15, r17
    12aa:	43 1f       	adc	r20, r19
    12ac:	56 1f       	adc	r21, r22
    12ae:	c9 1f       	adc	r28, r25
    12b0:	d0 1d       	adc	r29, r0
    12b2:	7e f4       	brtc	.+30     	; 0x12d2 <__ftoa_engine+0x146>
    12b4:	70 33       	cpi	r23, 0x30	; 48
    12b6:	11 f4       	brne	.+4      	; 0x12bc <__ftoa_engine+0x130>
    12b8:	8a 95       	dec	r24
    12ba:	e6 cf       	rjmp	.-52     	; 0x1288 <__ftoa_engine+0xfc>
    12bc:	e8 94       	clt
    12be:	01 50       	subi	r16, 0x01	; 1
    12c0:	30 f0       	brcs	.+12     	; 0x12ce <__ftoa_engine+0x142>
    12c2:	08 0f       	add	r16, r24
    12c4:	0a f4       	brpl	.+2      	; 0x12c8 <__ftoa_engine+0x13c>
    12c6:	00 27       	eor	r16, r16
    12c8:	02 17       	cp	r16, r18
    12ca:	08 f4       	brcc	.+2      	; 0x12ce <__ftoa_engine+0x142>
    12cc:	20 2f       	mov	r18, r16
    12ce:	23 95       	inc	r18
    12d0:	02 2f       	mov	r16, r18
    12d2:	7a 33       	cpi	r23, 0x3A	; 58
    12d4:	28 f0       	brcs	.+10     	; 0x12e0 <__ftoa_engine+0x154>
    12d6:	79 e3       	ldi	r23, 0x39	; 57
    12d8:	7d 93       	st	X+, r23
    12da:	2a 95       	dec	r18
    12dc:	e9 f7       	brne	.-6      	; 0x12d8 <__ftoa_engine+0x14c>
    12de:	10 c0       	rjmp	.+32     	; 0x1300 <__ftoa_engine+0x174>
    12e0:	7d 93       	st	X+, r23
    12e2:	2a 95       	dec	r18
    12e4:	89 f6       	brne	.-94     	; 0x1288 <__ftoa_engine+0xfc>
    12e6:	06 94       	lsr	r0
    12e8:	97 95       	ror	r25
    12ea:	67 95       	ror	r22
    12ec:	37 95       	ror	r19
    12ee:	17 95       	ror	r17
    12f0:	17 94       	ror	r1
    12f2:	e1 18       	sub	r14, r1
    12f4:	f1 0a       	sbc	r15, r17
    12f6:	43 0b       	sbc	r20, r19
    12f8:	56 0b       	sbc	r21, r22
    12fa:	c9 0b       	sbc	r28, r25
    12fc:	d0 09       	sbc	r29, r0
    12fe:	98 f0       	brcs	.+38     	; 0x1326 <__ftoa_engine+0x19a>
    1300:	23 95       	inc	r18
    1302:	7e 91       	ld	r23, -X
    1304:	73 95       	inc	r23
    1306:	7a 33       	cpi	r23, 0x3A	; 58
    1308:	08 f0       	brcs	.+2      	; 0x130c <__ftoa_engine+0x180>
    130a:	70 e3       	ldi	r23, 0x30	; 48
    130c:	7c 93       	st	X, r23
    130e:	20 13       	cpse	r18, r16
    1310:	b8 f7       	brcc	.-18     	; 0x1300 <__ftoa_engine+0x174>
    1312:	7e 91       	ld	r23, -X
    1314:	70 61       	ori	r23, 0x10	; 16
    1316:	7d 93       	st	X+, r23
    1318:	30 f0       	brcs	.+12     	; 0x1326 <__ftoa_engine+0x19a>
    131a:	83 95       	inc	r24
    131c:	71 e3       	ldi	r23, 0x31	; 49
    131e:	7d 93       	st	X+, r23
    1320:	70 e3       	ldi	r23, 0x30	; 48
    1322:	2a 95       	dec	r18
    1324:	e1 f7       	brne	.-8      	; 0x131e <__ftoa_engine+0x192>
    1326:	11 24       	eor	r1, r1
    1328:	ef 90       	pop	r14
    132a:	ff 90       	pop	r15
    132c:	0f 91       	pop	r16
    132e:	1f 91       	pop	r17
    1330:	cf 91       	pop	r28
    1332:	df 91       	pop	r29
    1334:	99 27       	eor	r25, r25
    1336:	87 fd       	sbrc	r24, 7
    1338:	90 95       	com	r25
    133a:	08 95       	ret

0000133c <strnlen_P>:
    133c:	fc 01       	movw	r30, r24
    133e:	05 90       	lpm	r0, Z+
    1340:	61 50       	subi	r22, 0x01	; 1
    1342:	70 40       	sbci	r23, 0x00	; 0
    1344:	01 10       	cpse	r0, r1
    1346:	d8 f7       	brcc	.-10     	; 0x133e <strnlen_P+0x2>
    1348:	80 95       	com	r24
    134a:	90 95       	com	r25
    134c:	8e 0f       	add	r24, r30
    134e:	9f 1f       	adc	r25, r31
    1350:	08 95       	ret

00001352 <strnlen>:
    1352:	fc 01       	movw	r30, r24
    1354:	61 50       	subi	r22, 0x01	; 1
    1356:	70 40       	sbci	r23, 0x00	; 0
    1358:	01 90       	ld	r0, Z+
    135a:	01 10       	cpse	r0, r1
    135c:	d8 f7       	brcc	.-10     	; 0x1354 <strnlen+0x2>
    135e:	80 95       	com	r24
    1360:	90 95       	com	r25
    1362:	8e 0f       	add	r24, r30
    1364:	9f 1f       	adc	r25, r31
    1366:	08 95       	ret

00001368 <fputc>:
    1368:	0f 93       	push	r16
    136a:	1f 93       	push	r17
    136c:	cf 93       	push	r28
    136e:	df 93       	push	r29
    1370:	fb 01       	movw	r30, r22
    1372:	23 81       	ldd	r18, Z+3	; 0x03
    1374:	21 fd       	sbrc	r18, 1
    1376:	03 c0       	rjmp	.+6      	; 0x137e <fputc+0x16>
    1378:	8f ef       	ldi	r24, 0xFF	; 255
    137a:	9f ef       	ldi	r25, 0xFF	; 255
    137c:	2c c0       	rjmp	.+88     	; 0x13d6 <fputc+0x6e>
    137e:	22 ff       	sbrs	r18, 2
    1380:	16 c0       	rjmp	.+44     	; 0x13ae <fputc+0x46>
    1382:	46 81       	ldd	r20, Z+6	; 0x06
    1384:	57 81       	ldd	r21, Z+7	; 0x07
    1386:	24 81       	ldd	r18, Z+4	; 0x04
    1388:	35 81       	ldd	r19, Z+5	; 0x05
    138a:	42 17       	cp	r20, r18
    138c:	53 07       	cpc	r21, r19
    138e:	44 f4       	brge	.+16     	; 0x13a0 <fputc+0x38>
    1390:	a0 81       	ld	r26, Z
    1392:	b1 81       	ldd	r27, Z+1	; 0x01
    1394:	9d 01       	movw	r18, r26
    1396:	2f 5f       	subi	r18, 0xFF	; 255
    1398:	3f 4f       	sbci	r19, 0xFF	; 255
    139a:	31 83       	std	Z+1, r19	; 0x01
    139c:	20 83       	st	Z, r18
    139e:	8c 93       	st	X, r24
    13a0:	26 81       	ldd	r18, Z+6	; 0x06
    13a2:	37 81       	ldd	r19, Z+7	; 0x07
    13a4:	2f 5f       	subi	r18, 0xFF	; 255
    13a6:	3f 4f       	sbci	r19, 0xFF	; 255
    13a8:	37 83       	std	Z+7, r19	; 0x07
    13aa:	26 83       	std	Z+6, r18	; 0x06
    13ac:	14 c0       	rjmp	.+40     	; 0x13d6 <fputc+0x6e>
    13ae:	8b 01       	movw	r16, r22
    13b0:	ec 01       	movw	r28, r24
    13b2:	fb 01       	movw	r30, r22
    13b4:	00 84       	ldd	r0, Z+8	; 0x08
    13b6:	f1 85       	ldd	r31, Z+9	; 0x09
    13b8:	e0 2d       	mov	r30, r0
    13ba:	09 95       	icall
    13bc:	89 2b       	or	r24, r25
    13be:	e1 f6       	brne	.-72     	; 0x1378 <fputc+0x10>
    13c0:	d8 01       	movw	r26, r16
    13c2:	16 96       	adiw	r26, 0x06	; 6
    13c4:	8d 91       	ld	r24, X+
    13c6:	9c 91       	ld	r25, X
    13c8:	17 97       	sbiw	r26, 0x07	; 7
    13ca:	01 96       	adiw	r24, 0x01	; 1
    13cc:	17 96       	adiw	r26, 0x07	; 7
    13ce:	9c 93       	st	X, r25
    13d0:	8e 93       	st	-X, r24
    13d2:	16 97       	sbiw	r26, 0x06	; 6
    13d4:	ce 01       	movw	r24, r28
    13d6:	df 91       	pop	r29
    13d8:	cf 91       	pop	r28
    13da:	1f 91       	pop	r17
    13dc:	0f 91       	pop	r16
    13de:	08 95       	ret

000013e0 <__ultoa_invert>:
    13e0:	fa 01       	movw	r30, r20
    13e2:	aa 27       	eor	r26, r26
    13e4:	28 30       	cpi	r18, 0x08	; 8
    13e6:	51 f1       	breq	.+84     	; 0x143c <__ultoa_invert+0x5c>
    13e8:	20 31       	cpi	r18, 0x10	; 16
    13ea:	81 f1       	breq	.+96     	; 0x144c <__ultoa_invert+0x6c>
    13ec:	e8 94       	clt
    13ee:	6f 93       	push	r22
    13f0:	6e 7f       	andi	r22, 0xFE	; 254
    13f2:	6e 5f       	subi	r22, 0xFE	; 254
    13f4:	7f 4f       	sbci	r23, 0xFF	; 255
    13f6:	8f 4f       	sbci	r24, 0xFF	; 255
    13f8:	9f 4f       	sbci	r25, 0xFF	; 255
    13fa:	af 4f       	sbci	r26, 0xFF	; 255
    13fc:	b1 e0       	ldi	r27, 0x01	; 1
    13fe:	3e d0       	rcall	.+124    	; 0x147c <__ultoa_invert+0x9c>
    1400:	b4 e0       	ldi	r27, 0x04	; 4
    1402:	3c d0       	rcall	.+120    	; 0x147c <__ultoa_invert+0x9c>
    1404:	67 0f       	add	r22, r23
    1406:	78 1f       	adc	r23, r24
    1408:	89 1f       	adc	r24, r25
    140a:	9a 1f       	adc	r25, r26
    140c:	a1 1d       	adc	r26, r1
    140e:	68 0f       	add	r22, r24
    1410:	79 1f       	adc	r23, r25
    1412:	8a 1f       	adc	r24, r26
    1414:	91 1d       	adc	r25, r1
    1416:	a1 1d       	adc	r26, r1
    1418:	6a 0f       	add	r22, r26
    141a:	71 1d       	adc	r23, r1
    141c:	81 1d       	adc	r24, r1
    141e:	91 1d       	adc	r25, r1
    1420:	a1 1d       	adc	r26, r1
    1422:	20 d0       	rcall	.+64     	; 0x1464 <__ultoa_invert+0x84>
    1424:	09 f4       	brne	.+2      	; 0x1428 <__ultoa_invert+0x48>
    1426:	68 94       	set
    1428:	3f 91       	pop	r19
    142a:	2a e0       	ldi	r18, 0x0A	; 10
    142c:	26 9f       	mul	r18, r22
    142e:	11 24       	eor	r1, r1
    1430:	30 19       	sub	r19, r0
    1432:	30 5d       	subi	r19, 0xD0	; 208
    1434:	31 93       	st	Z+, r19
    1436:	de f6       	brtc	.-74     	; 0x13ee <__ultoa_invert+0xe>
    1438:	cf 01       	movw	r24, r30
    143a:	08 95       	ret
    143c:	46 2f       	mov	r20, r22
    143e:	47 70       	andi	r20, 0x07	; 7
    1440:	40 5d       	subi	r20, 0xD0	; 208
    1442:	41 93       	st	Z+, r20
    1444:	b3 e0       	ldi	r27, 0x03	; 3
    1446:	0f d0       	rcall	.+30     	; 0x1466 <__ultoa_invert+0x86>
    1448:	c9 f7       	brne	.-14     	; 0x143c <__ultoa_invert+0x5c>
    144a:	f6 cf       	rjmp	.-20     	; 0x1438 <__ultoa_invert+0x58>
    144c:	46 2f       	mov	r20, r22
    144e:	4f 70       	andi	r20, 0x0F	; 15
    1450:	40 5d       	subi	r20, 0xD0	; 208
    1452:	4a 33       	cpi	r20, 0x3A	; 58
    1454:	18 f0       	brcs	.+6      	; 0x145c <__ultoa_invert+0x7c>
    1456:	49 5d       	subi	r20, 0xD9	; 217
    1458:	31 fd       	sbrc	r19, 1
    145a:	40 52       	subi	r20, 0x20	; 32
    145c:	41 93       	st	Z+, r20
    145e:	02 d0       	rcall	.+4      	; 0x1464 <__ultoa_invert+0x84>
    1460:	a9 f7       	brne	.-22     	; 0x144c <__ultoa_invert+0x6c>
    1462:	ea cf       	rjmp	.-44     	; 0x1438 <__ultoa_invert+0x58>
    1464:	b4 e0       	ldi	r27, 0x04	; 4
    1466:	a6 95       	lsr	r26
    1468:	97 95       	ror	r25
    146a:	87 95       	ror	r24
    146c:	77 95       	ror	r23
    146e:	67 95       	ror	r22
    1470:	ba 95       	dec	r27
    1472:	c9 f7       	brne	.-14     	; 0x1466 <__ultoa_invert+0x86>
    1474:	00 97       	sbiw	r24, 0x00	; 0
    1476:	61 05       	cpc	r22, r1
    1478:	71 05       	cpc	r23, r1
    147a:	08 95       	ret
    147c:	9b 01       	movw	r18, r22
    147e:	ac 01       	movw	r20, r24
    1480:	0a 2e       	mov	r0, r26
    1482:	06 94       	lsr	r0
    1484:	57 95       	ror	r21
    1486:	47 95       	ror	r20
    1488:	37 95       	ror	r19
    148a:	27 95       	ror	r18
    148c:	ba 95       	dec	r27
    148e:	c9 f7       	brne	.-14     	; 0x1482 <__ultoa_invert+0xa2>
    1490:	62 0f       	add	r22, r18
    1492:	73 1f       	adc	r23, r19
    1494:	84 1f       	adc	r24, r20
    1496:	95 1f       	adc	r25, r21
    1498:	a0 1d       	adc	r26, r0
    149a:	08 95       	ret

0000149c <__prologue_saves__>:
    149c:	2f 92       	push	r2
    149e:	3f 92       	push	r3
    14a0:	4f 92       	push	r4
    14a2:	5f 92       	push	r5
    14a4:	6f 92       	push	r6
    14a6:	7f 92       	push	r7
    14a8:	8f 92       	push	r8
    14aa:	9f 92       	push	r9
    14ac:	af 92       	push	r10
    14ae:	bf 92       	push	r11
    14b0:	cf 92       	push	r12
    14b2:	df 92       	push	r13
    14b4:	ef 92       	push	r14
    14b6:	ff 92       	push	r15
    14b8:	0f 93       	push	r16
    14ba:	1f 93       	push	r17
    14bc:	cf 93       	push	r28
    14be:	df 93       	push	r29
    14c0:	cd b7       	in	r28, 0x3d	; 61
    14c2:	de b7       	in	r29, 0x3e	; 62
    14c4:	ca 1b       	sub	r28, r26
    14c6:	db 0b       	sbc	r29, r27
    14c8:	0f b6       	in	r0, 0x3f	; 63
    14ca:	f8 94       	cli
    14cc:	de bf       	out	0x3e, r29	; 62
    14ce:	0f be       	out	0x3f, r0	; 63
    14d0:	cd bf       	out	0x3d, r28	; 61
    14d2:	09 94       	ijmp

000014d4 <__epilogue_restores__>:
    14d4:	2a 88       	ldd	r2, Y+18	; 0x12
    14d6:	39 88       	ldd	r3, Y+17	; 0x11
    14d8:	48 88       	ldd	r4, Y+16	; 0x10
    14da:	5f 84       	ldd	r5, Y+15	; 0x0f
    14dc:	6e 84       	ldd	r6, Y+14	; 0x0e
    14de:	7d 84       	ldd	r7, Y+13	; 0x0d
    14e0:	8c 84       	ldd	r8, Y+12	; 0x0c
    14e2:	9b 84       	ldd	r9, Y+11	; 0x0b
    14e4:	aa 84       	ldd	r10, Y+10	; 0x0a
    14e6:	b9 84       	ldd	r11, Y+9	; 0x09
    14e8:	c8 84       	ldd	r12, Y+8	; 0x08
    14ea:	df 80       	ldd	r13, Y+7	; 0x07
    14ec:	ee 80       	ldd	r14, Y+6	; 0x06
    14ee:	fd 80       	ldd	r15, Y+5	; 0x05
    14f0:	0c 81       	ldd	r16, Y+4	; 0x04
    14f2:	1b 81       	ldd	r17, Y+3	; 0x03
    14f4:	aa 81       	ldd	r26, Y+2	; 0x02
    14f6:	b9 81       	ldd	r27, Y+1	; 0x01
    14f8:	ce 0f       	add	r28, r30
    14fa:	d1 1d       	adc	r29, r1
    14fc:	0f b6       	in	r0, 0x3f	; 63
    14fe:	f8 94       	cli
    1500:	de bf       	out	0x3e, r29	; 62
    1502:	0f be       	out	0x3f, r0	; 63
    1504:	cd bf       	out	0x3d, r28	; 61
    1506:	ed 01       	movw	r28, r26
    1508:	08 95       	ret

0000150a <_exit>:
    150a:	f8 94       	cli

0000150c <__stop_program>:
    150c:	ff cf       	rjmp	.-2      	; 0x150c <__stop_program>
