
EEPROMetADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001522  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003c  00800060  00001522  000015b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  0080009c  0080009c  000015f2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001650  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  0000168c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001614  00000000  00000000  00001734  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007eb  00000000  00000000  00002d48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007bf  00000000  00000000  00003533  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c8  00000000  00000000  00003cf4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000048c  00000000  00000000  00003ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008af  00000000  00000000  00004348  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00004bf7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__vector_14>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__vector_19>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__fp_splitA+0x24>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <main+0x4c>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <LCD_wr_instruction+0x2a>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <EEPROM_read+0x10>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d4 e0       	ldi	r29, 0x04	; 4
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e2 e2       	ldi	r30, 0x22	; 34
     162:	f5 e1       	ldi	r31, 0x15	; 21
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	ac 39       	cpi	r26, 0x9C	; 156
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	ac e9       	ldi	r26, 0x9C	; 156
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a1 3b       	cpi	r26, 0xB1	; 177
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 27 03 	call	0x64e	; 0x64e <main>
     184:	0c 94 8f 0a 	jmp	0x151e	; 0x151e <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <EEPROM_write>:
volatile uint16_t d = 0, l;
uint8_t uno[16];
volatile uint8_t full = 0;

void EEPROM_write(uint8_t address, uint8_t data) {
	while(isSet(EECR, EEWE));
     18c:	e1 99       	sbic	0x1c, 1	; 28
     18e:	fe cf       	rjmp	.-4      	; 0x18c <EEPROM_write>
	EEAR = address;
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	9f bb       	out	0x1f, r25	; 31
     194:	8e bb       	out	0x1e, r24	; 30
	EEDR = data;
     196:	6d bb       	out	0x1d, r22	; 29
	cli();
     198:	f8 94       	cli
	EECR = setBit(EECR, EEMWE);
     19a:	8c b3       	in	r24, 0x1c	; 28
     19c:	84 60       	ori	r24, 0x04	; 4
     19e:	8c bb       	out	0x1c, r24	; 28
	EECR = setBit(EECR, EEWE);
     1a0:	8c b3       	in	r24, 0x1c	; 28
     1a2:	82 60       	ori	r24, 0x02	; 2
     1a4:	8c bb       	out	0x1c, r24	; 28
	sei();
     1a6:	78 94       	sei
     1a8:	08 95       	ret

000001aa <EEPROM_read>:
}
uint8_t EEPROM_read(uint8_t address) {
	while(isSet(EECR, EEWE));
     1aa:	e1 99       	sbic	0x1c, 1	; 28
     1ac:	fe cf       	rjmp	.-4      	; 0x1aa <EEPROM_read>
	EEAR = address;
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	9f bb       	out	0x1f, r25	; 31
     1b2:	8e bb       	out	0x1e, r24	; 30
	EECR = setBit(EECR, EERE);
     1b4:	8c b3       	in	r24, 0x1c	; 28
     1b6:	81 60       	ori	r24, 0x01	; 1
     1b8:	8c bb       	out	0x1c, r24	; 28
	return EEDR;
     1ba:	8d b3       	in	r24, 0x1d	; 29
}
     1bc:	08 95       	ret

000001be <saca_uno>:
	saca_cero(&PORTLCD,RS);
	saca_cero(&PORTLCD,RW);
	DDRLCD|=(15<<0)|(1<<RS)|(1<<RW)|(1<<E);
}
void saca_uno(volatile uint8_t *LUGAR, uint8_t BIT){
	*LUGAR=*LUGAR|(1<<BIT);
     1be:	fc 01       	movw	r30, r24
     1c0:	40 81       	ld	r20, Z
     1c2:	21 e0       	ldi	r18, 0x01	; 1
     1c4:	30 e0       	ldi	r19, 0x00	; 0
     1c6:	02 c0       	rjmp	.+4      	; 0x1cc <saca_uno+0xe>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	6a 95       	dec	r22
     1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <saca_uno+0xa>
     1d0:	24 2b       	or	r18, r20
     1d2:	20 83       	st	Z, r18
     1d4:	08 95       	ret

000001d6 <saca_cero>:
}
void saca_cero(volatile uint8_t *LUGAR, uint8_t BIT){
     1d6:	fc 01       	movw	r30, r24
	*LUGAR=*LUGAR&~(1<<BIT);
     1d8:	90 81       	ld	r25, Z
     1da:	21 e0       	ldi	r18, 0x01	; 1
     1dc:	30 e0       	ldi	r19, 0x00	; 0
     1de:	02 c0       	rjmp	.+4      	; 0x1e4 <saca_cero+0xe>
     1e0:	22 0f       	add	r18, r18
     1e2:	33 1f       	adc	r19, r19
     1e4:	6a 95       	dec	r22
     1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <saca_cero+0xa>
     1e8:	20 95       	com	r18
     1ea:	29 23       	and	r18, r25
     1ec:	20 83       	st	Z, r18
     1ee:	08 95       	ret

000001f0 <LCD_wr_inst_ini>:
	saca_cero(&PORTLCD,RS);
	LCD_wait_flag();
	
}
void LCD_wr_inst_ini(uint8_t instruccion){
	PORTLCD=instruccion; //Saco el dato y le digo que escribir? un dato
     1f0:	85 bb       	out	0x15, r24	; 21
	saca_cero(&PORTLCD,RS);
     1f2:	64 e0       	ldi	r22, 0x04	; 4
     1f4:	70 e0       	ldi	r23, 0x00	; 0
     1f6:	85 e3       	ldi	r24, 0x35	; 53
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_cero(&PORTLCD,RW);
     1fe:	65 e0       	ldi	r22, 0x05	; 5
     200:	70 e0       	ldi	r23, 0x00	; 0
     202:	85 e3       	ldi	r24, 0x35	; 53
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,E);
     20a:	66 e0       	ldi	r22, 0x06	; 6
     20c:	70 e0       	ldi	r23, 0x00	; 0
     20e:	85 e3       	ldi	r24, 0x35	; 53
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     216:	83 ec       	ldi	r24, 0xC3	; 195
     218:	99 e0       	ldi	r25, 0x09	; 9
     21a:	01 97       	sbiw	r24, 0x01	; 1
     21c:	f1 f7       	brne	.-4      	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
     21e:	00 c0       	rjmp	.+0      	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
     220:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     222:	66 e0       	ldi	r22, 0x06	; 6
     224:	70 e0       	ldi	r23, 0x00	; 0
     226:	85 e3       	ldi	r24, 0x35	; 53
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
     22e:	08 95       	ret

00000230 <LCD_wait_flag>:
	saca_cero(&PORTLCD,E);
	LCD_wait_flag();
}
void LCD_wait_flag(void){
	//_delay_ms(100);
	DDRLCD&=0b11110000; //Para poner el pin BF como entrada para leer la bandera lo dem?s salida
     230:	84 b3       	in	r24, 0x14	; 20
     232:	80 7f       	andi	r24, 0xF0	; 240
     234:	84 bb       	out	0x14, r24	; 20
	saca_cero(&PORTLCD,RS);// Instrucci?n
     236:	64 e0       	ldi	r22, 0x04	; 4
     238:	70 e0       	ldi	r23, 0x00	; 0
     23a:	85 e3       	ldi	r24, 0x35	; 53
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,RW); // Leer
     242:	65 e0       	ldi	r22, 0x05	; 5
     244:	70 e0       	ldi	r23, 0x00	; 0
     246:	85 e3       	ldi	r24, 0x35	; 53
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
	while(1){
		saca_uno(&PORTLCD,E); //pregunto por el primer nibble
     24e:	66 e0       	ldi	r22, 0x06	; 6
     250:	70 e0       	ldi	r23, 0x00	; 0
     252:	85 e3       	ldi	r24, 0x35	; 53
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     25a:	83 ec       	ldi	r24, 0xC3	; 195
     25c:	99 e0       	ldi	r25, 0x09	; 9
     25e:	01 97       	sbiw	r24, 0x01	; 1
     260:	f1 f7       	brne	.-4      	; 0x25e <LCD_wait_flag+0x2e>
     262:	00 c0       	rjmp	.+0      	; 0x264 <LCD_wait_flag+0x34>
     264:	00 00       	nop
		_delay_ms(10);
		saca_cero(&PORTLCD,E);
     266:	66 e0       	ldi	r22, 0x06	; 6
     268:	70 e0       	ldi	r23, 0x00	; 0
     26a:	85 e3       	ldi	r24, 0x35	; 53
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
		if(isSet(PINLCD,BF)) {break;} //uno_en_bit para protues, 0 para la vida real
     272:	9b 99       	sbic	0x13, 3	; 19
     274:	17 c0       	rjmp	.+46     	; 0x2a4 <LCD_wait_flag+0x74>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     276:	93 e0       	ldi	r25, 0x03	; 3
     278:	9a 95       	dec	r25
     27a:	f1 f7       	brne	.-4      	; 0x278 <LCD_wait_flag+0x48>
     27c:	00 00       	nop
		_delay_us(10);
		saca_uno(&PORTLCD,E); //pregunto por el segundo nibble
     27e:	66 e0       	ldi	r22, 0x06	; 6
     280:	70 e0       	ldi	r23, 0x00	; 0
     282:	85 e3       	ldi	r24, 0x35	; 53
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     28a:	83 ec       	ldi	r24, 0xC3	; 195
     28c:	99 e0       	ldi	r25, 0x09	; 9
     28e:	01 97       	sbiw	r24, 0x01	; 1
     290:	f1 f7       	brne	.-4      	; 0x28e <LCD_wait_flag+0x5e>
     292:	00 c0       	rjmp	.+0      	; 0x294 <LCD_wait_flag+0x64>
     294:	00 00       	nop
		_delay_ms(10);
		saca_cero(&PORTLCD,E);
     296:	66 e0       	ldi	r22, 0x06	; 6
     298:	70 e0       	ldi	r23, 0x00	; 0
     29a:	85 e3       	ldi	r24, 0x35	; 53
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	}
     2a2:	d5 cf       	rjmp	.-86     	; 0x24e <LCD_wait_flag+0x1e>
	saca_uno(&PORTLCD,E); //pregunto por el segundo nibble
     2a4:	66 e0       	ldi	r22, 0x06	; 6
     2a6:	70 e0       	ldi	r23, 0x00	; 0
     2a8:	85 e3       	ldi	r24, 0x35	; 53
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     2b0:	83 ec       	ldi	r24, 0xC3	; 195
     2b2:	99 e0       	ldi	r25, 0x09	; 9
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <LCD_wait_flag+0x84>
     2b8:	00 c0       	rjmp	.+0      	; 0x2ba <LCD_wait_flag+0x8a>
     2ba:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     2bc:	66 e0       	ldi	r22, 0x06	; 6
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	85 e3       	ldi	r24, 0x35	; 53
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	//entonces cuando tenga cero puede continuar con esto...
	saca_cero(&PORTLCD,RS);
     2c8:	64 e0       	ldi	r22, 0x04	; 4
     2ca:	70 e0       	ldi	r23, 0x00	; 0
     2cc:	85 e3       	ldi	r24, 0x35	; 53
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_cero(&PORTLCD,RW);
     2d4:	65 e0       	ldi	r22, 0x05	; 5
     2d6:	70 e0       	ldi	r23, 0x00	; 0
     2d8:	85 e3       	ldi	r24, 0x35	; 53
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	DDRLCD|=(15<<0)|(1<<RS)|(1<<RW)|(1<<E);
     2e0:	84 b3       	in	r24, 0x14	; 20
     2e2:	8f 67       	ori	r24, 0x7F	; 127
     2e4:	84 bb       	out	0x14, r24	; 20
     2e6:	08 95       	ret

000002e8 <LCD_wr_char>:
	LCD_wr_instruction(LCD_Cmd_Off);		//apaga el display
	LCD_wr_instruction(LCD_Cmd_Clear);		//limpia el display
	LCD_wr_instruction(LCD_Cmd_ModeDnS);	//Entry mode set ID S
	LCD_wr_instruction(LCD_Cmd_OnsCsB);		//Enciende el display
}
void LCD_wr_char(uint8_t data){
     2e8:	cf 93       	push	r28
     2ea:	c8 2f       	mov	r28, r24
	//saco la parte m?s significativa del dato
	PORTLCD=data>>4; //Saco el dato y le digo que escribir? un dato
     2ec:	82 95       	swap	r24
     2ee:	8f 70       	andi	r24, 0x0F	; 15
     2f0:	85 bb       	out	0x15, r24	; 21
	saca_uno(&PORTLCD,RS);
     2f2:	64 e0       	ldi	r22, 0x04	; 4
     2f4:	70 e0       	ldi	r23, 0x00	; 0
     2f6:	85 e3       	ldi	r24, 0x35	; 53
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
	saca_cero(&PORTLCD,RW);
     2fe:	65 e0       	ldi	r22, 0x05	; 5
     300:	70 e0       	ldi	r23, 0x00	; 0
     302:	85 e3       	ldi	r24, 0x35	; 53
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,E);
     30a:	66 e0       	ldi	r22, 0x06	; 6
     30c:	70 e0       	ldi	r23, 0x00	; 0
     30e:	85 e3       	ldi	r24, 0x35	; 53
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     316:	83 ec       	ldi	r24, 0xC3	; 195
     318:	99 e0       	ldi	r25, 0x09	; 9
     31a:	01 97       	sbiw	r24, 0x01	; 1
     31c:	f1 f7       	brne	.-4      	; 0x31a <LCD_wr_char+0x32>
     31e:	00 c0       	rjmp	.+0      	; 0x320 <LCD_wr_char+0x38>
     320:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     322:	66 e0       	ldi	r22, 0x06	; 6
     324:	70 e0       	ldi	r23, 0x00	; 0
     326:	85 e3       	ldi	r24, 0x35	; 53
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	//saco la parte menos significativa del dato
	PORTLCD=data&0b00001111; //Saco el dato y le digo que escribir? un dato
     32e:	cf 70       	andi	r28, 0x0F	; 15
     330:	c5 bb       	out	0x15, r28	; 21
	saca_uno(&PORTLCD,RS);
     332:	64 e0       	ldi	r22, 0x04	; 4
     334:	70 e0       	ldi	r23, 0x00	; 0
     336:	85 e3       	ldi	r24, 0x35	; 53
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
	saca_cero(&PORTLCD,RW);
     33e:	65 e0       	ldi	r22, 0x05	; 5
     340:	70 e0       	ldi	r23, 0x00	; 0
     342:	85 e3       	ldi	r24, 0x35	; 53
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,E);
     34a:	66 e0       	ldi	r22, 0x06	; 6
     34c:	70 e0       	ldi	r23, 0x00	; 0
     34e:	85 e3       	ldi	r24, 0x35	; 53
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     356:	83 ec       	ldi	r24, 0xC3	; 195
     358:	99 e0       	ldi	r25, 0x09	; 9
     35a:	01 97       	sbiw	r24, 0x01	; 1
     35c:	f1 f7       	brne	.-4      	; 0x35a <LCD_wr_char+0x72>
     35e:	00 c0       	rjmp	.+0      	; 0x360 <LCD_wr_char+0x78>
     360:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     362:	66 e0       	ldi	r22, 0x06	; 6
     364:	70 e0       	ldi	r23, 0x00	; 0
     366:	85 e3       	ldi	r24, 0x35	; 53
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_cero(&PORTLCD,RS);
     36e:	64 e0       	ldi	r22, 0x04	; 4
     370:	70 e0       	ldi	r23, 0x00	; 0
     372:	85 e3       	ldi	r24, 0x35	; 53
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	LCD_wait_flag();
     37a:	0e 94 18 01 	call	0x230	; 0x230 <LCD_wait_flag>
	
}
     37e:	cf 91       	pop	r28
     380:	08 95       	ret

00000382 <LCD_wr_string>:
	LCD_wr_instruction(LCD_Cmd_Home);
	LCD_wr_string(a);
	LCD_wr_instruction(0b11000000);
	LCD_wr_string(b);
}
void LCD_wr_string(volatile uint8_t *s){
     382:	cf 93       	push	r28
     384:	df 93       	push	r29
     386:	fc 01       	movw	r30, r24
	uint8_t c;
	while((c=*s++)){
     388:	04 c0       	rjmp	.+8      	; 0x392 <LCD_wr_string+0x10>
		LCD_wr_char(c);
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <LCD_wr_char>
	LCD_wr_instruction(0b11000000);
	LCD_wr_string(b);
}
void LCD_wr_string(volatile uint8_t *s){
	uint8_t c;
	while((c=*s++)){
     390:	fe 01       	movw	r30, r28
     392:	ef 01       	movw	r28, r30
     394:	21 96       	adiw	r28, 0x01	; 1
     396:	80 81       	ld	r24, Z
     398:	81 11       	cpse	r24, r1
     39a:	f7 cf       	rjmp	.-18     	; 0x38a <LCD_wr_string+0x8>
		LCD_wr_char(c);
	}
}
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	08 95       	ret

000003a2 <LCD_wr_instruction>:
	saca_cero(&PORTLCD,RW);
	saca_uno(&PORTLCD,E);
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
}
void LCD_wr_instruction(uint8_t instruccion){
     3a2:	cf 93       	push	r28
     3a4:	c8 2f       	mov	r28, r24
	//saco la parte m?s significativa de la instrucci?n
	PORTLCD=instruccion>>4; //Saco el dato y le digo que escribir? un dato
     3a6:	82 95       	swap	r24
     3a8:	8f 70       	andi	r24, 0x0F	; 15
     3aa:	85 bb       	out	0x15, r24	; 21
	saca_cero(&PORTLCD,RS);
     3ac:	64 e0       	ldi	r22, 0x04	; 4
     3ae:	70 e0       	ldi	r23, 0x00	; 0
     3b0:	85 e3       	ldi	r24, 0x35	; 53
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_cero(&PORTLCD,RW);
     3b8:	65 e0       	ldi	r22, 0x05	; 5
     3ba:	70 e0       	ldi	r23, 0x00	; 0
     3bc:	85 e3       	ldi	r24, 0x35	; 53
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,E);
     3c4:	66 e0       	ldi	r22, 0x06	; 6
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	85 e3       	ldi	r24, 0x35	; 53
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     3d0:	83 ec       	ldi	r24, 0xC3	; 195
     3d2:	99 e0       	ldi	r25, 0x09	; 9
     3d4:	01 97       	sbiw	r24, 0x01	; 1
     3d6:	f1 f7       	brne	.-4      	; 0x3d4 <LCD_wr_instruction+0x32>
     3d8:	00 c0       	rjmp	.+0      	; 0x3da <LCD_wr_instruction+0x38>
     3da:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     3dc:	66 e0       	ldi	r22, 0x06	; 6
     3de:	70 e0       	ldi	r23, 0x00	; 0
     3e0:	85 e3       	ldi	r24, 0x35	; 53
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	//saco la parte menos significativa de la instrucci?n
	PORTLCD=instruccion&0b00001111; //Saco el dato y le digo que escribir? un dato
     3e8:	cf 70       	andi	r28, 0x0F	; 15
     3ea:	c5 bb       	out	0x15, r28	; 21
	saca_cero(&PORTLCD,RS);
     3ec:	64 e0       	ldi	r22, 0x04	; 4
     3ee:	70 e0       	ldi	r23, 0x00	; 0
     3f0:	85 e3       	ldi	r24, 0x35	; 53
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_cero(&PORTLCD,RW);
     3f8:	65 e0       	ldi	r22, 0x05	; 5
     3fa:	70 e0       	ldi	r23, 0x00	; 0
     3fc:	85 e3       	ldi	r24, 0x35	; 53
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	saca_uno(&PORTLCD,E);
     404:	66 e0       	ldi	r22, 0x06	; 6
     406:	70 e0       	ldi	r23, 0x00	; 0
     408:	85 e3       	ldi	r24, 0x35	; 53
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	0e 94 df 00 	call	0x1be	; 0x1be <saca_uno>
     410:	83 ec       	ldi	r24, 0xC3	; 195
     412:	99 e0       	ldi	r25, 0x09	; 9
     414:	01 97       	sbiw	r24, 0x01	; 1
     416:	f1 f7       	brne	.-4      	; 0x414 <__DATA_REGION_LENGTH__+0x14>
     418:	00 c0       	rjmp	.+0      	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
     41a:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
     41c:	66 e0       	ldi	r22, 0x06	; 6
     41e:	70 e0       	ldi	r23, 0x00	; 0
     420:	85 e3       	ldi	r24, 0x35	; 53
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <saca_cero>
	LCD_wait_flag();
     428:	0e 94 18 01 	call	0x230	; 0x230 <LCD_wait_flag>
}
     42c:	cf 91       	pop	r28
     42e:	08 95       	ret

00000430 <LCD_wr_lines>:
//#define LCD_Cmd_Function 0b001 DL  N  F  00
#define LCD_Cmd_Func2Lin   0b00101000 //para dos lineas
#define LCD_Cmd_Func1LinCh 0b00100000 //para una linea con letra chica
#define LCD_Cmd_Func1LinG  0b00100100 //para una linea con letra grande
//#define LCD_Cmd_DDRAM    0b1xxxxxxx
void LCD_wr_lines(uint8_t *a, uint8_t *b){
     430:	0f 93       	push	r16
     432:	1f 93       	push	r17
     434:	cf 93       	push	r28
     436:	df 93       	push	r29
     438:	8c 01       	movw	r16, r24
     43a:	eb 01       	movw	r28, r22
	LCD_wr_instruction(LCD_Cmd_Clear);
     43c:	81 e0       	ldi	r24, 0x01	; 1
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_Home);
     444:	82 e0       	ldi	r24, 0x02	; 2
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_string(a);
     44c:	c8 01       	movw	r24, r16
     44e:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_wr_string>
	LCD_wr_instruction(0b11000000);
     452:	80 ec       	ldi	r24, 0xC0	; 192
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_string(b);
     45a:	ce 01       	movw	r24, r28
     45c:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_wr_string>
}
     460:	df 91       	pop	r29
     462:	cf 91       	pop	r28
     464:	1f 91       	pop	r17
     466:	0f 91       	pop	r16
     468:	08 95       	ret

0000046a <LCD_init>:
	while((c=*s++)){
		LCD_wr_char(c);
	}
}
void LCD_init(void){
	DDRLCD=(15<<0)|(1<<RS)|(1<<RW)|(1<<E); //DDRLCD=DDRLCD|(0B01111111)
     46a:	8f e7       	ldi	r24, 0x7F	; 127
     46c:	84 bb       	out	0x14, r24	; 20
     46e:	85 ea       	ldi	r24, 0xA5	; 165
     470:	9e e0       	ldi	r25, 0x0E	; 14
     472:	01 97       	sbiw	r24, 0x01	; 1
     474:	f1 f7       	brne	.-4      	; 0x472 <LCD_init+0x8>
     476:	00 c0       	rjmp	.+0      	; 0x478 <LCD_init+0xe>
     478:	00 00       	nop
	_delay_ms(15);
	LCD_wr_inst_ini(0b00000011);
     47a:	83 e0       	ldi	r24, 0x03	; 3
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_wr_inst_ini>
     482:	81 ee       	ldi	r24, 0xE1	; 225
     484:	94 e0       	ldi	r25, 0x04	; 4
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	f1 f7       	brne	.-4      	; 0x486 <LCD_init+0x1c>
     48a:	00 c0       	rjmp	.+0      	; 0x48c <LCD_init+0x22>
     48c:	00 00       	nop
	_delay_ms(5);
	LCD_wr_inst_ini(0b00000011);
     48e:	83 e0       	ldi	r24, 0x03	; 3
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_wr_inst_ini>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     496:	91 e2       	ldi	r25, 0x21	; 33
     498:	9a 95       	dec	r25
     49a:	f1 f7       	brne	.-4      	; 0x498 <LCD_init+0x2e>
     49c:	00 00       	nop
	_delay_us(100);
	LCD_wr_inst_ini(0b00000011);
     49e:	83 e0       	ldi	r24, 0x03	; 3
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_wr_inst_ini>
     4a6:	81 e2       	ldi	r24, 0x21	; 33
     4a8:	8a 95       	dec	r24
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <LCD_init+0x3e>
     4ac:	00 00       	nop
	_delay_us(100);
	LCD_wr_inst_ini(0b00000010);
     4ae:	82 e0       	ldi	r24, 0x02	; 2
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_wr_inst_ini>
     4b6:	91 e2       	ldi	r25, 0x21	; 33
     4b8:	9a 95       	dec	r25
     4ba:	f1 f7       	brne	.-4      	; 0x4b8 <LCD_init+0x4e>
     4bc:	00 00       	nop
	_delay_us(100);
	LCD_wr_instruction(LCD_Cmd_Func2Lin);	//4 Bits, n?mero de l?neas y tipo de letra
     4be:	88 e2       	ldi	r24, 0x28	; 40
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_Off);		//apaga el display
     4c6:	88 e0       	ldi	r24, 0x08	; 8
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_Clear);		//limpia el display
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_ModeDnS);	//Entry mode set ID S
     4d6:	86 e0       	ldi	r24, 0x06	; 6
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_OnsCsB);		//Enciende el display
     4de:	8c e0       	ldi	r24, 0x0C	; 12
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
     4e6:	08 95       	ret

000004e8 <hastaTecla>:
	{'4', '5', '6', 'B'},
	{'1', '2', '3', 'C'},
	{'E', '0', 'F', 'D'}
};
uint8_t hastaTecla(){
	for(uint8_t i = 0;; i++, i %= 4){
     4e8:	30 e0       	ldi	r19, 0x00	; 0
		PORTX = ~(1 << i);
     4ea:	43 2f       	mov	r20, r19
     4ec:	50 e0       	ldi	r21, 0x00	; 0
     4ee:	81 e0       	ldi	r24, 0x01	; 1
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	03 2e       	mov	r0, r19
     4f4:	02 c0       	rjmp	.+4      	; 0x4fa <hastaTecla+0x12>
     4f6:	88 0f       	add	r24, r24
     4f8:	99 1f       	adc	r25, r25
     4fa:	0a 94       	dec	r0
     4fc:	e2 f7       	brpl	.-8      	; 0x4f6 <hastaTecla+0xe>
     4fe:	80 95       	com	r24
     500:	82 bb       	out	0x12, r24	; 18
		asm("nop");
     502:	00 00       	nop
		asm("nop");
     504:	00 00       	nop
		for(uint8_t j = 4; j < 8; j++){
     506:	24 e0       	ldi	r18, 0x04	; 4
     508:	30 c0       	rjmp	.+96     	; 0x56a <hastaTecla+0x82>
			if(isClear(PINX, j)){
     50a:	80 b3       	in	r24, 0x10	; 16
     50c:	62 2f       	mov	r22, r18
     50e:	70 e0       	ldi	r23, 0x00	; 0
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	02 2e       	mov	r0, r18
     514:	02 c0       	rjmp	.+4      	; 0x51a <hastaTecla+0x32>
     516:	95 95       	asr	r25
     518:	87 95       	ror	r24
     51a:	0a 94       	dec	r0
     51c:	e2 f7       	brpl	.-8      	; 0x516 <hastaTecla+0x2e>
     51e:	80 fd       	sbrc	r24, 0
     520:	23 c0       	rjmp	.+70     	; 0x568 <hastaTecla+0x80>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     522:	83 ed       	ldi	r24, 0xD3	; 211
     524:	90 e3       	ldi	r25, 0x30	; 48
     526:	01 97       	sbiw	r24, 0x01	; 1
     528:	f1 f7       	brne	.-4      	; 0x526 <hastaTecla+0x3e>
     52a:	00 c0       	rjmp	.+0      	; 0x52c <hastaTecla+0x44>
     52c:	00 00       	nop
				_delay_ms(50);
				while(isClear(PINX, j));
     52e:	80 b3       	in	r24, 0x10	; 16
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	06 2e       	mov	r0, r22
     534:	02 c0       	rjmp	.+4      	; 0x53a <hastaTecla+0x52>
     536:	95 95       	asr	r25
     538:	87 95       	ror	r24
     53a:	0a 94       	dec	r0
     53c:	e2 f7       	brpl	.-8      	; 0x536 <hastaTecla+0x4e>
     53e:	80 ff       	sbrs	r24, 0
     540:	f6 cf       	rjmp	.-20     	; 0x52e <hastaTecla+0x46>
     542:	83 ed       	ldi	r24, 0xD3	; 211
     544:	90 e3       	ldi	r25, 0x30	; 48
     546:	01 97       	sbiw	r24, 0x01	; 1
     548:	f1 f7       	brne	.-4      	; 0x546 <hastaTecla+0x5e>
     54a:	00 c0       	rjmp	.+0      	; 0x54c <hastaTecla+0x64>
     54c:	00 00       	nop
				_delay_ms(50);
				return keyboard[i][j-4];
     54e:	64 50       	subi	r22, 0x04	; 4
     550:	71 09       	sbc	r23, r1
     552:	fa 01       	movw	r30, r20
     554:	ee 0f       	add	r30, r30
     556:	ff 1f       	adc	r31, r31
     558:	ee 0f       	add	r30, r30
     55a:	ff 1f       	adc	r31, r31
     55c:	e0 5a       	subi	r30, 0xA0	; 160
     55e:	ff 4f       	sbci	r31, 0xFF	; 255
     560:	e6 0f       	add	r30, r22
     562:	f7 1f       	adc	r31, r23
     564:	80 81       	ld	r24, Z
     566:	08 95       	ret
uint8_t hastaTecla(){
	for(uint8_t i = 0;; i++, i %= 4){
		PORTX = ~(1 << i);
		asm("nop");
		asm("nop");
		for(uint8_t j = 4; j < 8; j++){
     568:	2f 5f       	subi	r18, 0xFF	; 255
     56a:	28 30       	cpi	r18, 0x08	; 8
     56c:	70 f2       	brcs	.-100    	; 0x50a <hastaTecla+0x22>
	{'4', '5', '6', 'B'},
	{'1', '2', '3', 'C'},
	{'E', '0', 'F', 'D'}
};
uint8_t hastaTecla(){
	for(uint8_t i = 0;; i++, i %= 4){
     56e:	3f 5f       	subi	r19, 0xFF	; 255
     570:	33 70       	andi	r19, 0x03	; 3
				while(isClear(PINX, j));
				_delay_ms(50);
				return keyboard[i][j-4];
			}
		}
	}
     572:	bb cf       	rjmp	.-138    	; 0x4ea <hastaTecla+0x2>

00000574 <KB_init>:
}
void KB_init(){
	DDRX = 0x0F;
     574:	8f e0       	ldi	r24, 0x0F	; 15
     576:	81 bb       	out	0x11, r24	; 17
	PORTX = 0xFF;
     578:	8f ef       	ldi	r24, 0xFF	; 255
     57a:	82 bb       	out	0x12, r24	; 18
     57c:	08 95       	ret

0000057e <ADC_init>:

#define PORTADC PORTA
#define PINADC PINA
#define DDRADC DDRA
void ADC_init(){
	ADMUX = 0b01100000; 
     57e:	80 e6       	ldi	r24, 0x60	; 96
     580:	87 b9       	out	0x07, r24	; 7
			5:	
				0 = 10 bits adjusted to the right (using full precision of the ADC). Use ADC register with a 16-bit variable.
				1 = 8 bits
			2, 1, 0: Specify the PIN to be read in binary
		*/
	SFIOR = 0b01100000;
     582:	80 bf       	out	0x30, r24	; 48
			7 - 5 bits: 
				000 - Free running mode (we ask to do the conversion)
				011 - Compare match timer 0
			When using something different to free running mode: Bit 5 of ADCSRA has to be 1.
		*/
	ADCSRA =  0b10111011;
     584:	8b eb       	ldi	r24, 0xBB	; 187
     586:	86 b9       	out	0x06, r24	; 6
				111		128
				Fmicro/Divisor has to be between the valid range.
					1MHz/8 = 125kHz
		*/
			
	DDRADC = 0b00000000;
     588:	1a ba       	out	0x1a, r1	; 26
	PORTADC = 0b00000000; //ADC doesnt need pull up
     58a:	1b ba       	out	0x1b, r1	; 27
     58c:	08 95       	ret

0000058e <__vector_14>:
}
ISR(ADC_vect){ //Entra aqui solito despues de la conversion
     58e:	1f 92       	push	r1
     590:	0f 92       	push	r0
     592:	0f b6       	in	r0, 0x3f	; 63
     594:	0f 92       	push	r0
     596:	11 24       	eor	r1, r1
     598:	2f 93       	push	r18
     59a:	3f 93       	push	r19
     59c:	4f 93       	push	r20
     59e:	5f 93       	push	r21
     5a0:	6f 93       	push	r22
     5a2:	7f 93       	push	r23
     5a4:	8f 93       	push	r24
     5a6:	9f 93       	push	r25
     5a8:	af 93       	push	r26
     5aa:	bf 93       	push	r27
     5ac:	ef 93       	push	r30
     5ae:	ff 93       	push	r31
	uint8_t r = ADCH; //8 bits
     5b0:	65 b1       	in	r22, 0x05	; 5
	//uint16_t r = ADC; //10 bits
	//dtostrf(a, 1, 3, v); //Float to string

	
	//Codigo
	PORTB = d;
     5b2:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <d>
     5b6:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <d+0x1>
     5ba:	88 bb       	out	0x18, r24	; 24
	if(d > 511 && !full){
     5bc:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <d>
     5c0:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <d+0x1>
     5c4:	81 15       	cp	r24, r1
     5c6:	92 40       	sbci	r25, 0x02	; 2
     5c8:	78 f0       	brcs	.+30     	; 0x5e8 <__vector_14+0x5a>
     5ca:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
     5ce:	81 11       	cpse	r24, r1
     5d0:	0b c0       	rjmp	.+22     	; 0x5e8 <__vector_14+0x5a>
		LCD_wr_lines("EEPROM llena", "");
     5d2:	68 e8       	ldi	r22, 0x88	; 136
     5d4:	70 e0       	ldi	r23, 0x00	; 0
     5d6:	80 e7       	ldi	r24, 0x70	; 112
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	0e 94 18 02 	call	0x430	; 0x430 <LCD_wr_lines>
		full = 1;
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end>
		cli();
     5e4:	f8 94       	cli
     5e6:	0d c0       	rjmp	.+26     	; 0x602 <__vector_14+0x74>
	}
	else EEPROM_write(d++, r);
     5e8:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <d>
     5ec:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <d+0x1>
     5f0:	9c 01       	movw	r18, r24
     5f2:	2f 5f       	subi	r18, 0xFF	; 255
     5f4:	3f 4f       	sbci	r19, 0xFF	; 255
     5f6:	30 93 9e 00 	sts	0x009E, r19	; 0x80009e <d+0x1>
     5fa:	20 93 9d 00 	sts	0x009D, r18	; 0x80009d <d>
     5fe:	0e 94 c6 00 	call	0x18c	; 0x18c <EEPROM_write>
	
}
     602:	ff 91       	pop	r31
     604:	ef 91       	pop	r30
     606:	bf 91       	pop	r27
     608:	af 91       	pop	r26
     60a:	9f 91       	pop	r25
     60c:	8f 91       	pop	r24
     60e:	7f 91       	pop	r23
     610:	6f 91       	pop	r22
     612:	5f 91       	pop	r21
     614:	4f 91       	pop	r20
     616:	3f 91       	pop	r19
     618:	2f 91       	pop	r18
     61a:	0f 90       	pop	r0
     61c:	0f be       	out	0x3f, r0	; 63
     61e:	0f 90       	pop	r0
     620:	1f 90       	pop	r1
     622:	18 95       	reti

00000624 <Timer0_init>:

void Timer0_init(){
	TIFR = 0b00000011; // Clear interruptions
     624:	83 e0       	ldi	r24, 0x03	; 3
     626:	88 bf       	out	0x38, r24	; 56
	TIMSK = 0b00000010; // Set interruption. Bit 0: Overflow; Bit 1: Compare
     628:	82 e0       	ldi	r24, 0x02	; 2
     62a:	89 bf       	out	0x39, r24	; 57
	sei();
     62c:	78 94       	sei
	TCNT0 = 0; //Counts
     62e:	12 be       	out	0x32, r1	; 50
	OCR0 = 243; //When the compare interruption will be called
     630:	83 ef       	ldi	r24, 0xF3	; 243
     632:	8c bf       	out	0x3c, r24	; 60
	TCCR0 = 0b00001101; //CTC, last 3 bits to set prescaler (1024)
     634:	8d e0       	ldi	r24, 0x0D	; 13
     636:	83 bf       	out	0x33, r24	; 51
     638:	08 95       	ret

0000063a <__vector_19>:
}
ISR(TIMER0_COMP_vect){
     63a:	1f 92       	push	r1
     63c:	0f 92       	push	r0
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	0f 92       	push	r0
     642:	11 24       	eor	r1, r1
}
     644:	0f 90       	pop	r0
     646:	0f be       	out	0x3f, r0	; 63
     648:	0f 90       	pop	r0
     64a:	1f 90       	pop	r1
     64c:	18 95       	reti

0000064e <main>:

int main(void) {
     64e:	cf 93       	push	r28
     650:	df 93       	push	r29
     652:	00 d0       	rcall	.+0      	; 0x654 <main+0x6>
     654:	00 d0       	rcall	.+0      	; 0x656 <main+0x8>
     656:	1f 92       	push	r1
     658:	cd b7       	in	r28, 0x3d	; 61
     65a:	de b7       	in	r29, 0x3e	; 62
	LCD_init();
     65c:	0e 94 35 02 	call	0x46a	; 0x46a <LCD_init>
	LCD_wr_instruction(LCD_Cmd_Clear);
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
	LCD_wr_string("Sensando...");
     666:	8d e7       	ldi	r24, 0x7D	; 125
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_wr_string>
	KB_init();
     66e:	0e 94 ba 02 	call	0x574	; 0x574 <KB_init>
	ADC_init();
     672:	0e 94 bf 02 	call	0x57e	; 0x57e <ADC_init>
	Timer0_init();
     676:	0e 94 12 03 	call	0x624	; 0x624 <Timer0_init>
	
	DDRB = 0xFF;
     67a:	8f ef       	ldi	r24, 0xFF	; 255
     67c:	87 bb       	out	0x17, r24	; 23
	PORTB = 0;
     67e:	18 ba       	out	0x18, r1	; 24
	uint8_t t;
	for(;;){
		//A = <; B = >; C = +
		while(hastaTecla() != 'C');
     680:	0e 94 74 02 	call	0x4e8	; 0x4e8 <hastaTecla>
     684:	83 34       	cpi	r24, 0x43	; 67
     686:	e1 f7       	brne	.-8      	; 0x680 <main+0x32>
		cli();
     688:	f8 94       	cli
		if(d) d--, full = 0;
     68a:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <d>
     68e:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <d+0x1>
     692:	89 2b       	or	r24, r25
     694:	59 f0       	breq	.+22     	; 0x6ac <main+0x5e>
     696:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <d>
     69a:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <d+0x1>
     69e:	01 97       	sbiw	r24, 0x01	; 1
     6a0:	90 93 9e 00 	sts	0x009E, r25	; 0x80009e <d+0x1>
     6a4:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <d>
     6a8:	10 92 9c 00 	sts	0x009C, r1	; 0x80009c <__data_end>
		LCD_wr_lines("Ultimos val.", "");
     6ac:	68 e8       	ldi	r22, 0x88	; 136
     6ae:	70 e0       	ldi	r23, 0x00	; 0
     6b0:	89 e8       	ldi	r24, 0x89	; 137
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	0e 94 18 02 	call	0x430	; 0x430 <LCD_wr_lines>
		uint16_t a = 1000;
		t = 0, l = d;
     6b8:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <d>
     6bc:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <d+0x1>
     6c0:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <l+0x1>
     6c4:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <l>
		//A = <; B = >; C = +
		while(hastaTecla() != 'C');
		cli();
		if(d) d--, full = 0;
		LCD_wr_lines("Ultimos val.", "");
		uint16_t a = 1000;
     6c8:	08 ee       	ldi	r16, 0xE8	; 232
     6ca:	13 e0       	ldi	r17, 0x03	; 3
		t = 0, l = d;
     6cc:	80 e0       	ldi	r24, 0x00	; 0
		do {
			if(t == 'A' && d > 0) d--;
     6ce:	81 34       	cpi	r24, 0x41	; 65
     6d0:	81 f4       	brne	.+32     	; 0x6f2 <main+0xa4>
     6d2:	20 91 9d 00 	lds	r18, 0x009D	; 0x80009d <d>
     6d6:	30 91 9e 00 	lds	r19, 0x009E	; 0x80009e <d+0x1>
     6da:	23 2b       	or	r18, r19
     6dc:	51 f0       	breq	.+20     	; 0x6f2 <main+0xa4>
     6de:	20 91 9d 00 	lds	r18, 0x009D	; 0x80009d <d>
     6e2:	30 91 9e 00 	lds	r19, 0x009E	; 0x80009e <d+0x1>
     6e6:	21 50       	subi	r18, 0x01	; 1
     6e8:	31 09       	sbc	r19, r1
     6ea:	30 93 9e 00 	sts	0x009E, r19	; 0x80009e <d+0x1>
     6ee:	20 93 9d 00 	sts	0x009D, r18	; 0x80009d <d>
			if(t == 'B' && d < l) d++;
     6f2:	82 34       	cpi	r24, 0x42	; 66
     6f4:	a1 f4       	brne	.+40     	; 0x71e <main+0xd0>
     6f6:	20 91 9d 00 	lds	r18, 0x009D	; 0x80009d <d>
     6fa:	30 91 9e 00 	lds	r19, 0x009E	; 0x80009e <d+0x1>
     6fe:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <l>
     702:	90 91 a0 00 	lds	r25, 0x00A0	; 0x8000a0 <l+0x1>
     706:	28 17       	cp	r18, r24
     708:	39 07       	cpc	r19, r25
     70a:	48 f4       	brcc	.+18     	; 0x71e <main+0xd0>
     70c:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <d>
     710:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <d+0x1>
     714:	01 96       	adiw	r24, 0x01	; 1
     716:	90 93 9e 00 	sts	0x009E, r25	; 0x80009e <d+0x1>
     71a:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <d>
			if(a != d){
     71e:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <d>
     722:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <d+0x1>
     726:	08 17       	cp	r16, r24
     728:	19 07       	cpc	r17, r25
     72a:	d1 f1       	breq	.+116    	; 0x7a0 <main+0x152>
				float p = EEPROM_read(d);
     72c:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <d>
     730:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <d+0x1>
     734:	0e 94 d5 00 	call	0x1aa	; 0x1aa <EEPROM_read>
     738:	68 2f       	mov	r22, r24
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 58 04 	call	0x8b0	; 0x8b0 <__floatunsisf>
				float v = p/255*5;
     744:	20 e0       	ldi	r18, 0x00	; 0
     746:	30 e0       	ldi	r19, 0x00	; 0
     748:	4f e7       	ldi	r20, 0x7F	; 127
     74a:	53 e4       	ldi	r21, 0x43	; 67
     74c:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__divsf3>
     750:	20 e0       	ldi	r18, 0x00	; 0
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	40 ea       	ldi	r20, 0xA0	; 160
     756:	50 e4       	ldi	r21, 0x40	; 64
     758:	0e 94 e6 04 	call	0x9cc	; 0x9cc <__mulsf3>
				uint8_t s[5];
				dtostrf(v, 1, 3, s); //Var, # digits, # decimales, cad
     75c:	9e 01       	movw	r18, r28
     75e:	2f 5f       	subi	r18, 0xFF	; 255
     760:	3f 4f       	sbci	r19, 0xFF	; 255
     762:	79 01       	movw	r14, r18
     764:	89 01       	movw	r16, r18
     766:	23 e0       	ldi	r18, 0x03	; 3
     768:	41 e0       	ldi	r20, 0x01	; 1
     76a:	0e 94 53 05 	call	0xaa6	; 0xaa6 <dtostrf>
				sprintf(uno, "%s v", s);
     76e:	ff 92       	push	r15
     770:	ef 92       	push	r14
     772:	86 e9       	ldi	r24, 0x96	; 150
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	9f 93       	push	r25
     778:	8f 93       	push	r24
     77a:	81 ea       	ldi	r24, 0xA1	; 161
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	9f 93       	push	r25
     780:	8f 93       	push	r24
     782:	0e 94 73 05 	call	0xae6	; 0xae6 <sprintf>
				LCD_wr_instruction(0b11000000);
     786:	80 ec       	ldi	r24, 0xC0	; 192
     788:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
				LCD_wr_string(uno);
     78c:	81 ea       	ldi	r24, 0xA1	; 161
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_wr_string>
     794:	0f 90       	pop	r0
     796:	0f 90       	pop	r0
     798:	0f 90       	pop	r0
     79a:	0f 90       	pop	r0
     79c:	0f 90       	pop	r0
     79e:	0f 90       	pop	r0
			}
			a = d;
     7a0:	00 91 9d 00 	lds	r16, 0x009D	; 0x80009d <d>
     7a4:	10 91 9e 00 	lds	r17, 0x009E	; 0x80009e <d+0x1>
			t = hastaTecla();
     7a8:	0e 94 74 02 	call	0x4e8	; 0x4e8 <hastaTecla>
		}
		while(t != 'C');
     7ac:	83 34       	cpi	r24, 0x43	; 67
     7ae:	09 f0       	breq	.+2      	; 0x7b2 <main+0x164>
     7b0:	8e cf       	rjmp	.-228    	; 0x6ce <main+0x80>
		LCD_wr_instruction(LCD_Cmd_Clear);
     7b2:	81 e0       	ldi	r24, 0x01	; 1
     7b4:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_wr_instruction>
		LCD_wr_string("Sensando...");
     7b8:	8d e7       	ldi	r24, 0x7D	; 125
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	0e 94 c1 01 	call	0x382	; 0x382 <LCD_wr_string>
		d = 0;
     7c0:	10 92 9e 00 	sts	0x009E, r1	; 0x80009e <d+0x1>
     7c4:	10 92 9d 00 	sts	0x009D, r1	; 0x80009d <d>
		sei();
     7c8:	78 94       	sei
	}
     7ca:	5a cf       	rjmp	.-332    	; 0x680 <main+0x32>

000007cc <__divsf3>:
     7cc:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <__divsf3x>
     7d0:	0c 94 ac 04 	jmp	0x958	; 0x958 <__fp_round>
     7d4:	0e 94 a5 04 	call	0x94a	; 0x94a <__fp_pscB>
     7d8:	58 f0       	brcs	.+22     	; 0x7f0 <__divsf3+0x24>
     7da:	0e 94 9e 04 	call	0x93c	; 0x93c <__fp_pscA>
     7de:	40 f0       	brcs	.+16     	; 0x7f0 <__divsf3+0x24>
     7e0:	29 f4       	brne	.+10     	; 0x7ec <__divsf3+0x20>
     7e2:	5f 3f       	cpi	r21, 0xFF	; 255
     7e4:	29 f0       	breq	.+10     	; 0x7f0 <__divsf3+0x24>
     7e6:	0c 94 95 04 	jmp	0x92a	; 0x92a <__fp_inf>
     7ea:	51 11       	cpse	r21, r1
     7ec:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_szero>
     7f0:	0c 94 9b 04 	jmp	0x936	; 0x936 <__fp_nan>

000007f4 <__divsf3x>:
     7f4:	0e 94 bd 04 	call	0x97a	; 0x97a <__fp_split3>
     7f8:	68 f3       	brcs	.-38     	; 0x7d4 <__divsf3+0x8>

000007fa <__divsf3_pse>:
     7fa:	99 23       	and	r25, r25
     7fc:	b1 f3       	breq	.-20     	; 0x7ea <__divsf3+0x1e>
     7fe:	55 23       	and	r21, r21
     800:	91 f3       	breq	.-28     	; 0x7e6 <__divsf3+0x1a>
     802:	95 1b       	sub	r25, r21
     804:	55 0b       	sbc	r21, r21
     806:	bb 27       	eor	r27, r27
     808:	aa 27       	eor	r26, r26
     80a:	62 17       	cp	r22, r18
     80c:	73 07       	cpc	r23, r19
     80e:	84 07       	cpc	r24, r20
     810:	38 f0       	brcs	.+14     	; 0x820 <__divsf3_pse+0x26>
     812:	9f 5f       	subi	r25, 0xFF	; 255
     814:	5f 4f       	sbci	r21, 0xFF	; 255
     816:	22 0f       	add	r18, r18
     818:	33 1f       	adc	r19, r19
     81a:	44 1f       	adc	r20, r20
     81c:	aa 1f       	adc	r26, r26
     81e:	a9 f3       	breq	.-22     	; 0x80a <__divsf3_pse+0x10>
     820:	35 d0       	rcall	.+106    	; 0x88c <__divsf3_pse+0x92>
     822:	0e 2e       	mov	r0, r30
     824:	3a f0       	brmi	.+14     	; 0x834 <__divsf3_pse+0x3a>
     826:	e0 e8       	ldi	r30, 0x80	; 128
     828:	32 d0       	rcall	.+100    	; 0x88e <__divsf3_pse+0x94>
     82a:	91 50       	subi	r25, 0x01	; 1
     82c:	50 40       	sbci	r21, 0x00	; 0
     82e:	e6 95       	lsr	r30
     830:	00 1c       	adc	r0, r0
     832:	ca f7       	brpl	.-14     	; 0x826 <__divsf3_pse+0x2c>
     834:	2b d0       	rcall	.+86     	; 0x88c <__divsf3_pse+0x92>
     836:	fe 2f       	mov	r31, r30
     838:	29 d0       	rcall	.+82     	; 0x88c <__divsf3_pse+0x92>
     83a:	66 0f       	add	r22, r22
     83c:	77 1f       	adc	r23, r23
     83e:	88 1f       	adc	r24, r24
     840:	bb 1f       	adc	r27, r27
     842:	26 17       	cp	r18, r22
     844:	37 07       	cpc	r19, r23
     846:	48 07       	cpc	r20, r24
     848:	ab 07       	cpc	r26, r27
     84a:	b0 e8       	ldi	r27, 0x80	; 128
     84c:	09 f0       	breq	.+2      	; 0x850 <__divsf3_pse+0x56>
     84e:	bb 0b       	sbc	r27, r27
     850:	80 2d       	mov	r24, r0
     852:	bf 01       	movw	r22, r30
     854:	ff 27       	eor	r31, r31
     856:	93 58       	subi	r25, 0x83	; 131
     858:	5f 4f       	sbci	r21, 0xFF	; 255
     85a:	3a f0       	brmi	.+14     	; 0x86a <__divsf3_pse+0x70>
     85c:	9e 3f       	cpi	r25, 0xFE	; 254
     85e:	51 05       	cpc	r21, r1
     860:	78 f0       	brcs	.+30     	; 0x880 <__divsf3_pse+0x86>
     862:	0c 94 95 04 	jmp	0x92a	; 0x92a <__fp_inf>
     866:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_szero>
     86a:	5f 3f       	cpi	r21, 0xFF	; 255
     86c:	e4 f3       	brlt	.-8      	; 0x866 <__divsf3_pse+0x6c>
     86e:	98 3e       	cpi	r25, 0xE8	; 232
     870:	d4 f3       	brlt	.-12     	; 0x866 <__divsf3_pse+0x6c>
     872:	86 95       	lsr	r24
     874:	77 95       	ror	r23
     876:	67 95       	ror	r22
     878:	b7 95       	ror	r27
     87a:	f7 95       	ror	r31
     87c:	9f 5f       	subi	r25, 0xFF	; 255
     87e:	c9 f7       	brne	.-14     	; 0x872 <__divsf3_pse+0x78>
     880:	88 0f       	add	r24, r24
     882:	91 1d       	adc	r25, r1
     884:	96 95       	lsr	r25
     886:	87 95       	ror	r24
     888:	97 f9       	bld	r25, 7
     88a:	08 95       	ret
     88c:	e1 e0       	ldi	r30, 0x01	; 1
     88e:	66 0f       	add	r22, r22
     890:	77 1f       	adc	r23, r23
     892:	88 1f       	adc	r24, r24
     894:	bb 1f       	adc	r27, r27
     896:	62 17       	cp	r22, r18
     898:	73 07       	cpc	r23, r19
     89a:	84 07       	cpc	r24, r20
     89c:	ba 07       	cpc	r27, r26
     89e:	20 f0       	brcs	.+8      	; 0x8a8 <__divsf3_pse+0xae>
     8a0:	62 1b       	sub	r22, r18
     8a2:	73 0b       	sbc	r23, r19
     8a4:	84 0b       	sbc	r24, r20
     8a6:	ba 0b       	sbc	r27, r26
     8a8:	ee 1f       	adc	r30, r30
     8aa:	88 f7       	brcc	.-30     	; 0x88e <__divsf3_pse+0x94>
     8ac:	e0 95       	com	r30
     8ae:	08 95       	ret

000008b0 <__floatunsisf>:
     8b0:	e8 94       	clt
     8b2:	09 c0       	rjmp	.+18     	; 0x8c6 <__floatsisf+0x12>

000008b4 <__floatsisf>:
     8b4:	97 fb       	bst	r25, 7
     8b6:	3e f4       	brtc	.+14     	; 0x8c6 <__floatsisf+0x12>
     8b8:	90 95       	com	r25
     8ba:	80 95       	com	r24
     8bc:	70 95       	com	r23
     8be:	61 95       	neg	r22
     8c0:	7f 4f       	sbci	r23, 0xFF	; 255
     8c2:	8f 4f       	sbci	r24, 0xFF	; 255
     8c4:	9f 4f       	sbci	r25, 0xFF	; 255
     8c6:	99 23       	and	r25, r25
     8c8:	a9 f0       	breq	.+42     	; 0x8f4 <__floatsisf+0x40>
     8ca:	f9 2f       	mov	r31, r25
     8cc:	96 e9       	ldi	r25, 0x96	; 150
     8ce:	bb 27       	eor	r27, r27
     8d0:	93 95       	inc	r25
     8d2:	f6 95       	lsr	r31
     8d4:	87 95       	ror	r24
     8d6:	77 95       	ror	r23
     8d8:	67 95       	ror	r22
     8da:	b7 95       	ror	r27
     8dc:	f1 11       	cpse	r31, r1
     8de:	f8 cf       	rjmp	.-16     	; 0x8d0 <__floatsisf+0x1c>
     8e0:	fa f4       	brpl	.+62     	; 0x920 <__floatsisf+0x6c>
     8e2:	bb 0f       	add	r27, r27
     8e4:	11 f4       	brne	.+4      	; 0x8ea <__floatsisf+0x36>
     8e6:	60 ff       	sbrs	r22, 0
     8e8:	1b c0       	rjmp	.+54     	; 0x920 <__floatsisf+0x6c>
     8ea:	6f 5f       	subi	r22, 0xFF	; 255
     8ec:	7f 4f       	sbci	r23, 0xFF	; 255
     8ee:	8f 4f       	sbci	r24, 0xFF	; 255
     8f0:	9f 4f       	sbci	r25, 0xFF	; 255
     8f2:	16 c0       	rjmp	.+44     	; 0x920 <__floatsisf+0x6c>
     8f4:	88 23       	and	r24, r24
     8f6:	11 f0       	breq	.+4      	; 0x8fc <__floatsisf+0x48>
     8f8:	96 e9       	ldi	r25, 0x96	; 150
     8fa:	11 c0       	rjmp	.+34     	; 0x91e <__floatsisf+0x6a>
     8fc:	77 23       	and	r23, r23
     8fe:	21 f0       	breq	.+8      	; 0x908 <__floatsisf+0x54>
     900:	9e e8       	ldi	r25, 0x8E	; 142
     902:	87 2f       	mov	r24, r23
     904:	76 2f       	mov	r23, r22
     906:	05 c0       	rjmp	.+10     	; 0x912 <__floatsisf+0x5e>
     908:	66 23       	and	r22, r22
     90a:	71 f0       	breq	.+28     	; 0x928 <__floatsisf+0x74>
     90c:	96 e8       	ldi	r25, 0x86	; 134
     90e:	86 2f       	mov	r24, r22
     910:	70 e0       	ldi	r23, 0x00	; 0
     912:	60 e0       	ldi	r22, 0x00	; 0
     914:	2a f0       	brmi	.+10     	; 0x920 <__floatsisf+0x6c>
     916:	9a 95       	dec	r25
     918:	66 0f       	add	r22, r22
     91a:	77 1f       	adc	r23, r23
     91c:	88 1f       	adc	r24, r24
     91e:	da f7       	brpl	.-10     	; 0x916 <__floatsisf+0x62>
     920:	88 0f       	add	r24, r24
     922:	96 95       	lsr	r25
     924:	87 95       	ror	r24
     926:	97 f9       	bld	r25, 7
     928:	08 95       	ret

0000092a <__fp_inf>:
     92a:	97 f9       	bld	r25, 7
     92c:	9f 67       	ori	r25, 0x7F	; 127
     92e:	80 e8       	ldi	r24, 0x80	; 128
     930:	70 e0       	ldi	r23, 0x00	; 0
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	08 95       	ret

00000936 <__fp_nan>:
     936:	9f ef       	ldi	r25, 0xFF	; 255
     938:	80 ec       	ldi	r24, 0xC0	; 192
     93a:	08 95       	ret

0000093c <__fp_pscA>:
     93c:	00 24       	eor	r0, r0
     93e:	0a 94       	dec	r0
     940:	16 16       	cp	r1, r22
     942:	17 06       	cpc	r1, r23
     944:	18 06       	cpc	r1, r24
     946:	09 06       	cpc	r0, r25
     948:	08 95       	ret

0000094a <__fp_pscB>:
     94a:	00 24       	eor	r0, r0
     94c:	0a 94       	dec	r0
     94e:	12 16       	cp	r1, r18
     950:	13 06       	cpc	r1, r19
     952:	14 06       	cpc	r1, r20
     954:	05 06       	cpc	r0, r21
     956:	08 95       	ret

00000958 <__fp_round>:
     958:	09 2e       	mov	r0, r25
     95a:	03 94       	inc	r0
     95c:	00 0c       	add	r0, r0
     95e:	11 f4       	brne	.+4      	; 0x964 <__fp_round+0xc>
     960:	88 23       	and	r24, r24
     962:	52 f0       	brmi	.+20     	; 0x978 <__fp_round+0x20>
     964:	bb 0f       	add	r27, r27
     966:	40 f4       	brcc	.+16     	; 0x978 <__fp_round+0x20>
     968:	bf 2b       	or	r27, r31
     96a:	11 f4       	brne	.+4      	; 0x970 <__fp_round+0x18>
     96c:	60 ff       	sbrs	r22, 0
     96e:	04 c0       	rjmp	.+8      	; 0x978 <__fp_round+0x20>
     970:	6f 5f       	subi	r22, 0xFF	; 255
     972:	7f 4f       	sbci	r23, 0xFF	; 255
     974:	8f 4f       	sbci	r24, 0xFF	; 255
     976:	9f 4f       	sbci	r25, 0xFF	; 255
     978:	08 95       	ret

0000097a <__fp_split3>:
     97a:	57 fd       	sbrc	r21, 7
     97c:	90 58       	subi	r25, 0x80	; 128
     97e:	44 0f       	add	r20, r20
     980:	55 1f       	adc	r21, r21
     982:	59 f0       	breq	.+22     	; 0x99a <__fp_splitA+0x10>
     984:	5f 3f       	cpi	r21, 0xFF	; 255
     986:	71 f0       	breq	.+28     	; 0x9a4 <__fp_splitA+0x1a>
     988:	47 95       	ror	r20

0000098a <__fp_splitA>:
     98a:	88 0f       	add	r24, r24
     98c:	97 fb       	bst	r25, 7
     98e:	99 1f       	adc	r25, r25
     990:	61 f0       	breq	.+24     	; 0x9aa <__fp_splitA+0x20>
     992:	9f 3f       	cpi	r25, 0xFF	; 255
     994:	79 f0       	breq	.+30     	; 0x9b4 <__fp_splitA+0x2a>
     996:	87 95       	ror	r24
     998:	08 95       	ret
     99a:	12 16       	cp	r1, r18
     99c:	13 06       	cpc	r1, r19
     99e:	14 06       	cpc	r1, r20
     9a0:	55 1f       	adc	r21, r21
     9a2:	f2 cf       	rjmp	.-28     	; 0x988 <__fp_split3+0xe>
     9a4:	46 95       	lsr	r20
     9a6:	f1 df       	rcall	.-30     	; 0x98a <__fp_splitA>
     9a8:	08 c0       	rjmp	.+16     	; 0x9ba <__fp_splitA+0x30>
     9aa:	16 16       	cp	r1, r22
     9ac:	17 06       	cpc	r1, r23
     9ae:	18 06       	cpc	r1, r24
     9b0:	99 1f       	adc	r25, r25
     9b2:	f1 cf       	rjmp	.-30     	; 0x996 <__fp_splitA+0xc>
     9b4:	86 95       	lsr	r24
     9b6:	71 05       	cpc	r23, r1
     9b8:	61 05       	cpc	r22, r1
     9ba:	08 94       	sec
     9bc:	08 95       	ret

000009be <__fp_zero>:
     9be:	e8 94       	clt

000009c0 <__fp_szero>:
     9c0:	bb 27       	eor	r27, r27
     9c2:	66 27       	eor	r22, r22
     9c4:	77 27       	eor	r23, r23
     9c6:	cb 01       	movw	r24, r22
     9c8:	97 f9       	bld	r25, 7
     9ca:	08 95       	ret

000009cc <__mulsf3>:
     9cc:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__mulsf3x>
     9d0:	0c 94 ac 04 	jmp	0x958	; 0x958 <__fp_round>
     9d4:	0e 94 9e 04 	call	0x93c	; 0x93c <__fp_pscA>
     9d8:	38 f0       	brcs	.+14     	; 0x9e8 <__mulsf3+0x1c>
     9da:	0e 94 a5 04 	call	0x94a	; 0x94a <__fp_pscB>
     9de:	20 f0       	brcs	.+8      	; 0x9e8 <__mulsf3+0x1c>
     9e0:	95 23       	and	r25, r21
     9e2:	11 f0       	breq	.+4      	; 0x9e8 <__mulsf3+0x1c>
     9e4:	0c 94 95 04 	jmp	0x92a	; 0x92a <__fp_inf>
     9e8:	0c 94 9b 04 	jmp	0x936	; 0x936 <__fp_nan>
     9ec:	11 24       	eor	r1, r1
     9ee:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_szero>

000009f2 <__mulsf3x>:
     9f2:	0e 94 bd 04 	call	0x97a	; 0x97a <__fp_split3>
     9f6:	70 f3       	brcs	.-36     	; 0x9d4 <__mulsf3+0x8>

000009f8 <__mulsf3_pse>:
     9f8:	95 9f       	mul	r25, r21
     9fa:	c1 f3       	breq	.-16     	; 0x9ec <__mulsf3+0x20>
     9fc:	95 0f       	add	r25, r21
     9fe:	50 e0       	ldi	r21, 0x00	; 0
     a00:	55 1f       	adc	r21, r21
     a02:	62 9f       	mul	r22, r18
     a04:	f0 01       	movw	r30, r0
     a06:	72 9f       	mul	r23, r18
     a08:	bb 27       	eor	r27, r27
     a0a:	f0 0d       	add	r31, r0
     a0c:	b1 1d       	adc	r27, r1
     a0e:	63 9f       	mul	r22, r19
     a10:	aa 27       	eor	r26, r26
     a12:	f0 0d       	add	r31, r0
     a14:	b1 1d       	adc	r27, r1
     a16:	aa 1f       	adc	r26, r26
     a18:	64 9f       	mul	r22, r20
     a1a:	66 27       	eor	r22, r22
     a1c:	b0 0d       	add	r27, r0
     a1e:	a1 1d       	adc	r26, r1
     a20:	66 1f       	adc	r22, r22
     a22:	82 9f       	mul	r24, r18
     a24:	22 27       	eor	r18, r18
     a26:	b0 0d       	add	r27, r0
     a28:	a1 1d       	adc	r26, r1
     a2a:	62 1f       	adc	r22, r18
     a2c:	73 9f       	mul	r23, r19
     a2e:	b0 0d       	add	r27, r0
     a30:	a1 1d       	adc	r26, r1
     a32:	62 1f       	adc	r22, r18
     a34:	83 9f       	mul	r24, r19
     a36:	a0 0d       	add	r26, r0
     a38:	61 1d       	adc	r22, r1
     a3a:	22 1f       	adc	r18, r18
     a3c:	74 9f       	mul	r23, r20
     a3e:	33 27       	eor	r19, r19
     a40:	a0 0d       	add	r26, r0
     a42:	61 1d       	adc	r22, r1
     a44:	23 1f       	adc	r18, r19
     a46:	84 9f       	mul	r24, r20
     a48:	60 0d       	add	r22, r0
     a4a:	21 1d       	adc	r18, r1
     a4c:	82 2f       	mov	r24, r18
     a4e:	76 2f       	mov	r23, r22
     a50:	6a 2f       	mov	r22, r26
     a52:	11 24       	eor	r1, r1
     a54:	9f 57       	subi	r25, 0x7F	; 127
     a56:	50 40       	sbci	r21, 0x00	; 0
     a58:	9a f0       	brmi	.+38     	; 0xa80 <__mulsf3_pse+0x88>
     a5a:	f1 f0       	breq	.+60     	; 0xa98 <__mulsf3_pse+0xa0>
     a5c:	88 23       	and	r24, r24
     a5e:	4a f0       	brmi	.+18     	; 0xa72 <__mulsf3_pse+0x7a>
     a60:	ee 0f       	add	r30, r30
     a62:	ff 1f       	adc	r31, r31
     a64:	bb 1f       	adc	r27, r27
     a66:	66 1f       	adc	r22, r22
     a68:	77 1f       	adc	r23, r23
     a6a:	88 1f       	adc	r24, r24
     a6c:	91 50       	subi	r25, 0x01	; 1
     a6e:	50 40       	sbci	r21, 0x00	; 0
     a70:	a9 f7       	brne	.-22     	; 0xa5c <__mulsf3_pse+0x64>
     a72:	9e 3f       	cpi	r25, 0xFE	; 254
     a74:	51 05       	cpc	r21, r1
     a76:	80 f0       	brcs	.+32     	; 0xa98 <__mulsf3_pse+0xa0>
     a78:	0c 94 95 04 	jmp	0x92a	; 0x92a <__fp_inf>
     a7c:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_szero>
     a80:	5f 3f       	cpi	r21, 0xFF	; 255
     a82:	e4 f3       	brlt	.-8      	; 0xa7c <__mulsf3_pse+0x84>
     a84:	98 3e       	cpi	r25, 0xE8	; 232
     a86:	d4 f3       	brlt	.-12     	; 0xa7c <__mulsf3_pse+0x84>
     a88:	86 95       	lsr	r24
     a8a:	77 95       	ror	r23
     a8c:	67 95       	ror	r22
     a8e:	b7 95       	ror	r27
     a90:	f7 95       	ror	r31
     a92:	e7 95       	ror	r30
     a94:	9f 5f       	subi	r25, 0xFF	; 255
     a96:	c1 f7       	brne	.-16     	; 0xa88 <__mulsf3_pse+0x90>
     a98:	fe 2b       	or	r31, r30
     a9a:	88 0f       	add	r24, r24
     a9c:	91 1d       	adc	r25, r1
     a9e:	96 95       	lsr	r25
     aa0:	87 95       	ror	r24
     aa2:	97 f9       	bld	r25, 7
     aa4:	08 95       	ret

00000aa6 <dtostrf>:
     aa6:	ef 92       	push	r14
     aa8:	0f 93       	push	r16
     aaa:	1f 93       	push	r17
     aac:	cf 93       	push	r28
     aae:	df 93       	push	r29
     ab0:	e8 01       	movw	r28, r16
     ab2:	47 fd       	sbrc	r20, 7
     ab4:	02 c0       	rjmp	.+4      	; 0xaba <dtostrf+0x14>
     ab6:	34 e0       	ldi	r19, 0x04	; 4
     ab8:	01 c0       	rjmp	.+2      	; 0xabc <dtostrf+0x16>
     aba:	34 e1       	ldi	r19, 0x14	; 20
     abc:	04 2e       	mov	r0, r20
     abe:	00 0c       	add	r0, r0
     ac0:	55 0b       	sbc	r21, r21
     ac2:	57 ff       	sbrs	r21, 7
     ac4:	03 c0       	rjmp	.+6      	; 0xacc <dtostrf+0x26>
     ac6:	51 95       	neg	r21
     ac8:	41 95       	neg	r20
     aca:	51 09       	sbc	r21, r1
     acc:	e3 2e       	mov	r14, r19
     ace:	02 2f       	mov	r16, r18
     ad0:	24 2f       	mov	r18, r20
     ad2:	ae 01       	movw	r20, r28
     ad4:	0e 94 76 07 	call	0xeec	; 0xeec <dtoa_prf>
     ad8:	ce 01       	movw	r24, r28
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	1f 91       	pop	r17
     ae0:	0f 91       	pop	r16
     ae2:	ef 90       	pop	r14
     ae4:	08 95       	ret

00000ae6 <sprintf>:
     ae6:	ae e0       	ldi	r26, 0x0E	; 14
     ae8:	b0 e0       	ldi	r27, 0x00	; 0
     aea:	e9 e7       	ldi	r30, 0x79	; 121
     aec:	f5 e0       	ldi	r31, 0x05	; 5
     aee:	0c 94 66 0a 	jmp	0x14cc	; 0x14cc <__prologue_saves__+0x1c>
     af2:	0d 89       	ldd	r16, Y+21	; 0x15
     af4:	1e 89       	ldd	r17, Y+22	; 0x16
     af6:	86 e0       	ldi	r24, 0x06	; 6
     af8:	8c 83       	std	Y+4, r24	; 0x04
     afa:	1a 83       	std	Y+2, r17	; 0x02
     afc:	09 83       	std	Y+1, r16	; 0x01
     afe:	8f ef       	ldi	r24, 0xFF	; 255
     b00:	9f e7       	ldi	r25, 0x7F	; 127
     b02:	9e 83       	std	Y+6, r25	; 0x06
     b04:	8d 83       	std	Y+5, r24	; 0x05
     b06:	ae 01       	movw	r20, r28
     b08:	47 5e       	subi	r20, 0xE7	; 231
     b0a:	5f 4f       	sbci	r21, 0xFF	; 255
     b0c:	6f 89       	ldd	r22, Y+23	; 0x17
     b0e:	78 8d       	ldd	r23, Y+24	; 0x18
     b10:	ce 01       	movw	r24, r28
     b12:	01 96       	adiw	r24, 0x01	; 1
     b14:	0e 94 95 05 	call	0xb2a	; 0xb2a <vfprintf>
     b18:	ef 81       	ldd	r30, Y+7	; 0x07
     b1a:	f8 85       	ldd	r31, Y+8	; 0x08
     b1c:	e0 0f       	add	r30, r16
     b1e:	f1 1f       	adc	r31, r17
     b20:	10 82       	st	Z, r1
     b22:	2e 96       	adiw	r28, 0x0e	; 14
     b24:	e4 e0       	ldi	r30, 0x04	; 4
     b26:	0c 94 82 0a 	jmp	0x1504	; 0x1504 <__epilogue_restores__+0x1c>

00000b2a <vfprintf>:
     b2a:	ab e0       	ldi	r26, 0x0B	; 11
     b2c:	b0 e0       	ldi	r27, 0x00	; 0
     b2e:	eb e9       	ldi	r30, 0x9B	; 155
     b30:	f5 e0       	ldi	r31, 0x05	; 5
     b32:	0c 94 58 0a 	jmp	0x14b0	; 0x14b0 <__prologue_saves__>
     b36:	6c 01       	movw	r12, r24
     b38:	7b 01       	movw	r14, r22
     b3a:	8a 01       	movw	r16, r20
     b3c:	fc 01       	movw	r30, r24
     b3e:	17 82       	std	Z+7, r1	; 0x07
     b40:	16 82       	std	Z+6, r1	; 0x06
     b42:	83 81       	ldd	r24, Z+3	; 0x03
     b44:	81 ff       	sbrs	r24, 1
     b46:	cc c1       	rjmp	.+920    	; 0xee0 <vfprintf+0x3b6>
     b48:	ce 01       	movw	r24, r28
     b4a:	01 96       	adiw	r24, 0x01	; 1
     b4c:	3c 01       	movw	r6, r24
     b4e:	f6 01       	movw	r30, r12
     b50:	93 81       	ldd	r25, Z+3	; 0x03
     b52:	f7 01       	movw	r30, r14
     b54:	93 fd       	sbrc	r25, 3
     b56:	85 91       	lpm	r24, Z+
     b58:	93 ff       	sbrs	r25, 3
     b5a:	81 91       	ld	r24, Z+
     b5c:	7f 01       	movw	r14, r30
     b5e:	88 23       	and	r24, r24
     b60:	09 f4       	brne	.+2      	; 0xb64 <vfprintf+0x3a>
     b62:	ba c1       	rjmp	.+884    	; 0xed8 <vfprintf+0x3ae>
     b64:	85 32       	cpi	r24, 0x25	; 37
     b66:	39 f4       	brne	.+14     	; 0xb76 <vfprintf+0x4c>
     b68:	93 fd       	sbrc	r25, 3
     b6a:	85 91       	lpm	r24, Z+
     b6c:	93 ff       	sbrs	r25, 3
     b6e:	81 91       	ld	r24, Z+
     b70:	7f 01       	movw	r14, r30
     b72:	85 32       	cpi	r24, 0x25	; 37
     b74:	29 f4       	brne	.+10     	; 0xb80 <vfprintf+0x56>
     b76:	b6 01       	movw	r22, r12
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0e 94 be 09 	call	0x137c	; 0x137c <fputc>
     b7e:	e7 cf       	rjmp	.-50     	; 0xb4e <vfprintf+0x24>
     b80:	91 2c       	mov	r9, r1
     b82:	21 2c       	mov	r2, r1
     b84:	31 2c       	mov	r3, r1
     b86:	ff e1       	ldi	r31, 0x1F	; 31
     b88:	f3 15       	cp	r31, r3
     b8a:	d8 f0       	brcs	.+54     	; 0xbc2 <vfprintf+0x98>
     b8c:	8b 32       	cpi	r24, 0x2B	; 43
     b8e:	79 f0       	breq	.+30     	; 0xbae <vfprintf+0x84>
     b90:	38 f4       	brcc	.+14     	; 0xba0 <vfprintf+0x76>
     b92:	80 32       	cpi	r24, 0x20	; 32
     b94:	79 f0       	breq	.+30     	; 0xbb4 <vfprintf+0x8a>
     b96:	83 32       	cpi	r24, 0x23	; 35
     b98:	a1 f4       	brne	.+40     	; 0xbc2 <vfprintf+0x98>
     b9a:	23 2d       	mov	r18, r3
     b9c:	20 61       	ori	r18, 0x10	; 16
     b9e:	1d c0       	rjmp	.+58     	; 0xbda <vfprintf+0xb0>
     ba0:	8d 32       	cpi	r24, 0x2D	; 45
     ba2:	61 f0       	breq	.+24     	; 0xbbc <vfprintf+0x92>
     ba4:	80 33       	cpi	r24, 0x30	; 48
     ba6:	69 f4       	brne	.+26     	; 0xbc2 <vfprintf+0x98>
     ba8:	23 2d       	mov	r18, r3
     baa:	21 60       	ori	r18, 0x01	; 1
     bac:	16 c0       	rjmp	.+44     	; 0xbda <vfprintf+0xb0>
     bae:	83 2d       	mov	r24, r3
     bb0:	82 60       	ori	r24, 0x02	; 2
     bb2:	38 2e       	mov	r3, r24
     bb4:	e3 2d       	mov	r30, r3
     bb6:	e4 60       	ori	r30, 0x04	; 4
     bb8:	3e 2e       	mov	r3, r30
     bba:	2a c0       	rjmp	.+84     	; 0xc10 <vfprintf+0xe6>
     bbc:	f3 2d       	mov	r31, r3
     bbe:	f8 60       	ori	r31, 0x08	; 8
     bc0:	1d c0       	rjmp	.+58     	; 0xbfc <vfprintf+0xd2>
     bc2:	37 fc       	sbrc	r3, 7
     bc4:	2d c0       	rjmp	.+90     	; 0xc20 <vfprintf+0xf6>
     bc6:	20 ed       	ldi	r18, 0xD0	; 208
     bc8:	28 0f       	add	r18, r24
     bca:	2a 30       	cpi	r18, 0x0A	; 10
     bcc:	40 f0       	brcs	.+16     	; 0xbde <vfprintf+0xb4>
     bce:	8e 32       	cpi	r24, 0x2E	; 46
     bd0:	b9 f4       	brne	.+46     	; 0xc00 <vfprintf+0xd6>
     bd2:	36 fc       	sbrc	r3, 6
     bd4:	81 c1       	rjmp	.+770    	; 0xed8 <vfprintf+0x3ae>
     bd6:	23 2d       	mov	r18, r3
     bd8:	20 64       	ori	r18, 0x40	; 64
     bda:	32 2e       	mov	r3, r18
     bdc:	19 c0       	rjmp	.+50     	; 0xc10 <vfprintf+0xe6>
     bde:	36 fe       	sbrs	r3, 6
     be0:	06 c0       	rjmp	.+12     	; 0xbee <vfprintf+0xc4>
     be2:	8a e0       	ldi	r24, 0x0A	; 10
     be4:	98 9e       	mul	r9, r24
     be6:	20 0d       	add	r18, r0
     be8:	11 24       	eor	r1, r1
     bea:	92 2e       	mov	r9, r18
     bec:	11 c0       	rjmp	.+34     	; 0xc10 <vfprintf+0xe6>
     bee:	ea e0       	ldi	r30, 0x0A	; 10
     bf0:	2e 9e       	mul	r2, r30
     bf2:	20 0d       	add	r18, r0
     bf4:	11 24       	eor	r1, r1
     bf6:	22 2e       	mov	r2, r18
     bf8:	f3 2d       	mov	r31, r3
     bfa:	f0 62       	ori	r31, 0x20	; 32
     bfc:	3f 2e       	mov	r3, r31
     bfe:	08 c0       	rjmp	.+16     	; 0xc10 <vfprintf+0xe6>
     c00:	8c 36       	cpi	r24, 0x6C	; 108
     c02:	21 f4       	brne	.+8      	; 0xc0c <vfprintf+0xe2>
     c04:	83 2d       	mov	r24, r3
     c06:	80 68       	ori	r24, 0x80	; 128
     c08:	38 2e       	mov	r3, r24
     c0a:	02 c0       	rjmp	.+4      	; 0xc10 <vfprintf+0xe6>
     c0c:	88 36       	cpi	r24, 0x68	; 104
     c0e:	41 f4       	brne	.+16     	; 0xc20 <vfprintf+0xf6>
     c10:	f7 01       	movw	r30, r14
     c12:	93 fd       	sbrc	r25, 3
     c14:	85 91       	lpm	r24, Z+
     c16:	93 ff       	sbrs	r25, 3
     c18:	81 91       	ld	r24, Z+
     c1a:	7f 01       	movw	r14, r30
     c1c:	81 11       	cpse	r24, r1
     c1e:	b3 cf       	rjmp	.-154    	; 0xb86 <vfprintf+0x5c>
     c20:	98 2f       	mov	r25, r24
     c22:	9f 7d       	andi	r25, 0xDF	; 223
     c24:	95 54       	subi	r25, 0x45	; 69
     c26:	93 30       	cpi	r25, 0x03	; 3
     c28:	28 f4       	brcc	.+10     	; 0xc34 <vfprintf+0x10a>
     c2a:	0c 5f       	subi	r16, 0xFC	; 252
     c2c:	1f 4f       	sbci	r17, 0xFF	; 255
     c2e:	9f e3       	ldi	r25, 0x3F	; 63
     c30:	99 83       	std	Y+1, r25	; 0x01
     c32:	0d c0       	rjmp	.+26     	; 0xc4e <vfprintf+0x124>
     c34:	83 36       	cpi	r24, 0x63	; 99
     c36:	31 f0       	breq	.+12     	; 0xc44 <vfprintf+0x11a>
     c38:	83 37       	cpi	r24, 0x73	; 115
     c3a:	71 f0       	breq	.+28     	; 0xc58 <vfprintf+0x12e>
     c3c:	83 35       	cpi	r24, 0x53	; 83
     c3e:	09 f0       	breq	.+2      	; 0xc42 <vfprintf+0x118>
     c40:	59 c0       	rjmp	.+178    	; 0xcf4 <vfprintf+0x1ca>
     c42:	21 c0       	rjmp	.+66     	; 0xc86 <vfprintf+0x15c>
     c44:	f8 01       	movw	r30, r16
     c46:	80 81       	ld	r24, Z
     c48:	89 83       	std	Y+1, r24	; 0x01
     c4a:	0e 5f       	subi	r16, 0xFE	; 254
     c4c:	1f 4f       	sbci	r17, 0xFF	; 255
     c4e:	88 24       	eor	r8, r8
     c50:	83 94       	inc	r8
     c52:	91 2c       	mov	r9, r1
     c54:	53 01       	movw	r10, r6
     c56:	13 c0       	rjmp	.+38     	; 0xc7e <vfprintf+0x154>
     c58:	28 01       	movw	r4, r16
     c5a:	f2 e0       	ldi	r31, 0x02	; 2
     c5c:	4f 0e       	add	r4, r31
     c5e:	51 1c       	adc	r5, r1
     c60:	f8 01       	movw	r30, r16
     c62:	a0 80       	ld	r10, Z
     c64:	b1 80       	ldd	r11, Z+1	; 0x01
     c66:	36 fe       	sbrs	r3, 6
     c68:	03 c0       	rjmp	.+6      	; 0xc70 <vfprintf+0x146>
     c6a:	69 2d       	mov	r22, r9
     c6c:	70 e0       	ldi	r23, 0x00	; 0
     c6e:	02 c0       	rjmp	.+4      	; 0xc74 <vfprintf+0x14a>
     c70:	6f ef       	ldi	r22, 0xFF	; 255
     c72:	7f ef       	ldi	r23, 0xFF	; 255
     c74:	c5 01       	movw	r24, r10
     c76:	0e 94 b3 09 	call	0x1366	; 0x1366 <strnlen>
     c7a:	4c 01       	movw	r8, r24
     c7c:	82 01       	movw	r16, r4
     c7e:	f3 2d       	mov	r31, r3
     c80:	ff 77       	andi	r31, 0x7F	; 127
     c82:	3f 2e       	mov	r3, r31
     c84:	16 c0       	rjmp	.+44     	; 0xcb2 <vfprintf+0x188>
     c86:	28 01       	movw	r4, r16
     c88:	22 e0       	ldi	r18, 0x02	; 2
     c8a:	42 0e       	add	r4, r18
     c8c:	51 1c       	adc	r5, r1
     c8e:	f8 01       	movw	r30, r16
     c90:	a0 80       	ld	r10, Z
     c92:	b1 80       	ldd	r11, Z+1	; 0x01
     c94:	36 fe       	sbrs	r3, 6
     c96:	03 c0       	rjmp	.+6      	; 0xc9e <vfprintf+0x174>
     c98:	69 2d       	mov	r22, r9
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	02 c0       	rjmp	.+4      	; 0xca2 <vfprintf+0x178>
     c9e:	6f ef       	ldi	r22, 0xFF	; 255
     ca0:	7f ef       	ldi	r23, 0xFF	; 255
     ca2:	c5 01       	movw	r24, r10
     ca4:	0e 94 a8 09 	call	0x1350	; 0x1350 <strnlen_P>
     ca8:	4c 01       	movw	r8, r24
     caa:	f3 2d       	mov	r31, r3
     cac:	f0 68       	ori	r31, 0x80	; 128
     cae:	3f 2e       	mov	r3, r31
     cb0:	82 01       	movw	r16, r4
     cb2:	33 fc       	sbrc	r3, 3
     cb4:	1b c0       	rjmp	.+54     	; 0xcec <vfprintf+0x1c2>
     cb6:	82 2d       	mov	r24, r2
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	88 16       	cp	r8, r24
     cbc:	99 06       	cpc	r9, r25
     cbe:	b0 f4       	brcc	.+44     	; 0xcec <vfprintf+0x1c2>
     cc0:	b6 01       	movw	r22, r12
     cc2:	80 e2       	ldi	r24, 0x20	; 32
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	0e 94 be 09 	call	0x137c	; 0x137c <fputc>
     cca:	2a 94       	dec	r2
     ccc:	f4 cf       	rjmp	.-24     	; 0xcb6 <vfprintf+0x18c>
     cce:	f5 01       	movw	r30, r10
     cd0:	37 fc       	sbrc	r3, 7
     cd2:	85 91       	lpm	r24, Z+
     cd4:	37 fe       	sbrs	r3, 7
     cd6:	81 91       	ld	r24, Z+
     cd8:	5f 01       	movw	r10, r30
     cda:	b6 01       	movw	r22, r12
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	0e 94 be 09 	call	0x137c	; 0x137c <fputc>
     ce2:	21 10       	cpse	r2, r1
     ce4:	2a 94       	dec	r2
     ce6:	21 e0       	ldi	r18, 0x01	; 1
     ce8:	82 1a       	sub	r8, r18
     cea:	91 08       	sbc	r9, r1
     cec:	81 14       	cp	r8, r1
     cee:	91 04       	cpc	r9, r1
     cf0:	71 f7       	brne	.-36     	; 0xcce <vfprintf+0x1a4>
     cf2:	e8 c0       	rjmp	.+464    	; 0xec4 <vfprintf+0x39a>
     cf4:	84 36       	cpi	r24, 0x64	; 100
     cf6:	11 f0       	breq	.+4      	; 0xcfc <vfprintf+0x1d2>
     cf8:	89 36       	cpi	r24, 0x69	; 105
     cfa:	41 f5       	brne	.+80     	; 0xd4c <vfprintf+0x222>
     cfc:	f8 01       	movw	r30, r16
     cfe:	37 fe       	sbrs	r3, 7
     d00:	07 c0       	rjmp	.+14     	; 0xd10 <vfprintf+0x1e6>
     d02:	60 81       	ld	r22, Z
     d04:	71 81       	ldd	r23, Z+1	; 0x01
     d06:	82 81       	ldd	r24, Z+2	; 0x02
     d08:	93 81       	ldd	r25, Z+3	; 0x03
     d0a:	0c 5f       	subi	r16, 0xFC	; 252
     d0c:	1f 4f       	sbci	r17, 0xFF	; 255
     d0e:	08 c0       	rjmp	.+16     	; 0xd20 <vfprintf+0x1f6>
     d10:	60 81       	ld	r22, Z
     d12:	71 81       	ldd	r23, Z+1	; 0x01
     d14:	07 2e       	mov	r0, r23
     d16:	00 0c       	add	r0, r0
     d18:	88 0b       	sbc	r24, r24
     d1a:	99 0b       	sbc	r25, r25
     d1c:	0e 5f       	subi	r16, 0xFE	; 254
     d1e:	1f 4f       	sbci	r17, 0xFF	; 255
     d20:	f3 2d       	mov	r31, r3
     d22:	ff 76       	andi	r31, 0x6F	; 111
     d24:	3f 2e       	mov	r3, r31
     d26:	97 ff       	sbrs	r25, 7
     d28:	09 c0       	rjmp	.+18     	; 0xd3c <vfprintf+0x212>
     d2a:	90 95       	com	r25
     d2c:	80 95       	com	r24
     d2e:	70 95       	com	r23
     d30:	61 95       	neg	r22
     d32:	7f 4f       	sbci	r23, 0xFF	; 255
     d34:	8f 4f       	sbci	r24, 0xFF	; 255
     d36:	9f 4f       	sbci	r25, 0xFF	; 255
     d38:	f0 68       	ori	r31, 0x80	; 128
     d3a:	3f 2e       	mov	r3, r31
     d3c:	2a e0       	ldi	r18, 0x0A	; 10
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	a3 01       	movw	r20, r6
     d42:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <__ultoa_invert>
     d46:	88 2e       	mov	r8, r24
     d48:	86 18       	sub	r8, r6
     d4a:	45 c0       	rjmp	.+138    	; 0xdd6 <vfprintf+0x2ac>
     d4c:	85 37       	cpi	r24, 0x75	; 117
     d4e:	31 f4       	brne	.+12     	; 0xd5c <vfprintf+0x232>
     d50:	23 2d       	mov	r18, r3
     d52:	2f 7e       	andi	r18, 0xEF	; 239
     d54:	b2 2e       	mov	r11, r18
     d56:	2a e0       	ldi	r18, 0x0A	; 10
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	25 c0       	rjmp	.+74     	; 0xda6 <vfprintf+0x27c>
     d5c:	93 2d       	mov	r25, r3
     d5e:	99 7f       	andi	r25, 0xF9	; 249
     d60:	b9 2e       	mov	r11, r25
     d62:	8f 36       	cpi	r24, 0x6F	; 111
     d64:	c1 f0       	breq	.+48     	; 0xd96 <vfprintf+0x26c>
     d66:	18 f4       	brcc	.+6      	; 0xd6e <vfprintf+0x244>
     d68:	88 35       	cpi	r24, 0x58	; 88
     d6a:	79 f0       	breq	.+30     	; 0xd8a <vfprintf+0x260>
     d6c:	b5 c0       	rjmp	.+362    	; 0xed8 <vfprintf+0x3ae>
     d6e:	80 37       	cpi	r24, 0x70	; 112
     d70:	19 f0       	breq	.+6      	; 0xd78 <vfprintf+0x24e>
     d72:	88 37       	cpi	r24, 0x78	; 120
     d74:	21 f0       	breq	.+8      	; 0xd7e <vfprintf+0x254>
     d76:	b0 c0       	rjmp	.+352    	; 0xed8 <vfprintf+0x3ae>
     d78:	e9 2f       	mov	r30, r25
     d7a:	e0 61       	ori	r30, 0x10	; 16
     d7c:	be 2e       	mov	r11, r30
     d7e:	b4 fe       	sbrs	r11, 4
     d80:	0d c0       	rjmp	.+26     	; 0xd9c <vfprintf+0x272>
     d82:	fb 2d       	mov	r31, r11
     d84:	f4 60       	ori	r31, 0x04	; 4
     d86:	bf 2e       	mov	r11, r31
     d88:	09 c0       	rjmp	.+18     	; 0xd9c <vfprintf+0x272>
     d8a:	34 fe       	sbrs	r3, 4
     d8c:	0a c0       	rjmp	.+20     	; 0xda2 <vfprintf+0x278>
     d8e:	29 2f       	mov	r18, r25
     d90:	26 60       	ori	r18, 0x06	; 6
     d92:	b2 2e       	mov	r11, r18
     d94:	06 c0       	rjmp	.+12     	; 0xda2 <vfprintf+0x278>
     d96:	28 e0       	ldi	r18, 0x08	; 8
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	05 c0       	rjmp	.+10     	; 0xda6 <vfprintf+0x27c>
     d9c:	20 e1       	ldi	r18, 0x10	; 16
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	02 c0       	rjmp	.+4      	; 0xda6 <vfprintf+0x27c>
     da2:	20 e1       	ldi	r18, 0x10	; 16
     da4:	32 e0       	ldi	r19, 0x02	; 2
     da6:	f8 01       	movw	r30, r16
     da8:	b7 fe       	sbrs	r11, 7
     daa:	07 c0       	rjmp	.+14     	; 0xdba <vfprintf+0x290>
     dac:	60 81       	ld	r22, Z
     dae:	71 81       	ldd	r23, Z+1	; 0x01
     db0:	82 81       	ldd	r24, Z+2	; 0x02
     db2:	93 81       	ldd	r25, Z+3	; 0x03
     db4:	0c 5f       	subi	r16, 0xFC	; 252
     db6:	1f 4f       	sbci	r17, 0xFF	; 255
     db8:	06 c0       	rjmp	.+12     	; 0xdc6 <vfprintf+0x29c>
     dba:	60 81       	ld	r22, Z
     dbc:	71 81       	ldd	r23, Z+1	; 0x01
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	0e 5f       	subi	r16, 0xFE	; 254
     dc4:	1f 4f       	sbci	r17, 0xFF	; 255
     dc6:	a3 01       	movw	r20, r6
     dc8:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <__ultoa_invert>
     dcc:	88 2e       	mov	r8, r24
     dce:	86 18       	sub	r8, r6
     dd0:	fb 2d       	mov	r31, r11
     dd2:	ff 77       	andi	r31, 0x7F	; 127
     dd4:	3f 2e       	mov	r3, r31
     dd6:	36 fe       	sbrs	r3, 6
     dd8:	0d c0       	rjmp	.+26     	; 0xdf4 <vfprintf+0x2ca>
     dda:	23 2d       	mov	r18, r3
     ddc:	2e 7f       	andi	r18, 0xFE	; 254
     dde:	a2 2e       	mov	r10, r18
     de0:	89 14       	cp	r8, r9
     de2:	58 f4       	brcc	.+22     	; 0xdfa <vfprintf+0x2d0>
     de4:	34 fe       	sbrs	r3, 4
     de6:	0b c0       	rjmp	.+22     	; 0xdfe <vfprintf+0x2d4>
     de8:	32 fc       	sbrc	r3, 2
     dea:	09 c0       	rjmp	.+18     	; 0xdfe <vfprintf+0x2d4>
     dec:	83 2d       	mov	r24, r3
     dee:	8e 7e       	andi	r24, 0xEE	; 238
     df0:	a8 2e       	mov	r10, r24
     df2:	05 c0       	rjmp	.+10     	; 0xdfe <vfprintf+0x2d4>
     df4:	b8 2c       	mov	r11, r8
     df6:	a3 2c       	mov	r10, r3
     df8:	03 c0       	rjmp	.+6      	; 0xe00 <vfprintf+0x2d6>
     dfa:	b8 2c       	mov	r11, r8
     dfc:	01 c0       	rjmp	.+2      	; 0xe00 <vfprintf+0x2d6>
     dfe:	b9 2c       	mov	r11, r9
     e00:	a4 fe       	sbrs	r10, 4
     e02:	0f c0       	rjmp	.+30     	; 0xe22 <vfprintf+0x2f8>
     e04:	fe 01       	movw	r30, r28
     e06:	e8 0d       	add	r30, r8
     e08:	f1 1d       	adc	r31, r1
     e0a:	80 81       	ld	r24, Z
     e0c:	80 33       	cpi	r24, 0x30	; 48
     e0e:	21 f4       	brne	.+8      	; 0xe18 <vfprintf+0x2ee>
     e10:	9a 2d       	mov	r25, r10
     e12:	99 7e       	andi	r25, 0xE9	; 233
     e14:	a9 2e       	mov	r10, r25
     e16:	09 c0       	rjmp	.+18     	; 0xe2a <vfprintf+0x300>
     e18:	a2 fe       	sbrs	r10, 2
     e1a:	06 c0       	rjmp	.+12     	; 0xe28 <vfprintf+0x2fe>
     e1c:	b3 94       	inc	r11
     e1e:	b3 94       	inc	r11
     e20:	04 c0       	rjmp	.+8      	; 0xe2a <vfprintf+0x300>
     e22:	8a 2d       	mov	r24, r10
     e24:	86 78       	andi	r24, 0x86	; 134
     e26:	09 f0       	breq	.+2      	; 0xe2a <vfprintf+0x300>
     e28:	b3 94       	inc	r11
     e2a:	a3 fc       	sbrc	r10, 3
     e2c:	11 c0       	rjmp	.+34     	; 0xe50 <vfprintf+0x326>
     e2e:	a0 fe       	sbrs	r10, 0
     e30:	06 c0       	rjmp	.+12     	; 0xe3e <vfprintf+0x314>
     e32:	b2 14       	cp	r11, r2
     e34:	88 f4       	brcc	.+34     	; 0xe58 <vfprintf+0x32e>
     e36:	28 0c       	add	r2, r8
     e38:	92 2c       	mov	r9, r2
     e3a:	9b 18       	sub	r9, r11
     e3c:	0e c0       	rjmp	.+28     	; 0xe5a <vfprintf+0x330>
     e3e:	b2 14       	cp	r11, r2
     e40:	60 f4       	brcc	.+24     	; 0xe5a <vfprintf+0x330>
     e42:	b6 01       	movw	r22, r12
     e44:	80 e2       	ldi	r24, 0x20	; 32
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	0e 94 be 09 	call	0x137c	; 0x137c <fputc>
     e4c:	b3 94       	inc	r11
     e4e:	f7 cf       	rjmp	.-18     	; 0xe3e <vfprintf+0x314>
     e50:	b2 14       	cp	r11, r2
     e52:	18 f4       	brcc	.+6      	; 0xe5a <vfprintf+0x330>
     e54:	2b 18       	sub	r2, r11
     e56:	02 c0       	rjmp	.+4      	; 0xe5c <vfprintf+0x332>
     e58:	98 2c       	mov	r9, r8
     e5a:	21 2c       	mov	r2, r1
     e5c:	a4 fe       	sbrs	r10, 4
     e5e:	10 c0       	rjmp	.+32     	; 0xe80 <vfprintf+0x356>
     e60:	b6 01       	movw	r22, r12
     e62:	80 e3       	ldi	r24, 0x30	; 48
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	0e 94 be 09 	call	0x137c	; 0x137c <fputc>
     e6a:	a2 fe       	sbrs	r10, 2
     e6c:	17 c0       	rjmp	.+46     	; 0xe9c <vfprintf+0x372>
     e6e:	a1 fc       	sbrc	r10, 1
     e70:	03 c0       	rjmp	.+6      	; 0xe78 <vfprintf+0x34e>
     e72:	88 e7       	ldi	r24, 0x78	; 120
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	02 c0       	rjmp	.+4      	; 0xe7c <vfprintf+0x352>
     e78:	88 e5       	ldi	r24, 0x58	; 88
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	b6 01       	movw	r22, r12
     e7e:	0c c0       	rjmp	.+24     	; 0xe98 <vfprintf+0x36e>
     e80:	8a 2d       	mov	r24, r10
     e82:	86 78       	andi	r24, 0x86	; 134
     e84:	59 f0       	breq	.+22     	; 0xe9c <vfprintf+0x372>
     e86:	a1 fe       	sbrs	r10, 1
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <vfprintf+0x364>
     e8a:	8b e2       	ldi	r24, 0x2B	; 43
     e8c:	01 c0       	rjmp	.+2      	; 0xe90 <vfprintf+0x366>
     e8e:	80 e2       	ldi	r24, 0x20	; 32
     e90:	a7 fc       	sbrc	r10, 7
     e92:	8d e2       	ldi	r24, 0x2D	; 45
     e94:	b6 01       	movw	r22, r12
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	0e 94 be 09 	call	0x137c	; 0x137c <fputc>
     e9c:	89 14       	cp	r8, r9
     e9e:	38 f4       	brcc	.+14     	; 0xeae <vfprintf+0x384>
     ea0:	b6 01       	movw	r22, r12
     ea2:	80 e3       	ldi	r24, 0x30	; 48
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	0e 94 be 09 	call	0x137c	; 0x137c <fputc>
     eaa:	9a 94       	dec	r9
     eac:	f7 cf       	rjmp	.-18     	; 0xe9c <vfprintf+0x372>
     eae:	8a 94       	dec	r8
     eb0:	f3 01       	movw	r30, r6
     eb2:	e8 0d       	add	r30, r8
     eb4:	f1 1d       	adc	r31, r1
     eb6:	80 81       	ld	r24, Z
     eb8:	b6 01       	movw	r22, r12
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	0e 94 be 09 	call	0x137c	; 0x137c <fputc>
     ec0:	81 10       	cpse	r8, r1
     ec2:	f5 cf       	rjmp	.-22     	; 0xeae <vfprintf+0x384>
     ec4:	22 20       	and	r2, r2
     ec6:	09 f4       	brne	.+2      	; 0xeca <vfprintf+0x3a0>
     ec8:	42 ce       	rjmp	.-892    	; 0xb4e <vfprintf+0x24>
     eca:	b6 01       	movw	r22, r12
     ecc:	80 e2       	ldi	r24, 0x20	; 32
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	0e 94 be 09 	call	0x137c	; 0x137c <fputc>
     ed4:	2a 94       	dec	r2
     ed6:	f6 cf       	rjmp	.-20     	; 0xec4 <vfprintf+0x39a>
     ed8:	f6 01       	movw	r30, r12
     eda:	86 81       	ldd	r24, Z+6	; 0x06
     edc:	97 81       	ldd	r25, Z+7	; 0x07
     ede:	02 c0       	rjmp	.+4      	; 0xee4 <vfprintf+0x3ba>
     ee0:	8f ef       	ldi	r24, 0xFF	; 255
     ee2:	9f ef       	ldi	r25, 0xFF	; 255
     ee4:	2b 96       	adiw	r28, 0x0b	; 11
     ee6:	e2 e1       	ldi	r30, 0x12	; 18
     ee8:	0c 94 74 0a 	jmp	0x14e8	; 0x14e8 <__epilogue_restores__>

00000eec <dtoa_prf>:
     eec:	a9 e0       	ldi	r26, 0x09	; 9
     eee:	b0 e0       	ldi	r27, 0x00	; 0
     ef0:	ec e7       	ldi	r30, 0x7C	; 124
     ef2:	f7 e0       	ldi	r31, 0x07	; 7
     ef4:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__prologue_saves__+0xc>
     ef8:	6a 01       	movw	r12, r20
     efa:	12 2f       	mov	r17, r18
     efc:	b0 2e       	mov	r11, r16
     efe:	2b e3       	ldi	r18, 0x3B	; 59
     f00:	20 17       	cp	r18, r16
     f02:	20 f0       	brcs	.+8      	; 0xf0c <dtoa_prf+0x20>
     f04:	ff 24       	eor	r15, r15
     f06:	f3 94       	inc	r15
     f08:	f0 0e       	add	r15, r16
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <dtoa_prf+0x24>
     f0c:	2c e3       	ldi	r18, 0x3C	; 60
     f0e:	f2 2e       	mov	r15, r18
     f10:	0f 2d       	mov	r16, r15
     f12:	27 e0       	ldi	r18, 0x07	; 7
     f14:	ae 01       	movw	r20, r28
     f16:	4f 5f       	subi	r20, 0xFF	; 255
     f18:	5f 4f       	sbci	r21, 0xFF	; 255
     f1a:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <__ftoa_engine>
     f1e:	bc 01       	movw	r22, r24
     f20:	49 81       	ldd	r20, Y+1	; 0x01
     f22:	84 2f       	mov	r24, r20
     f24:	89 70       	andi	r24, 0x09	; 9
     f26:	81 30       	cpi	r24, 0x01	; 1
     f28:	31 f0       	breq	.+12     	; 0xf36 <dtoa_prf+0x4a>
     f2a:	e1 fc       	sbrc	r14, 1
     f2c:	06 c0       	rjmp	.+12     	; 0xf3a <dtoa_prf+0x4e>
     f2e:	e0 fe       	sbrs	r14, 0
     f30:	06 c0       	rjmp	.+12     	; 0xf3e <dtoa_prf+0x52>
     f32:	90 e2       	ldi	r25, 0x20	; 32
     f34:	05 c0       	rjmp	.+10     	; 0xf40 <dtoa_prf+0x54>
     f36:	9d e2       	ldi	r25, 0x2D	; 45
     f38:	03 c0       	rjmp	.+6      	; 0xf40 <dtoa_prf+0x54>
     f3a:	9b e2       	ldi	r25, 0x2B	; 43
     f3c:	01 c0       	rjmp	.+2      	; 0xf40 <dtoa_prf+0x54>
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	5e 2d       	mov	r21, r14
     f42:	50 71       	andi	r21, 0x10	; 16
     f44:	43 ff       	sbrs	r20, 3
     f46:	3c c0       	rjmp	.+120    	; 0xfc0 <dtoa_prf+0xd4>
     f48:	91 11       	cpse	r25, r1
     f4a:	02 c0       	rjmp	.+4      	; 0xf50 <dtoa_prf+0x64>
     f4c:	83 e0       	ldi	r24, 0x03	; 3
     f4e:	01 c0       	rjmp	.+2      	; 0xf52 <dtoa_prf+0x66>
     f50:	84 e0       	ldi	r24, 0x04	; 4
     f52:	81 17       	cp	r24, r17
     f54:	18 f4       	brcc	.+6      	; 0xf5c <dtoa_prf+0x70>
     f56:	21 2f       	mov	r18, r17
     f58:	28 1b       	sub	r18, r24
     f5a:	01 c0       	rjmp	.+2      	; 0xf5e <dtoa_prf+0x72>
     f5c:	20 e0       	ldi	r18, 0x00	; 0
     f5e:	51 11       	cpse	r21, r1
     f60:	0b c0       	rjmp	.+22     	; 0xf78 <dtoa_prf+0x8c>
     f62:	f6 01       	movw	r30, r12
     f64:	82 2f       	mov	r24, r18
     f66:	30 e2       	ldi	r19, 0x20	; 32
     f68:	88 23       	and	r24, r24
     f6a:	19 f0       	breq	.+6      	; 0xf72 <dtoa_prf+0x86>
     f6c:	31 93       	st	Z+, r19
     f6e:	81 50       	subi	r24, 0x01	; 1
     f70:	fb cf       	rjmp	.-10     	; 0xf68 <dtoa_prf+0x7c>
     f72:	c2 0e       	add	r12, r18
     f74:	d1 1c       	adc	r13, r1
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	99 23       	and	r25, r25
     f7a:	29 f0       	breq	.+10     	; 0xf86 <dtoa_prf+0x9a>
     f7c:	d6 01       	movw	r26, r12
     f7e:	9c 93       	st	X, r25
     f80:	f6 01       	movw	r30, r12
     f82:	31 96       	adiw	r30, 0x01	; 1
     f84:	6f 01       	movw	r12, r30
     f86:	c6 01       	movw	r24, r12
     f88:	03 96       	adiw	r24, 0x03	; 3
     f8a:	e2 fe       	sbrs	r14, 2
     f8c:	0a c0       	rjmp	.+20     	; 0xfa2 <dtoa_prf+0xb6>
     f8e:	3e e4       	ldi	r19, 0x4E	; 78
     f90:	d6 01       	movw	r26, r12
     f92:	3c 93       	st	X, r19
     f94:	41 e4       	ldi	r20, 0x41	; 65
     f96:	11 96       	adiw	r26, 0x01	; 1
     f98:	4c 93       	st	X, r20
     f9a:	11 97       	sbiw	r26, 0x01	; 1
     f9c:	12 96       	adiw	r26, 0x02	; 2
     f9e:	3c 93       	st	X, r19
     fa0:	06 c0       	rjmp	.+12     	; 0xfae <dtoa_prf+0xc2>
     fa2:	3e e6       	ldi	r19, 0x6E	; 110
     fa4:	f6 01       	movw	r30, r12
     fa6:	30 83       	st	Z, r19
     fa8:	41 e6       	ldi	r20, 0x61	; 97
     faa:	41 83       	std	Z+1, r20	; 0x01
     fac:	32 83       	std	Z+2, r19	; 0x02
     fae:	fc 01       	movw	r30, r24
     fb0:	32 2f       	mov	r19, r18
     fb2:	40 e2       	ldi	r20, 0x20	; 32
     fb4:	33 23       	and	r19, r19
     fb6:	09 f4       	brne	.+2      	; 0xfba <dtoa_prf+0xce>
     fb8:	42 c0       	rjmp	.+132    	; 0x103e <dtoa_prf+0x152>
     fba:	41 93       	st	Z+, r20
     fbc:	31 50       	subi	r19, 0x01	; 1
     fbe:	fa cf       	rjmp	.-12     	; 0xfb4 <dtoa_prf+0xc8>
     fc0:	42 ff       	sbrs	r20, 2
     fc2:	44 c0       	rjmp	.+136    	; 0x104c <dtoa_prf+0x160>
     fc4:	91 11       	cpse	r25, r1
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <dtoa_prf+0xe0>
     fc8:	83 e0       	ldi	r24, 0x03	; 3
     fca:	01 c0       	rjmp	.+2      	; 0xfce <dtoa_prf+0xe2>
     fcc:	84 e0       	ldi	r24, 0x04	; 4
     fce:	81 17       	cp	r24, r17
     fd0:	18 f4       	brcc	.+6      	; 0xfd8 <dtoa_prf+0xec>
     fd2:	21 2f       	mov	r18, r17
     fd4:	28 1b       	sub	r18, r24
     fd6:	01 c0       	rjmp	.+2      	; 0xfda <dtoa_prf+0xee>
     fd8:	20 e0       	ldi	r18, 0x00	; 0
     fda:	51 11       	cpse	r21, r1
     fdc:	0b c0       	rjmp	.+22     	; 0xff4 <dtoa_prf+0x108>
     fde:	f6 01       	movw	r30, r12
     fe0:	82 2f       	mov	r24, r18
     fe2:	30 e2       	ldi	r19, 0x20	; 32
     fe4:	88 23       	and	r24, r24
     fe6:	19 f0       	breq	.+6      	; 0xfee <dtoa_prf+0x102>
     fe8:	31 93       	st	Z+, r19
     fea:	81 50       	subi	r24, 0x01	; 1
     fec:	fb cf       	rjmp	.-10     	; 0xfe4 <dtoa_prf+0xf8>
     fee:	c2 0e       	add	r12, r18
     ff0:	d1 1c       	adc	r13, r1
     ff2:	20 e0       	ldi	r18, 0x00	; 0
     ff4:	99 23       	and	r25, r25
     ff6:	29 f0       	breq	.+10     	; 0x1002 <dtoa_prf+0x116>
     ff8:	d6 01       	movw	r26, r12
     ffa:	9c 93       	st	X, r25
     ffc:	f6 01       	movw	r30, r12
     ffe:	31 96       	adiw	r30, 0x01	; 1
    1000:	6f 01       	movw	r12, r30
    1002:	c6 01       	movw	r24, r12
    1004:	03 96       	adiw	r24, 0x03	; 3
    1006:	e2 fe       	sbrs	r14, 2
    1008:	0b c0       	rjmp	.+22     	; 0x1020 <dtoa_prf+0x134>
    100a:	39 e4       	ldi	r19, 0x49	; 73
    100c:	d6 01       	movw	r26, r12
    100e:	3c 93       	st	X, r19
    1010:	3e e4       	ldi	r19, 0x4E	; 78
    1012:	11 96       	adiw	r26, 0x01	; 1
    1014:	3c 93       	st	X, r19
    1016:	11 97       	sbiw	r26, 0x01	; 1
    1018:	36 e4       	ldi	r19, 0x46	; 70
    101a:	12 96       	adiw	r26, 0x02	; 2
    101c:	3c 93       	st	X, r19
    101e:	07 c0       	rjmp	.+14     	; 0x102e <dtoa_prf+0x142>
    1020:	39 e6       	ldi	r19, 0x69	; 105
    1022:	f6 01       	movw	r30, r12
    1024:	30 83       	st	Z, r19
    1026:	3e e6       	ldi	r19, 0x6E	; 110
    1028:	31 83       	std	Z+1, r19	; 0x01
    102a:	36 e6       	ldi	r19, 0x66	; 102
    102c:	32 83       	std	Z+2, r19	; 0x02
    102e:	fc 01       	movw	r30, r24
    1030:	32 2f       	mov	r19, r18
    1032:	40 e2       	ldi	r20, 0x20	; 32
    1034:	33 23       	and	r19, r19
    1036:	19 f0       	breq	.+6      	; 0x103e <dtoa_prf+0x152>
    1038:	41 93       	st	Z+, r20
    103a:	31 50       	subi	r19, 0x01	; 1
    103c:	fb cf       	rjmp	.-10     	; 0x1034 <dtoa_prf+0x148>
    103e:	fc 01       	movw	r30, r24
    1040:	e2 0f       	add	r30, r18
    1042:	f1 1d       	adc	r31, r1
    1044:	10 82       	st	Z, r1
    1046:	8e ef       	ldi	r24, 0xFE	; 254
    1048:	9f ef       	ldi	r25, 0xFF	; 255
    104a:	a6 c0       	rjmp	.+332    	; 0x1198 <dtoa_prf+0x2ac>
    104c:	21 e0       	ldi	r18, 0x01	; 1
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	91 11       	cpse	r25, r1
    1052:	02 c0       	rjmp	.+4      	; 0x1058 <dtoa_prf+0x16c>
    1054:	20 e0       	ldi	r18, 0x00	; 0
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	16 16       	cp	r1, r22
    105a:	17 06       	cpc	r1, r23
    105c:	1c f4       	brge	.+6      	; 0x1064 <dtoa_prf+0x178>
    105e:	fb 01       	movw	r30, r22
    1060:	31 96       	adiw	r30, 0x01	; 1
    1062:	02 c0       	rjmp	.+4      	; 0x1068 <dtoa_prf+0x17c>
    1064:	e1 e0       	ldi	r30, 0x01	; 1
    1066:	f0 e0       	ldi	r31, 0x00	; 0
    1068:	2e 0f       	add	r18, r30
    106a:	3f 1f       	adc	r19, r31
    106c:	bb 20       	and	r11, r11
    106e:	21 f0       	breq	.+8      	; 0x1078 <dtoa_prf+0x18c>
    1070:	eb 2d       	mov	r30, r11
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	31 96       	adiw	r30, 0x01	; 1
    1076:	02 c0       	rjmp	.+4      	; 0x107c <dtoa_prf+0x190>
    1078:	e0 e0       	ldi	r30, 0x00	; 0
    107a:	f0 e0       	ldi	r31, 0x00	; 0
    107c:	2e 0f       	add	r18, r30
    107e:	3f 1f       	adc	r19, r31
    1080:	e1 2f       	mov	r30, r17
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	2e 17       	cp	r18, r30
    1086:	3f 07       	cpc	r19, r31
    1088:	1c f4       	brge	.+6      	; 0x1090 <dtoa_prf+0x1a4>
    108a:	12 1b       	sub	r17, r18
    108c:	21 2f       	mov	r18, r17
    108e:	01 c0       	rjmp	.+2      	; 0x1092 <dtoa_prf+0x1a6>
    1090:	20 e0       	ldi	r18, 0x00	; 0
    1092:	8e 2d       	mov	r24, r14
    1094:	88 71       	andi	r24, 0x18	; 24
    1096:	59 f4       	brne	.+22     	; 0x10ae <dtoa_prf+0x1c2>
    1098:	f6 01       	movw	r30, r12
    109a:	82 2f       	mov	r24, r18
    109c:	30 e2       	ldi	r19, 0x20	; 32
    109e:	88 23       	and	r24, r24
    10a0:	19 f0       	breq	.+6      	; 0x10a8 <dtoa_prf+0x1bc>
    10a2:	31 93       	st	Z+, r19
    10a4:	81 50       	subi	r24, 0x01	; 1
    10a6:	fb cf       	rjmp	.-10     	; 0x109e <dtoa_prf+0x1b2>
    10a8:	c2 0e       	add	r12, r18
    10aa:	d1 1c       	adc	r13, r1
    10ac:	20 e0       	ldi	r18, 0x00	; 0
    10ae:	99 23       	and	r25, r25
    10b0:	29 f0       	breq	.+10     	; 0x10bc <dtoa_prf+0x1d0>
    10b2:	d6 01       	movw	r26, r12
    10b4:	9c 93       	st	X, r25
    10b6:	f6 01       	movw	r30, r12
    10b8:	31 96       	adiw	r30, 0x01	; 1
    10ba:	6f 01       	movw	r12, r30
    10bc:	51 11       	cpse	r21, r1
    10be:	0b c0       	rjmp	.+22     	; 0x10d6 <dtoa_prf+0x1ea>
    10c0:	f6 01       	movw	r30, r12
    10c2:	82 2f       	mov	r24, r18
    10c4:	90 e3       	ldi	r25, 0x30	; 48
    10c6:	88 23       	and	r24, r24
    10c8:	19 f0       	breq	.+6      	; 0x10d0 <dtoa_prf+0x1e4>
    10ca:	91 93       	st	Z+, r25
    10cc:	81 50       	subi	r24, 0x01	; 1
    10ce:	fb cf       	rjmp	.-10     	; 0x10c6 <dtoa_prf+0x1da>
    10d0:	c2 0e       	add	r12, r18
    10d2:	d1 1c       	adc	r13, r1
    10d4:	20 e0       	ldi	r18, 0x00	; 0
    10d6:	0f 2d       	mov	r16, r15
    10d8:	06 0f       	add	r16, r22
    10da:	9a 81       	ldd	r25, Y+2	; 0x02
    10dc:	34 2f       	mov	r19, r20
    10de:	30 71       	andi	r19, 0x10	; 16
    10e0:	44 ff       	sbrs	r20, 4
    10e2:	03 c0       	rjmp	.+6      	; 0x10ea <dtoa_prf+0x1fe>
    10e4:	91 33       	cpi	r25, 0x31	; 49
    10e6:	09 f4       	brne	.+2      	; 0x10ea <dtoa_prf+0x1fe>
    10e8:	01 50       	subi	r16, 0x01	; 1
    10ea:	10 16       	cp	r1, r16
    10ec:	24 f4       	brge	.+8      	; 0x10f6 <dtoa_prf+0x20a>
    10ee:	09 30       	cpi	r16, 0x09	; 9
    10f0:	18 f0       	brcs	.+6      	; 0x10f8 <dtoa_prf+0x20c>
    10f2:	08 e0       	ldi	r16, 0x08	; 8
    10f4:	01 c0       	rjmp	.+2      	; 0x10f8 <dtoa_prf+0x20c>
    10f6:	01 e0       	ldi	r16, 0x01	; 1
    10f8:	ab 01       	movw	r20, r22
    10fa:	77 ff       	sbrs	r23, 7
    10fc:	02 c0       	rjmp	.+4      	; 0x1102 <dtoa_prf+0x216>
    10fe:	40 e0       	ldi	r20, 0x00	; 0
    1100:	50 e0       	ldi	r21, 0x00	; 0
    1102:	fb 01       	movw	r30, r22
    1104:	e4 1b       	sub	r30, r20
    1106:	f5 0b       	sbc	r31, r21
    1108:	a1 e0       	ldi	r26, 0x01	; 1
    110a:	b0 e0       	ldi	r27, 0x00	; 0
    110c:	ac 0f       	add	r26, r28
    110e:	bd 1f       	adc	r27, r29
    1110:	ea 0f       	add	r30, r26
    1112:	fb 1f       	adc	r31, r27
    1114:	8e e2       	ldi	r24, 0x2E	; 46
    1116:	a8 2e       	mov	r10, r24
    1118:	4b 01       	movw	r8, r22
    111a:	80 1a       	sub	r8, r16
    111c:	91 08       	sbc	r9, r1
    111e:	0b 2d       	mov	r16, r11
    1120:	10 e0       	ldi	r17, 0x00	; 0
    1122:	11 95       	neg	r17
    1124:	01 95       	neg	r16
    1126:	11 09       	sbc	r17, r1
    1128:	4f 3f       	cpi	r20, 0xFF	; 255
    112a:	bf ef       	ldi	r27, 0xFF	; 255
    112c:	5b 07       	cpc	r21, r27
    112e:	21 f4       	brne	.+8      	; 0x1138 <dtoa_prf+0x24c>
    1130:	d6 01       	movw	r26, r12
    1132:	ac 92       	st	X, r10
    1134:	11 96       	adiw	r26, 0x01	; 1
    1136:	6d 01       	movw	r12, r26
    1138:	64 17       	cp	r22, r20
    113a:	75 07       	cpc	r23, r21
    113c:	2c f0       	brlt	.+10     	; 0x1148 <dtoa_prf+0x25c>
    113e:	84 16       	cp	r8, r20
    1140:	95 06       	cpc	r9, r21
    1142:	14 f4       	brge	.+4      	; 0x1148 <dtoa_prf+0x25c>
    1144:	81 81       	ldd	r24, Z+1	; 0x01
    1146:	01 c0       	rjmp	.+2      	; 0x114a <dtoa_prf+0x25e>
    1148:	80 e3       	ldi	r24, 0x30	; 48
    114a:	41 50       	subi	r20, 0x01	; 1
    114c:	51 09       	sbc	r21, r1
    114e:	31 96       	adiw	r30, 0x01	; 1
    1150:	d6 01       	movw	r26, r12
    1152:	11 96       	adiw	r26, 0x01	; 1
    1154:	7d 01       	movw	r14, r26
    1156:	40 17       	cp	r20, r16
    1158:	51 07       	cpc	r21, r17
    115a:	24 f0       	brlt	.+8      	; 0x1164 <dtoa_prf+0x278>
    115c:	d6 01       	movw	r26, r12
    115e:	8c 93       	st	X, r24
    1160:	67 01       	movw	r12, r14
    1162:	e2 cf       	rjmp	.-60     	; 0x1128 <dtoa_prf+0x23c>
    1164:	64 17       	cp	r22, r20
    1166:	75 07       	cpc	r23, r21
    1168:	39 f4       	brne	.+14     	; 0x1178 <dtoa_prf+0x28c>
    116a:	96 33       	cpi	r25, 0x36	; 54
    116c:	20 f4       	brcc	.+8      	; 0x1176 <dtoa_prf+0x28a>
    116e:	95 33       	cpi	r25, 0x35	; 53
    1170:	19 f4       	brne	.+6      	; 0x1178 <dtoa_prf+0x28c>
    1172:	31 11       	cpse	r19, r1
    1174:	01 c0       	rjmp	.+2      	; 0x1178 <dtoa_prf+0x28c>
    1176:	81 e3       	ldi	r24, 0x31	; 49
    1178:	f6 01       	movw	r30, r12
    117a:	80 83       	st	Z, r24
    117c:	f7 01       	movw	r30, r14
    117e:	82 2f       	mov	r24, r18
    1180:	90 e2       	ldi	r25, 0x20	; 32
    1182:	88 23       	and	r24, r24
    1184:	19 f0       	breq	.+6      	; 0x118c <dtoa_prf+0x2a0>
    1186:	91 93       	st	Z+, r25
    1188:	81 50       	subi	r24, 0x01	; 1
    118a:	fb cf       	rjmp	.-10     	; 0x1182 <dtoa_prf+0x296>
    118c:	f7 01       	movw	r30, r14
    118e:	e2 0f       	add	r30, r18
    1190:	f1 1d       	adc	r31, r1
    1192:	10 82       	st	Z, r1
    1194:	80 e0       	ldi	r24, 0x00	; 0
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	29 96       	adiw	r28, 0x09	; 9
    119a:	ec e0       	ldi	r30, 0x0C	; 12
    119c:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__epilogue_restores__+0xc>

000011a0 <__ftoa_engine>:
    11a0:	28 30       	cpi	r18, 0x08	; 8
    11a2:	08 f0       	brcs	.+2      	; 0x11a6 <__ftoa_engine+0x6>
    11a4:	27 e0       	ldi	r18, 0x07	; 7
    11a6:	33 27       	eor	r19, r19
    11a8:	da 01       	movw	r26, r20
    11aa:	99 0f       	add	r25, r25
    11ac:	31 1d       	adc	r19, r1
    11ae:	87 fd       	sbrc	r24, 7
    11b0:	91 60       	ori	r25, 0x01	; 1
    11b2:	00 96       	adiw	r24, 0x00	; 0
    11b4:	61 05       	cpc	r22, r1
    11b6:	71 05       	cpc	r23, r1
    11b8:	39 f4       	brne	.+14     	; 0x11c8 <__ftoa_engine+0x28>
    11ba:	32 60       	ori	r19, 0x02	; 2
    11bc:	2e 5f       	subi	r18, 0xFE	; 254
    11be:	3d 93       	st	X+, r19
    11c0:	30 e3       	ldi	r19, 0x30	; 48
    11c2:	2a 95       	dec	r18
    11c4:	e1 f7       	brne	.-8      	; 0x11be <__ftoa_engine+0x1e>
    11c6:	08 95       	ret
    11c8:	9f 3f       	cpi	r25, 0xFF	; 255
    11ca:	30 f0       	brcs	.+12     	; 0x11d8 <__ftoa_engine+0x38>
    11cc:	80 38       	cpi	r24, 0x80	; 128
    11ce:	71 05       	cpc	r23, r1
    11d0:	61 05       	cpc	r22, r1
    11d2:	09 f0       	breq	.+2      	; 0x11d6 <__ftoa_engine+0x36>
    11d4:	3c 5f       	subi	r19, 0xFC	; 252
    11d6:	3c 5f       	subi	r19, 0xFC	; 252
    11d8:	3d 93       	st	X+, r19
    11da:	91 30       	cpi	r25, 0x01	; 1
    11dc:	08 f0       	brcs	.+2      	; 0x11e0 <__ftoa_engine+0x40>
    11de:	80 68       	ori	r24, 0x80	; 128
    11e0:	91 1d       	adc	r25, r1
    11e2:	df 93       	push	r29
    11e4:	cf 93       	push	r28
    11e6:	1f 93       	push	r17
    11e8:	0f 93       	push	r16
    11ea:	ff 92       	push	r15
    11ec:	ef 92       	push	r14
    11ee:	19 2f       	mov	r17, r25
    11f0:	98 7f       	andi	r25, 0xF8	; 248
    11f2:	96 95       	lsr	r25
    11f4:	e9 2f       	mov	r30, r25
    11f6:	96 95       	lsr	r25
    11f8:	96 95       	lsr	r25
    11fa:	e9 0f       	add	r30, r25
    11fc:	ff 27       	eor	r31, r31
    11fe:	e2 55       	subi	r30, 0x52	; 82
    1200:	ff 4f       	sbci	r31, 0xFF	; 255
    1202:	99 27       	eor	r25, r25
    1204:	33 27       	eor	r19, r19
    1206:	ee 24       	eor	r14, r14
    1208:	ff 24       	eor	r15, r15
    120a:	a7 01       	movw	r20, r14
    120c:	e7 01       	movw	r28, r14
    120e:	05 90       	lpm	r0, Z+
    1210:	08 94       	sec
    1212:	07 94       	ror	r0
    1214:	28 f4       	brcc	.+10     	; 0x1220 <__ftoa_engine+0x80>
    1216:	36 0f       	add	r19, r22
    1218:	e7 1e       	adc	r14, r23
    121a:	f8 1e       	adc	r15, r24
    121c:	49 1f       	adc	r20, r25
    121e:	51 1d       	adc	r21, r1
    1220:	66 0f       	add	r22, r22
    1222:	77 1f       	adc	r23, r23
    1224:	88 1f       	adc	r24, r24
    1226:	99 1f       	adc	r25, r25
    1228:	06 94       	lsr	r0
    122a:	a1 f7       	brne	.-24     	; 0x1214 <__ftoa_engine+0x74>
    122c:	05 90       	lpm	r0, Z+
    122e:	07 94       	ror	r0
    1230:	28 f4       	brcc	.+10     	; 0x123c <__ftoa_engine+0x9c>
    1232:	e7 0e       	add	r14, r23
    1234:	f8 1e       	adc	r15, r24
    1236:	49 1f       	adc	r20, r25
    1238:	56 1f       	adc	r21, r22
    123a:	c1 1d       	adc	r28, r1
    123c:	77 0f       	add	r23, r23
    123e:	88 1f       	adc	r24, r24
    1240:	99 1f       	adc	r25, r25
    1242:	66 1f       	adc	r22, r22
    1244:	06 94       	lsr	r0
    1246:	a1 f7       	brne	.-24     	; 0x1230 <__ftoa_engine+0x90>
    1248:	05 90       	lpm	r0, Z+
    124a:	07 94       	ror	r0
    124c:	28 f4       	brcc	.+10     	; 0x1258 <__ftoa_engine+0xb8>
    124e:	f8 0e       	add	r15, r24
    1250:	49 1f       	adc	r20, r25
    1252:	56 1f       	adc	r21, r22
    1254:	c7 1f       	adc	r28, r23
    1256:	d1 1d       	adc	r29, r1
    1258:	88 0f       	add	r24, r24
    125a:	99 1f       	adc	r25, r25
    125c:	66 1f       	adc	r22, r22
    125e:	77 1f       	adc	r23, r23
    1260:	06 94       	lsr	r0
    1262:	a1 f7       	brne	.-24     	; 0x124c <__ftoa_engine+0xac>
    1264:	05 90       	lpm	r0, Z+
    1266:	07 94       	ror	r0
    1268:	20 f4       	brcc	.+8      	; 0x1272 <__ftoa_engine+0xd2>
    126a:	49 0f       	add	r20, r25
    126c:	56 1f       	adc	r21, r22
    126e:	c7 1f       	adc	r28, r23
    1270:	d8 1f       	adc	r29, r24
    1272:	99 0f       	add	r25, r25
    1274:	66 1f       	adc	r22, r22
    1276:	77 1f       	adc	r23, r23
    1278:	88 1f       	adc	r24, r24
    127a:	06 94       	lsr	r0
    127c:	a9 f7       	brne	.-22     	; 0x1268 <__ftoa_engine+0xc8>
    127e:	84 91       	lpm	r24, Z
    1280:	10 95       	com	r17
    1282:	17 70       	andi	r17, 0x07	; 7
    1284:	41 f0       	breq	.+16     	; 0x1296 <__ftoa_engine+0xf6>
    1286:	d6 95       	lsr	r29
    1288:	c7 95       	ror	r28
    128a:	57 95       	ror	r21
    128c:	47 95       	ror	r20
    128e:	f7 94       	ror	r15
    1290:	e7 94       	ror	r14
    1292:	1a 95       	dec	r17
    1294:	c1 f7       	brne	.-16     	; 0x1286 <__ftoa_engine+0xe6>
    1296:	e4 e5       	ldi	r30, 0x54	; 84
    1298:	f0 e0       	ldi	r31, 0x00	; 0
    129a:	68 94       	set
    129c:	15 90       	lpm	r1, Z+
    129e:	15 91       	lpm	r17, Z+
    12a0:	35 91       	lpm	r19, Z+
    12a2:	65 91       	lpm	r22, Z+
    12a4:	95 91       	lpm	r25, Z+
    12a6:	05 90       	lpm	r0, Z+
    12a8:	7f e2       	ldi	r23, 0x2F	; 47
    12aa:	73 95       	inc	r23
    12ac:	e1 18       	sub	r14, r1
    12ae:	f1 0a       	sbc	r15, r17
    12b0:	43 0b       	sbc	r20, r19
    12b2:	56 0b       	sbc	r21, r22
    12b4:	c9 0b       	sbc	r28, r25
    12b6:	d0 09       	sbc	r29, r0
    12b8:	c0 f7       	brcc	.-16     	; 0x12aa <__ftoa_engine+0x10a>
    12ba:	e1 0c       	add	r14, r1
    12bc:	f1 1e       	adc	r15, r17
    12be:	43 1f       	adc	r20, r19
    12c0:	56 1f       	adc	r21, r22
    12c2:	c9 1f       	adc	r28, r25
    12c4:	d0 1d       	adc	r29, r0
    12c6:	7e f4       	brtc	.+30     	; 0x12e6 <__ftoa_engine+0x146>
    12c8:	70 33       	cpi	r23, 0x30	; 48
    12ca:	11 f4       	brne	.+4      	; 0x12d0 <__ftoa_engine+0x130>
    12cc:	8a 95       	dec	r24
    12ce:	e6 cf       	rjmp	.-52     	; 0x129c <__ftoa_engine+0xfc>
    12d0:	e8 94       	clt
    12d2:	01 50       	subi	r16, 0x01	; 1
    12d4:	30 f0       	brcs	.+12     	; 0x12e2 <__ftoa_engine+0x142>
    12d6:	08 0f       	add	r16, r24
    12d8:	0a f4       	brpl	.+2      	; 0x12dc <__ftoa_engine+0x13c>
    12da:	00 27       	eor	r16, r16
    12dc:	02 17       	cp	r16, r18
    12de:	08 f4       	brcc	.+2      	; 0x12e2 <__ftoa_engine+0x142>
    12e0:	20 2f       	mov	r18, r16
    12e2:	23 95       	inc	r18
    12e4:	02 2f       	mov	r16, r18
    12e6:	7a 33       	cpi	r23, 0x3A	; 58
    12e8:	28 f0       	brcs	.+10     	; 0x12f4 <__ftoa_engine+0x154>
    12ea:	79 e3       	ldi	r23, 0x39	; 57
    12ec:	7d 93       	st	X+, r23
    12ee:	2a 95       	dec	r18
    12f0:	e9 f7       	brne	.-6      	; 0x12ec <__ftoa_engine+0x14c>
    12f2:	10 c0       	rjmp	.+32     	; 0x1314 <__ftoa_engine+0x174>
    12f4:	7d 93       	st	X+, r23
    12f6:	2a 95       	dec	r18
    12f8:	89 f6       	brne	.-94     	; 0x129c <__ftoa_engine+0xfc>
    12fa:	06 94       	lsr	r0
    12fc:	97 95       	ror	r25
    12fe:	67 95       	ror	r22
    1300:	37 95       	ror	r19
    1302:	17 95       	ror	r17
    1304:	17 94       	ror	r1
    1306:	e1 18       	sub	r14, r1
    1308:	f1 0a       	sbc	r15, r17
    130a:	43 0b       	sbc	r20, r19
    130c:	56 0b       	sbc	r21, r22
    130e:	c9 0b       	sbc	r28, r25
    1310:	d0 09       	sbc	r29, r0
    1312:	98 f0       	brcs	.+38     	; 0x133a <__ftoa_engine+0x19a>
    1314:	23 95       	inc	r18
    1316:	7e 91       	ld	r23, -X
    1318:	73 95       	inc	r23
    131a:	7a 33       	cpi	r23, 0x3A	; 58
    131c:	08 f0       	brcs	.+2      	; 0x1320 <__ftoa_engine+0x180>
    131e:	70 e3       	ldi	r23, 0x30	; 48
    1320:	7c 93       	st	X, r23
    1322:	20 13       	cpse	r18, r16
    1324:	b8 f7       	brcc	.-18     	; 0x1314 <__ftoa_engine+0x174>
    1326:	7e 91       	ld	r23, -X
    1328:	70 61       	ori	r23, 0x10	; 16
    132a:	7d 93       	st	X+, r23
    132c:	30 f0       	brcs	.+12     	; 0x133a <__ftoa_engine+0x19a>
    132e:	83 95       	inc	r24
    1330:	71 e3       	ldi	r23, 0x31	; 49
    1332:	7d 93       	st	X+, r23
    1334:	70 e3       	ldi	r23, 0x30	; 48
    1336:	2a 95       	dec	r18
    1338:	e1 f7       	brne	.-8      	; 0x1332 <__ftoa_engine+0x192>
    133a:	11 24       	eor	r1, r1
    133c:	ef 90       	pop	r14
    133e:	ff 90       	pop	r15
    1340:	0f 91       	pop	r16
    1342:	1f 91       	pop	r17
    1344:	cf 91       	pop	r28
    1346:	df 91       	pop	r29
    1348:	99 27       	eor	r25, r25
    134a:	87 fd       	sbrc	r24, 7
    134c:	90 95       	com	r25
    134e:	08 95       	ret

00001350 <strnlen_P>:
    1350:	fc 01       	movw	r30, r24
    1352:	05 90       	lpm	r0, Z+
    1354:	61 50       	subi	r22, 0x01	; 1
    1356:	70 40       	sbci	r23, 0x00	; 0
    1358:	01 10       	cpse	r0, r1
    135a:	d8 f7       	brcc	.-10     	; 0x1352 <strnlen_P+0x2>
    135c:	80 95       	com	r24
    135e:	90 95       	com	r25
    1360:	8e 0f       	add	r24, r30
    1362:	9f 1f       	adc	r25, r31
    1364:	08 95       	ret

00001366 <strnlen>:
    1366:	fc 01       	movw	r30, r24
    1368:	61 50       	subi	r22, 0x01	; 1
    136a:	70 40       	sbci	r23, 0x00	; 0
    136c:	01 90       	ld	r0, Z+
    136e:	01 10       	cpse	r0, r1
    1370:	d8 f7       	brcc	.-10     	; 0x1368 <strnlen+0x2>
    1372:	80 95       	com	r24
    1374:	90 95       	com	r25
    1376:	8e 0f       	add	r24, r30
    1378:	9f 1f       	adc	r25, r31
    137a:	08 95       	ret

0000137c <fputc>:
    137c:	0f 93       	push	r16
    137e:	1f 93       	push	r17
    1380:	cf 93       	push	r28
    1382:	df 93       	push	r29
    1384:	fb 01       	movw	r30, r22
    1386:	23 81       	ldd	r18, Z+3	; 0x03
    1388:	21 fd       	sbrc	r18, 1
    138a:	03 c0       	rjmp	.+6      	; 0x1392 <fputc+0x16>
    138c:	8f ef       	ldi	r24, 0xFF	; 255
    138e:	9f ef       	ldi	r25, 0xFF	; 255
    1390:	2c c0       	rjmp	.+88     	; 0x13ea <fputc+0x6e>
    1392:	22 ff       	sbrs	r18, 2
    1394:	16 c0       	rjmp	.+44     	; 0x13c2 <fputc+0x46>
    1396:	46 81       	ldd	r20, Z+6	; 0x06
    1398:	57 81       	ldd	r21, Z+7	; 0x07
    139a:	24 81       	ldd	r18, Z+4	; 0x04
    139c:	35 81       	ldd	r19, Z+5	; 0x05
    139e:	42 17       	cp	r20, r18
    13a0:	53 07       	cpc	r21, r19
    13a2:	44 f4       	brge	.+16     	; 0x13b4 <fputc+0x38>
    13a4:	a0 81       	ld	r26, Z
    13a6:	b1 81       	ldd	r27, Z+1	; 0x01
    13a8:	9d 01       	movw	r18, r26
    13aa:	2f 5f       	subi	r18, 0xFF	; 255
    13ac:	3f 4f       	sbci	r19, 0xFF	; 255
    13ae:	31 83       	std	Z+1, r19	; 0x01
    13b0:	20 83       	st	Z, r18
    13b2:	8c 93       	st	X, r24
    13b4:	26 81       	ldd	r18, Z+6	; 0x06
    13b6:	37 81       	ldd	r19, Z+7	; 0x07
    13b8:	2f 5f       	subi	r18, 0xFF	; 255
    13ba:	3f 4f       	sbci	r19, 0xFF	; 255
    13bc:	37 83       	std	Z+7, r19	; 0x07
    13be:	26 83       	std	Z+6, r18	; 0x06
    13c0:	14 c0       	rjmp	.+40     	; 0x13ea <fputc+0x6e>
    13c2:	8b 01       	movw	r16, r22
    13c4:	ec 01       	movw	r28, r24
    13c6:	fb 01       	movw	r30, r22
    13c8:	00 84       	ldd	r0, Z+8	; 0x08
    13ca:	f1 85       	ldd	r31, Z+9	; 0x09
    13cc:	e0 2d       	mov	r30, r0
    13ce:	09 95       	icall
    13d0:	89 2b       	or	r24, r25
    13d2:	e1 f6       	brne	.-72     	; 0x138c <fputc+0x10>
    13d4:	d8 01       	movw	r26, r16
    13d6:	16 96       	adiw	r26, 0x06	; 6
    13d8:	8d 91       	ld	r24, X+
    13da:	9c 91       	ld	r25, X
    13dc:	17 97       	sbiw	r26, 0x07	; 7
    13de:	01 96       	adiw	r24, 0x01	; 1
    13e0:	17 96       	adiw	r26, 0x07	; 7
    13e2:	9c 93       	st	X, r25
    13e4:	8e 93       	st	-X, r24
    13e6:	16 97       	sbiw	r26, 0x06	; 6
    13e8:	ce 01       	movw	r24, r28
    13ea:	df 91       	pop	r29
    13ec:	cf 91       	pop	r28
    13ee:	1f 91       	pop	r17
    13f0:	0f 91       	pop	r16
    13f2:	08 95       	ret

000013f4 <__ultoa_invert>:
    13f4:	fa 01       	movw	r30, r20
    13f6:	aa 27       	eor	r26, r26
    13f8:	28 30       	cpi	r18, 0x08	; 8
    13fa:	51 f1       	breq	.+84     	; 0x1450 <__ultoa_invert+0x5c>
    13fc:	20 31       	cpi	r18, 0x10	; 16
    13fe:	81 f1       	breq	.+96     	; 0x1460 <__ultoa_invert+0x6c>
    1400:	e8 94       	clt
    1402:	6f 93       	push	r22
    1404:	6e 7f       	andi	r22, 0xFE	; 254
    1406:	6e 5f       	subi	r22, 0xFE	; 254
    1408:	7f 4f       	sbci	r23, 0xFF	; 255
    140a:	8f 4f       	sbci	r24, 0xFF	; 255
    140c:	9f 4f       	sbci	r25, 0xFF	; 255
    140e:	af 4f       	sbci	r26, 0xFF	; 255
    1410:	b1 e0       	ldi	r27, 0x01	; 1
    1412:	3e d0       	rcall	.+124    	; 0x1490 <__ultoa_invert+0x9c>
    1414:	b4 e0       	ldi	r27, 0x04	; 4
    1416:	3c d0       	rcall	.+120    	; 0x1490 <__ultoa_invert+0x9c>
    1418:	67 0f       	add	r22, r23
    141a:	78 1f       	adc	r23, r24
    141c:	89 1f       	adc	r24, r25
    141e:	9a 1f       	adc	r25, r26
    1420:	a1 1d       	adc	r26, r1
    1422:	68 0f       	add	r22, r24
    1424:	79 1f       	adc	r23, r25
    1426:	8a 1f       	adc	r24, r26
    1428:	91 1d       	adc	r25, r1
    142a:	a1 1d       	adc	r26, r1
    142c:	6a 0f       	add	r22, r26
    142e:	71 1d       	adc	r23, r1
    1430:	81 1d       	adc	r24, r1
    1432:	91 1d       	adc	r25, r1
    1434:	a1 1d       	adc	r26, r1
    1436:	20 d0       	rcall	.+64     	; 0x1478 <__ultoa_invert+0x84>
    1438:	09 f4       	brne	.+2      	; 0x143c <__ultoa_invert+0x48>
    143a:	68 94       	set
    143c:	3f 91       	pop	r19
    143e:	2a e0       	ldi	r18, 0x0A	; 10
    1440:	26 9f       	mul	r18, r22
    1442:	11 24       	eor	r1, r1
    1444:	30 19       	sub	r19, r0
    1446:	30 5d       	subi	r19, 0xD0	; 208
    1448:	31 93       	st	Z+, r19
    144a:	de f6       	brtc	.-74     	; 0x1402 <__ultoa_invert+0xe>
    144c:	cf 01       	movw	r24, r30
    144e:	08 95       	ret
    1450:	46 2f       	mov	r20, r22
    1452:	47 70       	andi	r20, 0x07	; 7
    1454:	40 5d       	subi	r20, 0xD0	; 208
    1456:	41 93       	st	Z+, r20
    1458:	b3 e0       	ldi	r27, 0x03	; 3
    145a:	0f d0       	rcall	.+30     	; 0x147a <__ultoa_invert+0x86>
    145c:	c9 f7       	brne	.-14     	; 0x1450 <__ultoa_invert+0x5c>
    145e:	f6 cf       	rjmp	.-20     	; 0x144c <__ultoa_invert+0x58>
    1460:	46 2f       	mov	r20, r22
    1462:	4f 70       	andi	r20, 0x0F	; 15
    1464:	40 5d       	subi	r20, 0xD0	; 208
    1466:	4a 33       	cpi	r20, 0x3A	; 58
    1468:	18 f0       	brcs	.+6      	; 0x1470 <__ultoa_invert+0x7c>
    146a:	49 5d       	subi	r20, 0xD9	; 217
    146c:	31 fd       	sbrc	r19, 1
    146e:	40 52       	subi	r20, 0x20	; 32
    1470:	41 93       	st	Z+, r20
    1472:	02 d0       	rcall	.+4      	; 0x1478 <__ultoa_invert+0x84>
    1474:	a9 f7       	brne	.-22     	; 0x1460 <__ultoa_invert+0x6c>
    1476:	ea cf       	rjmp	.-44     	; 0x144c <__ultoa_invert+0x58>
    1478:	b4 e0       	ldi	r27, 0x04	; 4
    147a:	a6 95       	lsr	r26
    147c:	97 95       	ror	r25
    147e:	87 95       	ror	r24
    1480:	77 95       	ror	r23
    1482:	67 95       	ror	r22
    1484:	ba 95       	dec	r27
    1486:	c9 f7       	brne	.-14     	; 0x147a <__ultoa_invert+0x86>
    1488:	00 97       	sbiw	r24, 0x00	; 0
    148a:	61 05       	cpc	r22, r1
    148c:	71 05       	cpc	r23, r1
    148e:	08 95       	ret
    1490:	9b 01       	movw	r18, r22
    1492:	ac 01       	movw	r20, r24
    1494:	0a 2e       	mov	r0, r26
    1496:	06 94       	lsr	r0
    1498:	57 95       	ror	r21
    149a:	47 95       	ror	r20
    149c:	37 95       	ror	r19
    149e:	27 95       	ror	r18
    14a0:	ba 95       	dec	r27
    14a2:	c9 f7       	brne	.-14     	; 0x1496 <__ultoa_invert+0xa2>
    14a4:	62 0f       	add	r22, r18
    14a6:	73 1f       	adc	r23, r19
    14a8:	84 1f       	adc	r24, r20
    14aa:	95 1f       	adc	r25, r21
    14ac:	a0 1d       	adc	r26, r0
    14ae:	08 95       	ret

000014b0 <__prologue_saves__>:
    14b0:	2f 92       	push	r2
    14b2:	3f 92       	push	r3
    14b4:	4f 92       	push	r4
    14b6:	5f 92       	push	r5
    14b8:	6f 92       	push	r6
    14ba:	7f 92       	push	r7
    14bc:	8f 92       	push	r8
    14be:	9f 92       	push	r9
    14c0:	af 92       	push	r10
    14c2:	bf 92       	push	r11
    14c4:	cf 92       	push	r12
    14c6:	df 92       	push	r13
    14c8:	ef 92       	push	r14
    14ca:	ff 92       	push	r15
    14cc:	0f 93       	push	r16
    14ce:	1f 93       	push	r17
    14d0:	cf 93       	push	r28
    14d2:	df 93       	push	r29
    14d4:	cd b7       	in	r28, 0x3d	; 61
    14d6:	de b7       	in	r29, 0x3e	; 62
    14d8:	ca 1b       	sub	r28, r26
    14da:	db 0b       	sbc	r29, r27
    14dc:	0f b6       	in	r0, 0x3f	; 63
    14de:	f8 94       	cli
    14e0:	de bf       	out	0x3e, r29	; 62
    14e2:	0f be       	out	0x3f, r0	; 63
    14e4:	cd bf       	out	0x3d, r28	; 61
    14e6:	09 94       	ijmp

000014e8 <__epilogue_restores__>:
    14e8:	2a 88       	ldd	r2, Y+18	; 0x12
    14ea:	39 88       	ldd	r3, Y+17	; 0x11
    14ec:	48 88       	ldd	r4, Y+16	; 0x10
    14ee:	5f 84       	ldd	r5, Y+15	; 0x0f
    14f0:	6e 84       	ldd	r6, Y+14	; 0x0e
    14f2:	7d 84       	ldd	r7, Y+13	; 0x0d
    14f4:	8c 84       	ldd	r8, Y+12	; 0x0c
    14f6:	9b 84       	ldd	r9, Y+11	; 0x0b
    14f8:	aa 84       	ldd	r10, Y+10	; 0x0a
    14fa:	b9 84       	ldd	r11, Y+9	; 0x09
    14fc:	c8 84       	ldd	r12, Y+8	; 0x08
    14fe:	df 80       	ldd	r13, Y+7	; 0x07
    1500:	ee 80       	ldd	r14, Y+6	; 0x06
    1502:	fd 80       	ldd	r15, Y+5	; 0x05
    1504:	0c 81       	ldd	r16, Y+4	; 0x04
    1506:	1b 81       	ldd	r17, Y+3	; 0x03
    1508:	aa 81       	ldd	r26, Y+2	; 0x02
    150a:	b9 81       	ldd	r27, Y+1	; 0x01
    150c:	ce 0f       	add	r28, r30
    150e:	d1 1d       	adc	r29, r1
    1510:	0f b6       	in	r0, 0x3f	; 63
    1512:	f8 94       	cli
    1514:	de bf       	out	0x3e, r29	; 62
    1516:	0f be       	out	0x3f, r0	; 63
    1518:	cd bf       	out	0x3d, r28	; 61
    151a:	ed 01       	movw	r28, r26
    151c:	08 95       	ret

0000151e <_exit>:
    151e:	f8 94       	cli

00001520 <__stop_program>:
    1520:	ff cf       	rjmp	.-2      	; 0x1520 <__stop_program>
